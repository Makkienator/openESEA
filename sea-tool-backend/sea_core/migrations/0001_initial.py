# Generated by Django 2.2.7 on 2020-06-19 09:54

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name_prefix', models.CharField(blank=True, max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('registered_on', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DirectIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=45)),
                ('max_number', models.IntegerField(null=True)),
                ('min_number', models.IntegerField(null=True)),
            ],
            options={
                'verbose_name': 'direct_indicator',
                'verbose_name_plural': 'direct_indicators',
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('is_public', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, default='organization/default.png', upload_to='organization/')),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('suffix', models.CharField(blank=True, max_length=10, null=True)),
                ('default', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('TEXT', 'text'), ('NUMBER', 'number'), ('RANGE', 'range'), ('SELECT', 'select'), ('MULTI_SELECT', 'multi_select'), ('CHECKBOX', 'checkbox'), ('MULTI_CHECKBOX', 'multi_checkbox')], max_length=100)),
            ],
            options={
                'verbose_name': 'question',
                'verbose_name_plural': 'questions',
            },
        ),
        migrations.CreateModel(
            name='UserOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizations', to='sea_core.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True, null=True)),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='sea_core.Method')),
                ('parent_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_topics', to='sea_core.Topic')),
                ('questions', models.ManyToManyField(through='sea_core.DirectIndicator', to='sea_core.Question')),
            ],
            options={
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=140)),
                ('value', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='sea_core.Question')),
            ],
            options={
                'db_table': 'sea_core_question_option',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='topics',
            field=models.ManyToManyField(through='sea_core.DirectIndicator', to='sea_core.Topic'),
        ),
        migrations.AddField(
            model_name='organization',
            name='users',
            field=models.ManyToManyField(through='sea_core.UserOrganization', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='method',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='methods', to='sea_core.Organization'),
        ),
        migrations.AddField(
            model_name='directindicator',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sea_core.Question'),
        ),
        migrations.AddField(
            model_name='directindicator',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='direct_indicators', to='sea_core.Topic'),
        ),
        migrations.AddField(
            model_name='user',
            name='organizations',
            field=models.ManyToManyField(through='sea_core.UserOrganization', to='sea_core.Organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='IndirectIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('formula', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='indirect_indicators', to='sea_core.Topic')),
            ],
            options={
                'unique_together': {('name', 'topic')},
            },
        ),
    ]
