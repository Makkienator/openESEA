{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\visualisations\\charts\\LineChart.vue?vue&type=template&id=d0967888","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\visualisations\\charts\\LineChart.vue","mtime":1707572265298},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jayB9IGZyb20gInZ1ZSI7CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgY29uc3QgX2NvbXBvbmVudF92dWVfZWNoYXJ0cyA9IF9yZXNvbHZlQ29tcG9uZW50KCJ2dWUtZWNoYXJ0cyIpOwogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X3Z1ZV9lY2hhcnRzLCB7CiAgICBvcHRpb246ICRvcHRpb25zLmNyZWF0ZU9wdGlvbnMoJHByb3BzLmNoYXJ0RGF0YSksCiAgICBhdXRvcmVzaXplOiAiIgogIH0sIG51bGwsIDggLyogUFJPUFMgKi8sIFsib3B0aW9uIl0pOwp9"},{"version":3,"names":["_createBlock","_component_vue_echarts","option","$options","createOptions","$props","chartData","autoresize"],"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\visualisations\\charts\\LineChart.vue"],"sourcesContent":["<template>\r\n    <vue-echarts :option=\"createOptions(chartData)\" autoresize>\r\n    </vue-echarts>\r\n</template>\r\n\r\n<script>\r\nimport 'echarts'\r\nimport ECharts from 'vue-echarts'\r\nimport { use } from 'echarts/core'\r\nimport { LineChart } from 'echarts/charts'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\n\r\nuse([LineChart, CanvasRenderer])\r\n\r\nexport default {\r\n    components: {\r\n        'vue-echarts': ECharts\r\n    },\r\n    props: {\r\n        chartData: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        createOptions (chartData) {\r\n            const title = chartData.title\r\n            const titleOptions = {\r\n                text: title,\r\n                left: 'center',\r\n                textStyle: {\r\n                    fontSize: 12,\r\n                    overflow: 'break'\r\n                }\r\n            }\r\n            const mapping = chartData?.mapping\r\n            if (!mapping) return { title: titleOptions }\r\n            const categoryKey = mapping?.['Category Field']?.key\r\n            const valueKey = mapping?.['Value Field']?.key\r\n            if (!categoryKey || !valueKey) return { title: titleOptions }\r\n            const categoryName = mapping?.['Category Field']?.name\r\n            const valueName = mapping?.['Value Field']?.name\r\n            const data = chartData.data\r\n            const categories = data.map(el => el[categoryKey])\r\n            const values = data.map(el => el[valueKey])\r\n\r\n            const chartOptions = chartData.options\r\n            const categoryLimit = chartOptions?.categoryLimit ?? 0\r\n            const areaStyle = chartOptions?.showArea ? {} : null\r\n            const boundaryGap = chartOptions?.showBoundaryGap ?? true\r\n\r\n            var sliderObject = null\r\n            if (categoryLimit > 0) {\r\n                sliderObject = {\r\n                    type: 'slider', // Create a slider\r\n                    show: true, // Show It\r\n                    xAxisIndex: [0], // Show on correct axis\r\n                    startValue: 0, // Show `categoryLimit` values, first starting at index 0\r\n                    endValue: categoryLimit - 1, // Show `categoryLimit` values\r\n                    handleSize: 0, // Disable handles at the edge of the slider\r\n                    zoomLock: true, // Prevent adjusting the slider size\r\n                    showDataShadow: false, // Hide the miniature chart\r\n                    brushSelect: false // Prevent arbitrary brush selection\r\n                }\r\n            }\r\n\r\n            const options = {\r\n                title: titleOptions,\r\n                xAxis: {\r\n                    type: 'category',\r\n                    name: categoryName,\r\n                    boundaryGap: boundaryGap,\r\n                    nameLocation: 'center',\r\n                    nameTextStyle: {\r\n                        align: 'left'\r\n                    },\r\n                    data: categories,\r\n                    axisLabel: {\r\n                        interval: 0,\r\n                        rotate: 37.5\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    type: 'value',\r\n                    name: valueName\r\n                },\r\n                dataZoom: [sliderObject],\r\n                grid: {\r\n                    top: '15%',\r\n                    bottom: sliderObject ? '5%' : '20%',\r\n                    left: '5%',\r\n                    right: '5%',\r\n                    containLabel: true\r\n                },\r\n                tooltip: {\r\n                    show: 'item'\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'line',\r\n                        data: values,\r\n                        areaStyle: areaStyle\r\n                    }\r\n                ]\r\n            }\r\n            return options\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";;;uBACIA,YAAA,CACcC,sBAAA;IADAC,MAAM,EAAEC,QAAA,CAAAC,aAAa,CAACC,MAAA,CAAAC,SAAS;IAAGC,UAAU,EAAV","ignoreList":[]}]}