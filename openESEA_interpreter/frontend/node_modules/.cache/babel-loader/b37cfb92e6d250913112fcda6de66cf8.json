{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\Visualisation.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\Visualisation.vue","mtime":1707572265293},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","mapActions","EmptyVisualisation","SingleValueDisplay","FractionalValueDisplay","ProgressBar","RadialProgressBar","PieChart","BarChart","GroupedBarChart","StackedBarChart","LineChart","MultiSeriesLineChart","Table","ProgressSpinner","components","props","config","type","Object","required","data","dataSet","computed","visualisation","get","getVisualisation","visualisationTitle","getVisualisationTitle","visualisationType","getVisualisationType","visualisationComponent","position","getVisualisationPosition","styleObject","left","toString","right","bottom","top","watch","handler","deep","created","createAndSaveDataset","methods","isClicked","event","stopPropagation","updateSelectionConfig","isEmpty","string","undefined","dataset","createDataset","saveVisualisationDataset","collectData","options","collectVisualisationOptions","title","_this$getDataDisplay","categoryLimit","getCategoryLimit","sideways","getSideways","dataDisplayOptions","getDataDisplay","Options","showValue","ShowValue","showArea","ShowArea","showBoundaryGap","ShowBoundaryGap","optionKey","option","createDatasetForFields","retrieveInfoForField","field","fieldName","Indicators","retrieveIndicatorsInfo","Indicator","retrieveIndicatorInfo","retrieveNamedFieldInfo","Values","retrieveFieldValuesInfo","getField","getValueField","getValueFields","getFractionalValueField","getTotalValueField","getCurrentValueField","getTargetValueField","getCategoryField","getGroupingField","getStackingField","fieldIndicator","Name","fieldFilters","Filters","indicatorDataSet","getIndicatorDataSet","indicatorName","name","indicatorData","applyVisualisationFilters","fieldKey","info","key","indicator","fieldIndicators","indicatorNumber","length","indicatorFieldKey","row","rowData","Year","push","indicators","origFieldName","fieldValues","fieldValue","values","namedField","_dataSet","filters","collectVisualisationFilters","filter","filterField","Field","keys","includes","filterValues","_await$this$getOvervi","_await$this$getVisual","overviewFilters","getOverviewFilters","visualisationFilters","getVisualisationFilters","combinedFilters","concat","summarizeData","valueFields","groupingFields","accumulatedRows","valueField","valueKey","valueData","groupingAlreadyPresent","accumulatedRow","sameGrouping","groupingField","groupingKey","_accumulatedRow$value","newValue","isNaN","Number","newGroupingRow","collectFields","fieldNames","fieldsInfo","Array","isArray","fieldInfo","i","subFieldInfo","fieldNumber","valueFieldNames","groupingFieldNames","console","log","mapCategoryValues","groupingKeys","map","sort","a","b","allFields","mapping","createMapping","fields","categoryValues","categoryKey","valueIndicators","valueDataRow","valueFieldIndicatorOrder"],"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\Visualisation.vue"],"sourcesContent":["<template>\r\n    <div class=\"visualisation\" v-on:click=\"isClicked\" :style=\"styleObject\">\r\n        <!-- Display visualisation of type `visualisationComponent` and giving the `dataSet` object when this is loaded -->\r\n        <component v-if=\"dataSet\" :is=\"visualisationComponent\"\r\n            :chartData=\"dataSet\">\r\n        </component>\r\n        <!-- While waiting, display progress spinner -->\r\n        <div v-else class=\"loading-container\">\r\n            <ProgressSpinner class=\"progress-spinner\">\r\n            </ProgressSpinner>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\n\r\nimport EmptyVisualisation from './visualisations/charts/EmptyVisualisation.vue'\r\nimport SingleValueDisplay from './visualisations/charts/SingleValueDisplay.vue'\r\nimport FractionalValueDisplay from './visualisations/charts/FractionalValueDisplay.vue'\r\nimport ProgressBar from './visualisations/charts/ProgressBar.vue'\r\nimport RadialProgressBar from './visualisations/charts/RadialProgressBar.vue'\r\nimport PieChart from './visualisations/charts/PieChart.vue'\r\nimport BarChart from './visualisations/charts/BarChart.vue'\r\nimport GroupedBarChart from './visualisations/charts/GroupedBarChart.vue'\r\nimport StackedBarChart from './visualisations/charts/StackedBarChart.vue'\r\nimport LineChart from './visualisations/charts/LineChart.vue'\r\nimport MultiSeriesLineChart from './visualisations/charts/MultiSeriesLineChart.vue'\r\nimport Table from './visualisations/tables/Table.vue'\r\n\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\n\r\nexport default {\r\n    components: {\r\n        EmptyVisualisation,\r\n        SingleValueDisplay,\r\n        FractionalValueDisplay,\r\n        ProgressBar,\r\n        RadialProgressBar,\r\n        PieChart,\r\n        BarChart,\r\n        GroupedBarChart,\r\n        StackedBarChart,\r\n        LineChart,\r\n        MultiSeriesLineChart,\r\n        Table,\r\n\r\n        ProgressSpinner\r\n    },\r\n    props: {\r\n        config: { type: Object, required: true }\r\n    },\r\n    data () {\r\n        return {\r\n            dataSet: null\r\n        }\r\n    },\r\n    computed: {\r\n        visualisation: {\r\n            get () { return this.getVisualisation()(this.config) }\r\n        },\r\n        visualisationTitle: {\r\n            get () { return this.getVisualisationTitle()(this.config) }\r\n        },\r\n        visualisationType: {\r\n            get () { return this.getVisualisationType()(this.config) }\r\n        },\r\n        visualisationComponent: {\r\n            get () {\r\n                switch (this.visualisationType) {\r\n                    case 'Single Value Display':\r\n                        return 'SingleValueDisplay'\r\n                    case 'Fractional Value Display':\r\n                        return 'FractionalValueDisplay'\r\n                    case 'Progress Bar':\r\n                        return 'ProgressBar'\r\n                    case 'Radial Progress Bar':\r\n                        return 'RadialProgressBar'\r\n                    case 'Pie Chart':\r\n                        return 'PieChart'\r\n                    case 'Bar Chart':\r\n                        return 'BarChart'\r\n                    case 'Grouped Bar Chart':\r\n                        return 'GroupedBarChart'\r\n                    case 'Stacked Bar Chart':\r\n                        return 'StackedBarChart'\r\n                    case 'Line Chart':\r\n                        return 'LineChart'\r\n                    case 'Multi-Series Line Chart':\r\n                        return 'MultiSeriesLineChart'\r\n                    case 'Table':\r\n                        return 'Table'\r\n                    default:\r\n                        return 'EmptyVisualisation'\r\n                }\r\n            }\r\n        },\r\n        position: {\r\n            get () { return this.getVisualisationPosition()(this.config) }\r\n        },\r\n        styleObject () {\r\n            var styleObject = {}\r\n            const position = this.position\r\n            if (position) {\r\n                styleObject.position = 'absolute'\r\n                styleObject.left = position['X Start'].toString() + '%'\r\n                styleObject.right = (100 - position['X End'].toString()) + '%'\r\n                styleObject.bottom = position['Y Start'].toString() + '%'\r\n                styleObject.top = (100 - position['Y End'].toString()) + '%'\r\n            }\r\n            return styleObject\r\n        }\r\n    },\r\n    watch: {\r\n        visualisation: {\r\n            handler: 'createAndSaveDataset',\r\n            deep: true\r\n        }\r\n    },\r\n    async created () {\r\n        await this.createAndSaveDataset()\r\n    },\r\n    methods: {\r\n        ...mapGetters('dashboardData', ['getIndicatorData', 'getIndicatorDataSet', 'getVisualisationDatasets']),\r\n        ...mapActions('dashboardData', ['saveVisualisationDataset']),\r\n        ...mapGetters('dashboardModel', ['getOverviewFilters', 'getVisualisation', 'getDataDisplay', 'getDataConfiguration', 'getVisualisationFilters', 'getValueField', 'getValueFields', 'getFractionalValueField', 'getTotalValueField', 'getCurrentValueField', 'getTargetValueField', 'getCategoryField', 'getGroupingField', 'getStackingField', 'getCategoryLimit', 'getSideways', 'getVisualisationType', 'getVisualisationPosition', 'getVisualisationTitle']),\r\n        ...mapActions('dashboardModel', ['updateSelectionConfig']),\r\n        async isClicked (event) {\r\n            event.stopPropagation()\r\n            await this.updateSelectionConfig(this.config)\r\n        },\r\n        isEmpty (string) { return string === null || string === undefined || string === '' },\r\n        // Create dataset and save the dataset\r\n        async createAndSaveDataset () {\r\n            // Create data set\r\n            const dataset = await this.createDataset()\r\n            // Update visualisation dataset\r\n            this.dataSet = dataset\r\n            // Save dataset for sending to rl model\r\n            await this.saveVisualisationDataset({ config: this.config, dataset: dataset })\r\n        },\r\n        // Create dataset consisting of data, mapping, visualisation options and a title\r\n        async createDataset () {\r\n            // Collect data\r\n            var dataset = await this.collectData() // { mapping: ..., data: ... }\r\n            // console.log(dataset)\r\n            // Add options to dataset\r\n            dataset.options = await this.collectVisualisationOptions()\r\n            // Add title to data set\r\n            dataset.title = this.visualisationTitle\r\n\r\n            // Return dataset information\r\n            return dataset\r\n        },\r\n        async collectVisualisationOptions () {\r\n            var options = {}\r\n            // Add category limit\r\n            const categoryLimit = await this.getCategoryLimit()(this.config)\r\n            if (categoryLimit !== null && categoryLimit !== undefined) { options.categoryLimit = categoryLimit }\r\n            // Add sideways indicator\r\n            const sideways = await this.getSideways()(this.config)\r\n            if (sideways !== null && sideways !== undefined) { options.sideways = sideways }\r\n            const dataDisplayOptions = await this.getDataDisplay()(this.config)?.Options\r\n            // Add showValue indicator\r\n            const showValue = dataDisplayOptions?.ShowValue\r\n            if (showValue !== null && showValue !== undefined) { options.showValue = showValue }\r\n            // Add showArea indicator\r\n            const showArea = dataDisplayOptions?.ShowArea\r\n            if (showArea !== null && showArea !== undefined) { options.showArea = showArea }\r\n            // Add showBoundaryGap indicator\r\n            const showBoundaryGap = dataDisplayOptions?.ShowBoundaryGap\r\n            if (showBoundaryGap !== null && showBoundaryGap !== undefined) { options.showBoundaryGap = showBoundaryGap }\r\n            for (const optionKey in dataDisplayOptions) {\r\n                const option = dataDisplayOptions[optionKey]\r\n                if (option !== null && option !== undefined) {\r\n                    options[optionKey] = option\r\n                }\r\n            }\r\n            return options\r\n        },\r\n        // For each visualisation type create the corresponding dataset\r\n        async collectData () {\r\n            // return await this.createDatasetForFields(['Value Field', 'Value Fields', 'Fractional Value Field', 'Total Value Field', 'Current Value Field', 'Target Value Field'], ['Category Field', 'Stacking Field', 'Grouping Field'])\r\n            // Create dataset based for this visualisation type\r\n            switch (this.visualisationType) {\r\n                case 'Single Value Display':\r\n                    return await this.createDatasetForFields(['Value Field'])\r\n                case 'Fractional Value Display':\r\n                    return await this.createDatasetForFields(['Fractional Value Field', 'Total Value Field'])\r\n                case 'Progress Bar':\r\n                case 'Radial Progress Bar':\r\n                    return await this.createDatasetForFields(['Current Value Field', 'Target Value Field'])\r\n                case 'Pie Chart':\r\n                case 'Bar Chart':\r\n                case 'Line Chart':\r\n                case 'Table':\r\n                    return await this.createDatasetForFields(['Value Field'], ['Category Field'])\r\n                case 'Multi-Series Line Chart':\r\n                    return await this.createDatasetForFields(['Value Fields'], ['Category Field'])\r\n                case 'Grouped Bar Chart':\r\n                case 'Stacked Bar Chart':\r\n                    return await this.createDatasetForFields(['Value Field'], ['Category Field', 'Stacking Field', 'Grouping Field'])\r\n                default:\r\n                    return {}\r\n            }\r\n        },\r\n        async retrieveInfoForField (field, fieldName) {\r\n            if (field?.Indicators) {\r\n                return await this.retrieveIndicatorsInfo(field)\r\n            }\r\n            if (field?.Indicator) {\r\n                return await this.retrieveIndicatorInfo(field)\r\n            }\r\n            if (field?.['Named Field']) {\r\n                return await this.retrieveNamedFieldInfo(field)\r\n            }\r\n            if (field?.Values) {\r\n                return await this.retrieveFieldValuesInfo(field, fieldName)\r\n            }\r\n            return null\r\n        },\r\n        async getField (fieldName) {\r\n            switch (fieldName) {\r\n                case 'Value Field':\r\n                    return await this.getValueField()(this.config)\r\n                case 'Value Fields':\r\n                    return await this.getValueFields()(this.config)\r\n                case 'Fractional Value Field':\r\n                    return await this.getFractionalValueField()(this.config)\r\n                case 'Total Value Field':\r\n                    return await this.getTotalValueField()(this.config)\r\n                case 'Current Value Field':\r\n                    return await this.getCurrentValueField()(this.config)\r\n                case 'Target Value Field':\r\n                    return await this.getTargetValueField()(this.config)\r\n                case 'Category Field':\r\n                    return await this.getCategoryField()(this.config)\r\n                case 'Grouping Field':\r\n                    return await this.getGroupingField()(this.config)\r\n                case 'Stacking Field':\r\n                    return await this.getStackingField()(this.config)\r\n                case null:\r\n                case '':\r\n                default:\r\n                    return null\r\n            }\r\n        },\r\n        async retrieveIndicatorInfo (field) {\r\n            const fieldIndicator = field.Indicator\r\n            const fieldName = field.Name\r\n            const fieldFilters = field.Filters\r\n\r\n            // Get dataset for the current value field indicator\r\n            const indicatorDataSet = await this.getIndicatorDataSet()(fieldIndicator)\r\n            const indicatorName = indicatorDataSet.name\r\n            const indicatorData = await this.applyVisualisationFilters(indicatorDataSet.data, fieldFilters)\r\n\r\n            // Devise mapping for field\r\n            const fieldKey = indicatorName\r\n            const info = { key: fieldKey, name: fieldName, data: indicatorData, indicator: fieldIndicator }\r\n            return info\r\n        },\r\n        async retrieveIndicatorsInfo (field) {\r\n            const fieldIndicators = field.Indicators\r\n            const fieldName = field.Name\r\n            const fieldKey = this.isEmpty(fieldName) ? 'Value Field' : fieldName\r\n\r\n            var dataset = []\r\n            for (let indicatorNumber = 0; indicatorNumber < fieldIndicators.length; indicatorNumber++) {\r\n                const fieldIndicator = fieldIndicators[indicatorNumber]\r\n                if (!fieldIndicator) { continue }\r\n\r\n                // Get dataset for the current value field indicator\r\n                const indicatorDataSet = await this.getIndicatorDataSet()(fieldIndicator)\r\n                const indicatorName = indicatorDataSet.name\r\n                const indicatorData = await this.applyVisualisationFilters(indicatorDataSet.data)\r\n\r\n                // Collect data together with indicator name\r\n                const indicatorFieldKey = indicatorName\r\n                for (var row of indicatorData) {\r\n                    var rowData = {}\r\n                    rowData['Indicator Order'] = indicatorNumber\r\n                    rowData[fieldKey] = row[indicatorFieldKey]\r\n                    rowData.Year = row.Year\r\n                    dataset.push(rowData)\r\n                }\r\n            }\r\n\r\n            // Devise mapping for field\r\n            const info = { key: fieldKey, name: fieldName, data: dataset, indicators: fieldIndicators }\r\n            return info\r\n        },\r\n        async retrieveFieldValuesInfo (field, origFieldName) {\r\n            const fieldValues = field.Values\r\n            const fieldName = field.Name\r\n            const fieldKey = this.isEmpty(fieldName) ? (origFieldName ?? 'Category Field') : fieldName\r\n\r\n            var dataset = []\r\n            for (const fieldValue of fieldValues) {\r\n                var rowData = {}\r\n                rowData[fieldKey] = fieldValue\r\n                dataset.push(rowData)\r\n            }\r\n\r\n            // Devise mapping for field\r\n            const info = { key: fieldKey, name: fieldName, data: dataset, values: fieldValues }\r\n            return info\r\n        },\r\n        async retrieveNamedFieldInfo (field) {\r\n            const fieldKey = field['Named Field']\r\n            const fieldName = field.Name\r\n\r\n            // Devise mapping for field\r\n            const info = { key: fieldKey, name: fieldName, namedField: fieldName }\r\n            return info\r\n        },\r\n        // Apply filters to a dataset\r\n        async applyVisualisationFilters (dataSet, fieldFilters) {\r\n            const filters = await this.collectVisualisationFilters(fieldFilters)\r\n            if (filters && dataSet?.[0]) {\r\n                for (const filter of filters) {\r\n                    const filterField = filter.Field\r\n                    if (!Object.keys(dataSet[0]).includes(filterField)) continue\r\n                    const filterValues = filter.Values\r\n                    dataSet = dataSet.filter(row => filterValues.includes(row[filterField]))\r\n                }\r\n            }\r\n            return dataSet\r\n        },\r\n        // Collect filters\r\n        async collectVisualisationFilters (fieldFilters) {\r\n            // Get filters\r\n            const overviewFilters = await this.getOverviewFilters()(this.config) ?? []\r\n            const visualisationFilters = await this.getVisualisationFilters()(this.config) ?? []\r\n            // Combine and return filters\r\n            const combinedFilters = overviewFilters.concat(visualisationFilters).concat(fieldFilters ?? [])\r\n            return combinedFilters\r\n        },\r\n        // Summarize data by summing value fields for each grouping in the grouping fields\r\n        summarizeData (valueFields, groupingFields) {\r\n            // List for storing summarized rows accumulated so far\r\n            var accumulatedRows = []\r\n            // Summarize values for all value fields\r\n            for (const valueField of valueFields) {\r\n                const valueKey = valueField.key\r\n                const valueData = valueField.data\r\n                // For each row in data, add value to existing row or add new row with value\r\n                for (const row of valueData) {\r\n                    var groupingAlreadyPresent = false\r\n                    // Check if same grouping already exists in accumulated rows\r\n                    for (var accumulatedRow of accumulatedRows) {\r\n                        var sameGrouping = true\r\n                        for (const groupingField of groupingFields) {\r\n                            const groupingKey = (groupingField?.values !== undefined && groupingField?.values !== null) ? 'Indicator Order' : groupingField.key\r\n                            if (accumulatedRow[groupingKey] !== row[groupingKey]) {\r\n                                sameGrouping = false\r\n                                break\r\n                            }\r\n                        }\r\n                        // If so add value to current value\r\n                        if (sameGrouping) {\r\n                            const newValue = (accumulatedRow[valueKey] ?? 0) + (isNaN(row[valueKey]) ? 0 : Number(row[valueKey]))\r\n                            accumulatedRow[valueKey] = newValue\r\n                            groupingAlreadyPresent = true\r\n                            break\r\n                        }\r\n                    }\r\n                    // Otherwise if grouping is not present, add a new row for this grouping together with the value\r\n                    if (!groupingAlreadyPresent) {\r\n                        var newGroupingRow = {}\r\n                        const newValue = isNaN(row[valueKey]) ? 0 : Number(row[valueKey])\r\n                        newGroupingRow[valueKey] = newValue\r\n                        for (const groupingField of groupingFields) {\r\n                            newGroupingRow[groupingField.key] = row[groupingField.key]\r\n                            // Keep track of indicator order in case of duplicate category values\r\n                            if (groupingField?.values !== undefined && groupingField?.values !== null) {\r\n                                newGroupingRow['Indicator Order'] = row['Indicator Order']\r\n                            }\r\n                        }\r\n                        accumulatedRows.push(newGroupingRow)\r\n                    }\r\n                }\r\n            }\r\n            return accumulatedRows\r\n        },\r\n        async collectFields (fieldNames) {\r\n            var fieldsInfo = []\r\n            for (const fieldName of fieldNames) {\r\n                const field = await this.getField(fieldName)\r\n                if (!Array.isArray(field)) {\r\n                    var fieldInfo = await this.retrieveInfoForField(field, fieldName)\r\n                    if (fieldInfo === null) continue\r\n                    fieldInfo.fieldName = fieldName\r\n                    fieldsInfo.push(fieldInfo)\r\n                } else {\r\n                    for (let i = 0; i < field.length; i++) {\r\n                        var subFieldInfo = await this.retrieveInfoForField(field[i], fieldName)\r\n                        if (subFieldInfo === null) continue\r\n                        subFieldInfo.fieldName = fieldName + ' ' + i.toString()\r\n                        subFieldInfo.fieldNumber = i\r\n                        fieldsInfo.push(subFieldInfo)\r\n                    }\r\n                }\r\n            }\r\n            return fieldsInfo\r\n        },\r\n        async createDatasetForFields (valueFieldNames, groupingFieldNames = []) {\r\n            // Collect value fields\r\n            const valueFields = await this.collectFields(valueFieldNames)\r\n            // Collect grouping fields\r\n            const groupingFields = await this.collectFields(groupingFieldNames)\r\n\r\n            // Map category values to indicators\r\n            console.log(valueFields)\r\n            console.log(groupingFields)\r\n            this.mapCategoryValues(valueFields, groupingFields)\r\n\r\n            // Create dataset by summarizing data\r\n            var dataset = this.summarizeData(valueFields, groupingFields)\r\n            console.log(dataset)\r\n\r\n            // Sort dataset by year if this column is in dataset\r\n            const groupingKeys = groupingFields.map(field => field.key)\r\n            if (groupingKeys.includes('Year')) dataset = dataset.sort((a, b) => a.Year - b.Year)\r\n\r\n            // Create mapping from fields\r\n            const allFields = valueFields.concat(groupingFields)\r\n            const mapping = this.createMapping(allFields)\r\n\r\n            // Return data info\r\n            const dataSet = { data: dataset, mapping: mapping }\r\n            console.log(dataSet)\r\n            return dataSet\r\n        },\r\n        createMapping (fields) {\r\n            var mapping = {}\r\n            for (const field of fields) {\r\n                mapping[field.fieldName] = { key: field.key, name: field.name }\r\n            }\r\n            return mapping\r\n        },\r\n        mapCategoryValues (valueFields, groupingFields) {\r\n            // Map list of category values to list of indicators\r\n            console.log(valueFields, groupingFields)\r\n            for (const groupingField of groupingFields) {\r\n                const categoryValues = groupingField.values\r\n                if (categoryValues) {\r\n                    const categoryKey = groupingField.key\r\n                    for (const valueField of valueFields) {\r\n                        const valueIndicators = valueField.indicators\r\n                        if (valueIndicators) {\r\n                            const valueData = valueField.data\r\n                            for (var valueDataRow of valueData) {\r\n                                const valueFieldIndicatorOrder = valueDataRow['Indicator Order']\r\n                                valueDataRow[categoryKey] = categoryValues[valueFieldIndicatorOrder]\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.loading-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.progress-spinner {\r\n    max-height: 100%;\r\n    max-width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}