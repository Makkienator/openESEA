{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\forms\\FormulaFormCorrect.vue?vue&type=template&id=5aeba3d0&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\forms\\FormulaFormCorrect.vue","mtime":1707572265303},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jaywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSB9IGZyb20gInZ1ZSI7CmNvbnN0IF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJwLWQtZmxleCBwLWFpLWNlbnRlciBwLW0tMCIsCiAgc3R5bGU6IHt9Cn07CmNvbnN0IF9ob2lzdGVkXzIgPSB7CiAgcmVmOiAiZm9jdXN3aW5kb3ciLAogIHN0eWxlOiB7CiAgICAicG9zaXRpb24iOiAicmVsYXRpdmUiLAogICAgIndpZHRoIjogIjEwMCUiCiAgfQp9Owpjb25zdCBfaG9pc3RlZF8zID0gewogIGtleTogMCwKICBpZDogImF1dG9jb21wbGV0ZSIsCiAgc3R5bGU6IHsKICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICJwb3NpdGlvbiI6ICJhYnNvbHV0ZSIsCiAgICAiei1pbmRleCI6ICI1MCIKICB9Cn07CmNvbnN0IF9ob2lzdGVkXzQgPSBbIm9uQ2xpY2siXTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICBjb25zdCBfY29tcG9uZW50X1RleHRhcmVhID0gX3Jlc29sdmVDb21wb25lbnQoIlRleHRhcmVhIik7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9UZXh0YXJlYSwgewogICAgcmVmOiAiZXhwcmVzc2lvbiIsCiAgICBhdXRvUmVzaXplOiB0cnVlLAogICAgcm93czogIjEiLAogICAgbW9kZWxWYWx1ZTogJGRhdGEubGF6eUZvcm11bGEsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gJGV2ZW50ID0+ICRkYXRhLmxhenlGb3JtdWxhID0gJGV2ZW50KSwKICAgIHBsYWNlaG9sZGVyOiBfY3R4LmFzc2lnbm1lbnQgPyAnVHlwZSAjaWZlICBvciAjaWZmIGZvciBlaXRoZXIgYW4gZW1wdHkgb3IgZmlsbGVkIGlmL2Vsc2Ugc3RhdGVtZW50LiBUeXBlIFsgdG8gaW5zZXJ0IGFuIGluZGljYXRvci4nIDogJ1dyaXRlIGFueSBleHByZXNzaW9uIHlvdSB3YW50IGhlcmUuIFR5cGluZyBbIHdpbGwgcG9wIHVwIGFuIGF1dG9jb21wbGV0ZSBsaXN0LicsCiAgICBzdHlsZTogewogICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICJwb3NpdGlvbiI6ICJyZWxhdGl2ZSIKICAgIH0sCiAgICBhdXRvY29tcGxldGU6ICJvZmYiCiAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgWyJtb2RlbFZhbHVlIiwgInBsYWNlaG9sZGVyIl0pLCAkZGF0YS5hdXRvQ29tcGxldGUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8zLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkb3B0aW9ucy5pbmRpY2F0b3JzLCBpbmRpY2F0b3IgPT4gewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgewogICAgICBrZXk6IGluZGljYXRvciwKICAgICAgY2xhc3M6ICJhdXRvY29tcGxldGUtaXRlbSIsCiAgICAgIHN0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiNHB4IiwKICAgICAgICAiYm9yZGVyIjogIjAuNXB4IHNvbGlkIGxpZ2h0Z3JleSIsCiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIiwKICAgICAgICAicG9zaXRpb24iOiAicmVsYXRpdmUiCiAgICAgIH0sCiAgICAgIG9uQ2xpY2s6ICRldmVudCA9PiAkb3B0aW9ucy5jaG9vc2VJbmRpY2F0b3IoaW5kaWNhdG9yKQogICAgfSwgX3RvRGlzcGxheVN0cmluZyhpbmRpY2F0b3Iua2V5KSwgOSAvKiBURVhULCBQUk9QUyAqLywgX2hvaXN0ZWRfNCk7CiAgfSksIDEyOCAvKiBLRVlFRF9GUkFHTUVOVCAqLykpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSwgNTEyIC8qIE5FRURfUEFUQ0ggKi8pXSk7Cn0="},{"version":3,"names":["class","style","ref","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_Textarea","autoResize","rows","$data","lazyFormula","$event","placeholder","_ctx","assignment","autocomplete","autoComplete","_hoisted_3","_Fragment","_renderList","$options","indicators","indicator","key","onClick","chooseIndicator","_hoisted_4"],"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\forms\\FormulaFormCorrect.vue"],"sourcesContent":["<template>\r\n    <div class=\"p-d-flex p-ai-center p-m-0\" style=\"\">\r\n        <div ref=\"focuswindow\" style=\"position: relative; width: 100%;\">\r\n            <Textarea ref=\"expression\" :autoResize=\"true\" rows=\"1\" v-model=\"lazyFormula\" :placeholder=\"(assignment) ? 'Type #ife  or #iff for either an empty or filled if/else statement. Type [ to insert an indicator.' : 'Write any expression you want here. Typing [ will pop up an autocomplete list.'\" style=\"width: 100%; position: relative;\" autocomplete=\"off\" />\r\n            <div id=\"autocomplete\" v-if=\"autoComplete\" style=\"width: 100%; position: absolute; z-index: 50;\">\r\n                <div v-for=\"indicator in indicators\" :key=\"indicator\" class=\"autocomplete-item\" style=\"padding: 4px; border: 0.5px solid lightgrey; cursor: pointer; position: relative;\" @click=\"chooseIndicator(indicator)\">{{indicator.key}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState } from 'vuex'\r\n\r\n    export default {\r\n        components: {\r\n        },\r\n        props: {\r\n            formula: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            keyy: {\r\n                type: String\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                lazyFormula: this.formula || '',\r\n                autoComplete: false,\r\n                positionLeft: null,\r\n                positionRight: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('directIndicator', ['directIndicators']),\r\n            ...mapState('indirectIndicator', ['indirectIndicators', 'indirectIndicator']),\r\n            indicators () {\r\n                return this.directIndicators.concat(this.indirectIndicators)\r\n            }\r\n        },\r\n        watch: {\r\n            lazyFormula (val) {\r\n                this.lazyFormula = val.replace(' then', '\\nthen')\r\n                this.lazyFormula = val.replace(' else', '\\nelse')\r\n                console.log(val)\r\n                this.$emit('output', val)\r\n            }\r\n        },\r\n        mounted () {\r\n            const self = this\r\n            this.$refs.expression.$el.addEventListener('keyup', self.checkUserPosition, false)\r\n            this.$refs.expression.$el.addEventListener('click', self.checkUserPosition, false)\r\n            document.addEventListener('click', function (event) {\r\n                if (self.$refs.focuswindow !== event.target && !self.$refs.focuswindow?.contains(event.target)) { self.removeAutoComplete() }\r\n            })\r\n        },\r\n        methods: {\r\n            showIndicators () {\r\n                this.autoComplete = true\r\n            },\r\n            removeAutoComplete () {\r\n                this.autoComplete = false\r\n            },\r\n            checkUserPosition (e) {\r\n                console.log('user is moving!')\r\n                        this.positionleft = null\r\n                        this.positionright = null\r\n                        const userPosition = e.target.selectionStart\r\n\r\n                        if (this.lazyFormula.includes('#iff')) {\r\n                            this.lazyFormula = this.lazyFormula.replace('#iff', `if ([indicator_key] = null)\\nthen [${this.keyy}] = null\\nelse [${this.keyy}] = null`)\r\n                        }\r\n                        if (this.lazyFormula.includes('#ife')) {\r\n                            this.lazyFormula = this.lazyFormula.replace('#ife', 'if () \\nthen \\nelse')\r\n                        }\r\n\r\n                        // Following three for loops look for the 1). left bracket and 2). right bracket or 3). empty space\r\n                        for (var i = userPosition - 1; i >= 0; i--) {\r\n                            if (this.lazyFormula[i] === ']') { break }\r\n                            if (this.lazyFormula[i] === '[') {\r\n                                this.positionleft = i\r\n                                break\r\n                            }\r\n                        }\r\n                        for (i = userPosition; i <= this.lazyFormula.length; i++) {\r\n                            if (this.lazyFormula[i] === '[') { break }\r\n                            if (this.lazyFormula[i] === ']') {\r\n                                this.positionright = i + 1\r\n                                break\r\n                            }\r\n                        }\r\n                        if (Number.isInteger(this.positionleft) && !this.positionright) {\r\n                            for (i = this.positionleft; i <= this.lazyFormula.length; i++) {\r\n                                if ((this.lazyFormula[i] === ')') || (this.lazyFormula[i] === ' ')) {\r\n                                    this.positionright = i\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        console.log('left: ', this.positionleft, 'right: ', this.positionright)\r\n                        if (Number.isInteger(this.positionleft)) {\r\n                            this.showIndicators()\r\n                            return\r\n                        }\r\n                        this.removeAutoComplete()\r\n            },\r\n            chooseIndicator (indicator) {\r\n                const tempString = this.lazyFormula.split('')\r\n                let removablePart = this.lazyFormula.length - this.positionleft\r\n                if (Number.isInteger(this.positionright)) {\r\n                    removablePart = (this.positionright) - (this.positionleft)\r\n                }\r\n                tempString.splice((this.positionleft), removablePart, `[${indicator.key}]`)\r\n                this.lazyFormula = tempString.join('')\r\n                this.removeAutoComplete()\r\n            }\r\n        }\r\n    }\r\n    // findIndicators (string) {\r\n//     let results = []\r\n//     this.getAllResults()\r\n\r\n// },\r\n// getAllResults (string) {\r\n//      if(string.indexOf('[') >= 0 || string.indexOf(']') >= 0) {\r\n\r\n//      }\r\n// }\r\n// const selectableIndirectIndicators = this.indirectIndicators.filter(item => item.id !== this.indirectIndicator.id)\r\n// (this.positionright - (this.positionLeft + 1)) (this.positionright - (this.positionLeft + 1))\r\n// comparisonOperators: [\r\n//     { id: 0, value: '==', component: null },\r\n//     { id: 1, value: '!-', component: null },\r\n//     { id: 2, value: '>', component: null },\r\n//     { id: 3, value: '<', component: null },\r\n//     { id: 4, value: '>=', component: null },\r\n//     { id: 5, value: '<=', component: null }\r\n// ],\r\n// if (val.length) {\r\n//     const pattern = /[\\s?[\\w\\s]*\\s?]/g\r\n//     this.result = [...val.matchAll(pattern)]\r\n// }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n        .autocomplete-item {\r\n            background-color: white;\r\n        }\r\n        .autocomplete-item:hover {\r\n            background-color: lightgrey;\r\n        }\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC,4BAA4B;EAACC,KAAQ,EAAR;;;EAC/BC,GAAG,EAAC,aAAa;EAACD,KAAwC,EAAxC;IAAA;IAAA;EAAA;;;;EAEdE,EAAE,EAAC,cAAc;EAAqBF,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;;;;;uBAHnDG,mBAAA,CAOM,OAPNC,UAOM,GANFC,mBAAA,CAKM,OALNC,UAKM,GAJFC,YAAA,CAAiWC,mBAAA;IAAvVP,GAAG,EAAC,YAAY;IAAEQ,UAAU,EAAE,IAAI;IAAEC,IAAI,EAAC,GAAG;gBAAUC,KAAA,CAAAC,WAAW;+DAAXD,KAAA,CAAAC,WAAW,GAAAC,MAAA;IAAGC,WAAW,EAAGC,IAAA,CAAAC,UAAU;IAA6LhB,KAAwC,EAAxC;MAAA;MAAA;IAAA,CAAwC;IAACiB,YAAY,EAAC;0DAC5TN,KAAA,CAAAO,YAAY,I,cAAzCf,mBAAA,CAEM,OAFNgB,UAEM,I,kBADFhB,mBAAA,CAAqOiB,SAAA,QAAAC,WAAA,CAA5MC,QAAA,CAAAC,UAAU,EAAvBC,SAAS;yBAArBrB,mBAAA,CAAqO;MAA/LsB,GAAG,EAAED,SAAS;MAAEzB,KAAK,EAAC,mBAAmB;MAACC,KAAyF,EAAzF;QAAA;QAAA;QAAA;QAAA;MAAA,CAAyF;MAAE0B,OAAK,EAAAb,MAAA,IAAES,QAAA,CAAAK,eAAe,CAACH,SAAS;wBAAKA,SAAS,CAACC,GAAG,wBAAAG,UAAA","ignoreList":[]}]}