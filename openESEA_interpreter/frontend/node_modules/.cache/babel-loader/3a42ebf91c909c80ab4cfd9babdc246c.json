{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue","mtime":1707572265527},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapActions","mapState","SectionComponent","ProgressBar","ProgressSpinner","components","data","questionresponses","loading","failedload","sectionNumber","progressBarValue","activeQuestion","missedQuestions","missedQuestionsDialog","refresh","computed","answers","surveyResponse","question_responses","forEach","response","relevantquestion","questions","find","q","id","question","uiComponent","values","value","currentSection","section","survey","sections","mergedQuestionsAndTextFragments","concat","text_fragments","sortedComponents","sort","a","b","order","totalSections","sectionList","i","length","push","progress","watch","handler","newValue","deep","created","console","log","setTimeout","failedLoad","initialize","methods","_this$eseaAccount","_this$eseaAccount2","fetchSurveyResponse","oId","eseaAccount","organisation","eaId","$route","params","uniquetoken","fetchSurvey","mId","method","name","fetchQuestions","SuId","SeId","finished","survey_audit","print","$router","previousSection","nextSection","toggleActive","Number","isInteger","goToQuestion","indexOf","saveSurvey","finishSurvey","_this$eseaAccount3","_this$eseaAccount4","checkRequiredQuestions","checkMandatoryFields","updateResponse","updateAnswer","questionId","answer","responseIndex","findIndex","questionResponse","splice","direct_indicator_id","datatype","parseInt","SurveyId","replace","token","_this$eseaAccount5","_this$eseaAccount6","updateSurveyResponse","j","isMandatory","required"],"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue"],"sourcesContent":["<template>\r\n    <div style=\"width: 100%;\">\r\n        <ProgressSpinner v-if=\"loading && !failedLoad\" />\r\n        <div v-else-if=\"loading && failedLoad\" class=\"p-text-italic\">THe Survey could not be loaded!</div> <!-- style=\"background-color: #ddedc8;\" -->\r\n        <div v-else-if=\"!surveyResponse.finished\" class=\"p-d-flex p-grid p-jc-center p-m-0\" >\r\n            <div class=\"p-col-12 p-grid p-jc-center p-p-3\">\r\n                <h1 class=\"p-col-12 p-m-0\">{{survey.name}}</h1>\r\n                <h3 class=\"p-col-12 p-m-0\">{{survey.description}}</h3>\r\n                <div class=\"p-col-4 p-text-left\">\r\n                    <p><span class=\"p-text-bold\">Respondent:</span> {{surveyResponse.respondent}} <br> <span class=\"p-text-bold\">Organisation:</span> {{surveyResponse.organisation}} </p>\r\n                </div>\r\n            </div>\r\n            <!-- {{surveyResponse}} -->\r\n            <div v-if=\"this.survey.sections.length\" class=\"p-grid p-col-6 p-m-5\" style=\"border-radius: 10px\">\r\n                <div v-if=\"sectionNumber === 0\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.welcome_text}}</h3></div>\r\n                <Divider />\r\n                <div class=\"p-col-6 p-text-left p-text-bold\">Section {{ sectionNumber + 1 }} of {{ totalSections.length }}</div>\r\n                <div class=\"p-col-6 p-text-right\">\r\n                    <ProgressBar :value=\"progress + 0.1\">{{progress}}% completed</ProgressBar></div>\r\n                <div class=\"p-col-12 p-text-left\"><h3>Section: '{{currentSection.title}}'</h3></div>\r\n                <!-- {{answers}} -->\r\n                <section-component class=\"p-col-12 p-my-2\"\r\n                    v-for=\"item, index in currentSection.mergedQuestionsAndTextFragments\"\r\n                    tabindex=\"0\"\r\n                    :key=\"item.id\"\r\n                    :item=\"item\"\r\n                    :answer=\"answers[item.id]\"\r\n                    :active=\"activeQuestion === (index)\"\r\n                    :refresh=\"refresh\"\r\n                    @input=\"updateAnswer(item.direct_indicator[0].id, item.id, $event)\"\r\n                    @focus=\"toggleActive(index)\"\r\n                    @focuschecking=\"toggleActive(index)\"\r\n                    @blur=\"toggleActive\"\r\n                />\r\n                <div v-if=\"(sectionNumber + 1) === totalSections.length\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.closing_text}}</h3></div>\r\n                <div class=\"p-grid p-col-12 p-m-0 p-px-0\">\r\n                    <div class=\"p-col-6 p-text-left p-pl-0\">\r\n                        <Button label=\"Previous Section\" class=\"p-button-raised\" :disabled=\"sectionNumber === 0\" @click=\"previousSection\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right\">\r\n                        <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised\" @click=\"saveSurvey\" :disabled=\"true\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right p-pr-0\">\r\n                        <Button v-if=\"sectionNumber + 1 < totalSections.length\" label=\"Next Section\" class=\"p-button-raised\" style=\"width: 100%;\" @click=\"nextSection\" />\r\n                        <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%;\" @click=\"finishSurvey\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h1 v-else>This survey has no sections to display!</h1>\r\n        </div>\r\n\r\n        <Dialog v-model:visible=\"missedQuestionsDialog\" :style=\"{width: '450px'}\" header=\"Missing Answers\" :modal=\"true\">\r\n            <i class=\"pi pi-star p-mr-3\" style=\"font-size: 1.5rem\" />\r\n            <span class=\"p-text-left\">You need to fill in the following answers to be able to send your survey response:</span>\r\n            <div class=\"p-grid p-m-2\">\r\n                <div v-for=\"question in missedQuestions\" :key=\"question\" class=\"p-col-12\">\r\n                    <Button :label=\"`Question: '${question.name}'`\" style=\"width: 100%;\" @click=\"goToQuestion(question)\"> </Button>\r\n                </div>\r\n            </div>\r\n            <template #footer>\r\n                <Button label=\"Ok\" class=\"p-button-text\" @click=\"missedQuestionsDialog = false\"/>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import SectionComponent from '../../components/survey/SectionComponent'\r\n    import ProgressBar from 'primevue/progressbar'\r\n    import ProgressSpinner from 'primevue/progressspinner'\r\n\r\n    export default {\r\n        components: {\r\n            SectionComponent,\r\n            ProgressBar,\r\n            ProgressSpinner\r\n        },\r\n        data () {\r\n            return {\r\n                questionresponses: null,\r\n                loading: true,\r\n                failedload: false,\r\n                sectionNumber: 0,\r\n                progressBarValue: 0,\r\n                activeQuestion: null,\r\n                missedQuestions: [],\r\n                missedQuestionsDialog: false,\r\n                refresh: false\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponse', 'surveyResponses']),\r\n            ...mapState('eseaAccount', ['eseaAccount']),\r\n            ...mapState('question', ['questions']),\r\n            answers () {\r\n                if (this.loading) { return null } else {\r\n                var answers = {}\r\n                // console.log(']]]]', this.surveyResponse)\r\n\t\t\t\tthis.surveyResponse.question_responses.forEach((response) => {\r\n\t\t\t\t\t// if (answer.question === 36) { console.log('vallueee', answer) }\r\n                     const relevantquestion = this.questions.find(q => q.id === response.question)\r\n                    if (relevantquestion.uiComponent === 'checkbox') {\r\n                        answers[response.question] = response.values\r\n                    } else {\r\n                        answers[response.question] = response.value\r\n                    }\r\n\t\t\t\t})\r\n                // console.log(')))', answers)\r\n                return answers\r\n                }\r\n            },\r\n            currentSection () {\r\n                const section = this.survey.sections[this.sectionNumber]\r\n                const mergedQuestionsAndTextFragments = section?.questions.concat(section.text_fragments)\r\n                const sortedComponents = mergedQuestionsAndTextFragments?.sort((a, b) => (a.order > b.order) ? 1 : -1)\r\n                section.mergedQuestionsAndTextFragments = sortedComponents\r\n                return section\r\n            },\r\n            totalSections () {\r\n                const sectionList = []\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    sectionList.push(this.survey.sections[i].id)\r\n                }\r\n                // for (const section in this.survey?.sections) { totalSections = totalSections + this.survey?.topics[topic].sub_topics.length }\r\n\r\n                return sectionList\r\n            },\r\n            progress () {\r\n                var progress\r\n                if (this.sectionNumber === 0) { return 0 }\r\n                progress = ((this.sectionNumber + 1) / this.totalSections.length) * 100\r\n                return progress\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            surveyResponse: {\r\n                handler: function (newValue) {\r\n                    this.refresh = !this.refresh\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        created () {\r\n            console.log('eee')\r\n            setTimeout(() => { this.failedLoad = true }, 10000)\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponse', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse', 'setSurveyResponse']),\r\n            ...mapActions('question', ['fetchQuestions']),\r\n            async initialize () {\r\n                // Unique Token can be a 'pk', 'survey=survey_pk' or 'survey response token' (more on this in the backend, survey_responseview..py in the retrieve function.\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                console.log('++++', this.eseaAccount, this.surveyResponse.question_responses)\r\n                await this.fetchSurvey({ mId: this.surveyResponse.method, id: this.surveyResponse.survey })\r\n                console.log(this.survey.name)\r\n                await this.fetchQuestions({ mId: this.surveyResponse.method, SuId: this.surveyResponse.survey, SeId: 0 })\r\n                this.loading = false\r\n                console.log('eee', this.surveyResponse.question_responses)\r\n                if (this.surveyResponse.finished) {\r\n                    console.log(this.surveyResponse.survey_audit)\r\n                    if (this.surveyResponse.survey_audit) {\r\n                        print()\r\n                        console.log('Go to read only version of survey-fill for multiple respondent auditing purposes.')\r\n                        // this.$router.push({ name: 'survey-audit' })\r\n                    }\r\n                    this.$router.push({ name: 'survey-thank-you' })\r\n                }\r\n                this.questionresponses = this.surveyResponse.question_responses\r\n            },\r\n            previousSection () {\r\n                if (this.sectionNumber > 0) {\r\n                    this.sectionNumber--\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            nextSection () {\r\n                if (this.sectionNumber + 1 < this.totalSections.length) {\r\n                    this.sectionNumber++\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            toggleActive (question) {\r\n                if (Number.isInteger(question)) {\r\n                    this.activeQuestion = question\r\n                } else {\r\n                    this.activeQuestion = null\r\n                    }\r\n            },\r\n            goToQuestion (question) {\r\n                this.sectionNumber = this.totalSections.indexOf(question.section)\r\n                console.log(this.sectionNumber)\r\n                this.missedQuestionsDialog = false\r\n            },\r\n            saveSurvey () {\r\n                // TODO // popup Dialog: Survey is automatically saved.\r\n            },\r\n            async finishSurvey () {\r\n                console.log('cc')\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                this.checkRequiredQuestions = true\r\n                this.missedQuestions = []\r\n                await this.checkMandatoryFields()\r\n                console.log('reee')\r\n                if (!this.missedQuestions.length) {\r\n                this.surveyResponse.finished = true\r\n                await this.updateResponse()\r\n                this.$router.push({ name: 'survey-thank-you' })\r\n                } else {\r\n                    this.missedQuestionsDialog = true\r\n                }\r\n            },\r\n            updateAnswer (id, questionId, answer) {\r\n                if (answer.answer === null) { return }\r\n                console.log('====>', answer, id, questionId, this.questionresponses)\r\n                var responseIndex = this.questionresponses.findIndex(response => response.question === questionId)\r\n            //     console.log(responseIndex)\r\n                var questionResponse = null\r\n                if (responseIndex > -1) {\r\n                    questionResponse = this.questionresponses.splice(responseIndex, 1)[0]\r\n                } else {\r\n                    questionResponse = { question: questionId, direct_indicator_id: id, values: [], value: null }\r\n                }\r\n                if (answer.datatype === 'multiplechoice') {\r\n                    questionResponse.values = answer.answer\r\n                } else {\r\n                    questionResponse.value = answer.answer\r\n                }\r\n                this.questionresponses.push(questionResponse)\r\n                this.surveyResponse.question_responses = this.questionresponses\r\n\r\n                if (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey) {\r\n                    console.log('clearly not the same')\r\n                }\r\n                var SurveyId = parseInt(this.$route.params.uniquetoken.replace('survey=', ''))\r\n                console.log(SurveyId === this.surveyResponse.survey)\r\n                if ((this.$route.params.uniquetoken !== this.surveyResponse.token) && (SurveyId !== this.surveyResponse.survey) && (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey)) { // (this.$route.params.uniquetoken !== 'accountant')\r\n                    console.log('Not possible')\r\n                    return\r\n                }\r\n                this.updateResponse()\r\n            },\r\n            async updateResponse () {\r\n                console.log('dddd')\r\n                await this.updateSurveyResponse({\r\n                    oId: this.eseaAccount?.organisation,\r\n                    eaId: this.eseaAccount?.id,\r\n                    token: this.surveyResponse.id, // this.$route.params.uniquetoken,\r\n                    surveyResponse: {\r\n                        ...this.surveyResponse\r\n                    }\r\n                })\r\n            },\r\n            checkMandatoryFields () {\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    for (let j = 0; j < this.survey.sections[i].questions.length; j++) {\r\n                        if (this.survey.sections[i].questions[j].isMandatory) {\r\n                            const answer = this.surveyResponse.question_responses.find(response => response.question === this.survey.sections[i].questions[j].id)\r\n\r\n                            if (!answer || (!answer.values.length && !answer.value)) {\r\n                                this.survey.sections[i].questions[j].required = true\r\n                                this.missedQuestions.push(this.survey.sections[i].questions[j])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}