{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\store\\modules\\method\\survey\\survey_response.js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\store\\modules\\method\\survey\\survey_response.js","mtime":1707572265436},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1741014586138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["debounce","SurveyResponseService","baseSurveyResponse","question_responses","namespaced","state","surveyResponses","surveyResponse","error","undefined","debouncers","errors","isSaved","getters","getById","id","find","object","mutations","setSurveyResponses","data","setSurveyResponse","deleteSurveyResponse","filter","q","updateList","map","item","Object","assign","addSurveyResponse","push","setDebouncer","token","commit","oId","eaId","console","log","response","put","setIsSaved","setError","_error$response","_error$response2","_error$response3","clearError","actions","fetchSurveyResponses","payload","get","fetchSurveyResponse","delete","createSurveyResponse","nId","cId","post","updateSurveyResponse","r","parseInt","resetError"],"sources":["C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/store/modules/method/survey/survey_response.js"],"sourcesContent":["import { debounce } from 'lodash'\r\nimport SurveyResponseService from '@/services/SurveyResponseService'\r\n\r\nconst baseSurveyResponse = {\r\n\tquestion_responses: []\r\n}\r\n\r\nexport default {\r\n\tnamespaced: true,\r\n\tstate: {\r\n\t\tsurveyResponses: [],\r\n\t\tsurveyResponse: {},\r\n\t\terror: undefined,\r\n\t\tdebouncers: {},\r\n\t\terrors: {},\r\n\t\tisSaved: {}\r\n\t},\r\n\tgetters: {\r\n\t\tgetById: state => id => state.surveyResponses.find(\r\n\t\t\tobject => object.id === id\r\n\t\t)\r\n\t\t// ),\r\n\t\t// answers: state => {\r\n\t\t// \tif (state.surveyResponse.question_responses) {\r\n\t\t// \t\tvar answers = {}\r\n\t\t// \t\tstate.surveyResponse.question_responses.forEach((answer) => {\r\n\t\t// \t\t\tif (answer.question === 36) { console.log('vallueee', answer) }\r\n\t\t// \t\t\tanswers[answer.question] = [answer.values, answer.value]\r\n\t\t// \t\t})\r\n\t\t// \t}\r\n\t\t// \treturn answers\r\n\t\t// }\r\n\t},\r\n\tmutations: {\r\n\t\tsetSurveyResponses (state, { data }) {\r\n\t\t\tstate.surveyResponses = data\r\n\t\t\tstate.debouncers = {}\r\n\t\t\tstate.errors = {}\r\n\t\t\tstate.isSaved = {}\r\n\t\t},\r\n\t\tsetSurveyResponse (state, { data }) {\r\n\t\t\tstate.surveyResponse = data || {}\r\n\t\t},\r\n\t\tdeleteSurveyResponse (state, { id }) {\r\n\t\t\tdelete state.debouncers[id]\r\n\t\t\tdelete state.errors[id]\r\n\t\t\tdelete state.isSaved[id]\r\n\t\t\tstate.surveyResponses = state.surveyResponses.filter(q => q.id !== id)\r\n\t\t},\r\n\t\tupdateList (state, { id, data }) {\r\n\t\t\tif (id !== data.id) {\r\n\t\t\t\tdelete state.debouncers[id]\r\n\t\t\t\tdelete state.errors[id]\r\n\t\t\t\tdelete state.isSaved[id]\r\n\t\t\t}\r\n\r\n\t\t\tstate.surveyResponses = state.surveyResponses.map((item) => {\r\n\t\t\t\tif (item.id !== id) return item\r\n\t\t\t\treturn Object.assign(item, data)\r\n\t\t\t})\r\n\t\t},\r\n\t\taddSurveyResponse (state, { data: surveyResponse }) {\r\n\t\t\tstate.surveyResponses.push(surveyResponse)\r\n\t\t\tstate.surveyResponse = surveyResponse\r\n\t\t},\r\n\t\tsetDebouncer (state, { id, token, commit }) {\r\n\t\t\tstate.debouncers[id] = debounce(\r\n\t\t\t\tasync ({ oId, eaId, surveyResponse }) => {\r\n\t\t\t\t\tconsole.log('-----------', token, surveyResponse)\r\n\t\t\t\t\tconst { response, error } = await SurveyResponseService.put(\r\n\t\t\t\t\t\t{ oId, eaId, id: token, data: surveyResponse }\r\n\t\t\t\t\t)\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\tcommit('setError', { error, id: surveyResponse.id })\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcommit('setSurveyResponse', response)\r\n\t\t\t\t\tcommit('setError', { error: {}, id: surveyResponse.id })\r\n\t\t\t\t\tcommit('setIsSaved', { id: surveyResponse.id, isSaved: true })\r\n\t\t\t\t\tcommit('updateList', {\r\n\t\t\t\t\t\tid: surveyResponse.id, data: { id: response.data.id }\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\t250\r\n\t\t\t)\r\n\t\t},\r\n\t\tsetIsSaved (state, { id, isSaved = false }) {\r\n\t\t\tif (id) {\r\n\t\t\t\tstate.isSaved = {\r\n\t\t\t\t\t...state.isSaved,\r\n\t\t\t\t\t[id]: isSaved\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetError (state, { error, id }) {\r\n\t\t\tconsole.log('error message:', error?.response?.data)\r\n\r\n\t\t\tif (id && error?.response?.data) {\r\n\t\t\t\tstate.errors = { ...state.errors, [id]: error?.response?.data }\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tstate.error = error\r\n\t\t},\r\n        clearError (state) {\r\n            state.error = []\r\n        }\r\n\t},\r\n\tactions: {\r\n\t\tasync fetchSurveyResponses ({ commit }, payload) {\r\n            commit('clearError')\r\n\t\t\tconst { response, error } = await SurveyResponseService.get(payload)\r\n\t\t\tif (error) {\r\n\t\t\t\tcommit('setError', { error })\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (payload.id) {\r\n\t\t\t\tcommit('setSurveyResponse', response)\r\n\t\t\t} else {\r\n\t\t\tcommit('setSurveyResponses', response)\r\n\t\t\t}\r\n\t\t},\r\n\t\tasync fetchSurveyResponse ({ commit }, payload) {\r\n\t\t\tconst { response, error } = await SurveyResponseService.get(payload)\r\n\t\t\tif (error) {\r\n\t\t\t\tcommit('setError', { error })\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tcommit('setSurveyResponse', response)\r\n\t\t\treturn { response }\r\n\t\t},\r\n\t\tasync deleteSurveyResponse ({ commit }, payload) {\r\n\t\t\tif (payload.id > 0) {\r\n\t\t\t\tconst { error } = await SurveyResponseService.delete(payload)\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tcommit('setError', { error })\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcommit('deleteSurveyResponse', payload)\r\n\t\t},\r\n\t\tasync createSurveyResponse ({ commit }, { nId, cId, eaId }) {\r\n\t\t\tconst { response, error } = await SurveyResponseService.post({\r\n\t\t\t\tnId, cId, eaId, data: baseSurveyResponse\r\n\t\t\t})\r\n\t\t\tif (error) {\r\n\t\t\t\tcommit('setError', { error })\r\n\t\t\t\treturn { error }\r\n\t\t\t}\r\n\t\t\tcommit('addSurveyResponse', response)\r\n\t\t\treturn { response }\r\n\t\t},\r\n\t\tupdateSurveyResponse ({ state, commit }, { oId, eaId, id, token, surveyResponse }) {\r\n\t\t\tif (surveyResponse.token !== state.surveyResponse.token) {\r\n\t\t\t\tconsole.log('surveyRespone token !== state.surveyResponse.token')\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tconsole.log('updateSurveyResponse 2')\r\n\t\t\tif (!surveyResponse || !oId || !eaId) return\r\n\t\t\tconsole.log('updateSurveyResponse 3')\r\n\t\t\tif (!state.debouncers[surveyResponse.id]) {\r\n\t\t\t\tcommit('setDebouncer', { id: surveyResponse.id, token: token, commit })\r\n\t\t\t}\r\n\t\t\tcommit('updateList', { id: surveyResponse.id, data: surveyResponse })\r\n\t\t\tcommit('setIsSaved', { id: surveyResponse.id })\r\n\t\t\tstate.debouncers[surveyResponse.id]({ oId, eaId, surveyResponse })\r\n\t\t},\r\n\t\tsetSurveyResponse ({ state, commit }, { id } = {}) {\r\n            if (id) {\r\n                const data = state.surveyResponses.find(r => r.id === parseInt(id))\r\n                if (!data) return\r\n                commit('setSurveyResponse', { data })\r\n            } else {\r\n                commit('setSurveyResponse', {})\r\n            }\r\n\t\t},\r\n\t\tresetError ({ commit }) {\r\n\t\t\tcommit('setError', { error: undefined })\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":";;;;;AAAA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,OAAOC,qBAAqB,MAAM,kCAAkC;AAEpE,MAAMC,kBAAkB,GAAG;EAC1BC,kBAAkB,EAAE;AACrB,CAAC;AAED,eAAe;EACdC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACNC,eAAe,EAAE,EAAE;IACnBC,cAAc,EAAE,CAAC,CAAC;IAClBC,KAAK,EAAEC,SAAS;IAChBC,UAAU,EAAE,CAAC,CAAC;IACdC,MAAM,EAAE,CAAC,CAAC;IACVC,OAAO,EAAE,CAAC;EACX,CAAC;EACDC,OAAO,EAAE;IACRC,OAAO,EAAET,KAAK,IAAIU,EAAE,IAAIV,KAAK,CAACC,eAAe,CAACU,IAAI,CACjDC,MAAM,IAAIA,MAAM,CAACF,EAAE,KAAKA,EACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD,CAAC;EACDG,SAAS,EAAE;IACVC,kBAAkBA,CAAEd,KAAK,EAAE;MAAEe;IAAK,CAAC,EAAE;MACpCf,KAAK,CAACC,eAAe,GAAGc,IAAI;MAC5Bf,KAAK,CAACK,UAAU,GAAG,CAAC,CAAC;MACrBL,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;MACjBN,KAAK,CAACO,OAAO,GAAG,CAAC,CAAC;IACnB,CAAC;IACDS,iBAAiBA,CAAEhB,KAAK,EAAE;MAAEe;IAAK,CAAC,EAAE;MACnCf,KAAK,CAACE,cAAc,GAAGa,IAAI,IAAI,CAAC,CAAC;IAClC,CAAC;IACDE,oBAAoBA,CAAEjB,KAAK,EAAE;MAAEU;IAAG,CAAC,EAAE;MACpC,OAAOV,KAAK,CAACK,UAAU,CAACK,EAAE,CAAC;MAC3B,OAAOV,KAAK,CAACM,MAAM,CAACI,EAAE,CAAC;MACvB,OAAOV,KAAK,CAACO,OAAO,CAACG,EAAE,CAAC;MACxBV,KAAK,CAACC,eAAe,GAAGD,KAAK,CAACC,eAAe,CAACiB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKA,EAAE,CAAC;IACvE,CAAC;IACDU,UAAUA,CAAEpB,KAAK,EAAE;MAAEU,EAAE;MAAEK;IAAK,CAAC,EAAE;MAChC,IAAIL,EAAE,KAAKK,IAAI,CAACL,EAAE,EAAE;QACnB,OAAOV,KAAK,CAACK,UAAU,CAACK,EAAE,CAAC;QAC3B,OAAOV,KAAK,CAACM,MAAM,CAACI,EAAE,CAAC;QACvB,OAAOV,KAAK,CAACO,OAAO,CAACG,EAAE,CAAC;MACzB;MAEAV,KAAK,CAACC,eAAe,GAAGD,KAAK,CAACC,eAAe,CAACoB,GAAG,CAAEC,IAAI,IAAK;QAC3D,IAAIA,IAAI,CAACZ,EAAE,KAAKA,EAAE,EAAE,OAAOY,IAAI;QAC/B,OAAOC,MAAM,CAACC,MAAM,CAACF,IAAI,EAAEP,IAAI,CAAC;MACjC,CAAC,CAAC;IACH,CAAC;IACDU,iBAAiBA,CAAEzB,KAAK,EAAE;MAAEe,IAAI,EAAEb;IAAe,CAAC,EAAE;MACnDF,KAAK,CAACC,eAAe,CAACyB,IAAI,CAACxB,cAAc,CAAC;MAC1CF,KAAK,CAACE,cAAc,GAAGA,cAAc;IACtC,CAAC;IACDyB,YAAYA,CAAE3B,KAAK,EAAE;MAAEU,EAAE;MAAEkB,KAAK;MAAEC;IAAO,CAAC,EAAE;MAC3C7B,KAAK,CAACK,UAAU,CAACK,EAAE,CAAC,GAAGf,QAAQ,CAC9B,OAAO;QAAEmC,GAAG;QAAEC,IAAI;QAAE7B;MAAe,CAAC,KAAK;QACxC8B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,KAAK,EAAE1B,cAAc,CAAC;QACjD,MAAM;UAAEgC,QAAQ;UAAE/B;QAAM,CAAC,GAAG,MAAMP,qBAAqB,CAACuC,GAAG,CAC1D;UAAEL,GAAG;UAAEC,IAAI;UAAErB,EAAE,EAAEkB,KAAK;UAAEb,IAAI,EAAEb;QAAe,CAC9C,CAAC;QACD,IAAIC,KAAK,EAAE;UACV0B,MAAM,CAAC,UAAU,EAAE;YAAE1B,KAAK;YAAEO,EAAE,EAAER,cAAc,CAACQ;UAAG,CAAC,CAAC;UACpD;QACD;QACAmB,MAAM,CAAC,mBAAmB,EAAEK,QAAQ,CAAC;QACrCL,MAAM,CAAC,UAAU,EAAE;UAAE1B,KAAK,EAAE,CAAC,CAAC;UAAEO,EAAE,EAAER,cAAc,CAACQ;QAAG,CAAC,CAAC;QACxDmB,MAAM,CAAC,YAAY,EAAE;UAAEnB,EAAE,EAAER,cAAc,CAACQ,EAAE;UAAEH,OAAO,EAAE;QAAK,CAAC,CAAC;QAC9DsB,MAAM,CAAC,YAAY,EAAE;UACpBnB,EAAE,EAAER,cAAc,CAACQ,EAAE;UAAEK,IAAI,EAAE;YAAEL,EAAE,EAAEwB,QAAQ,CAACnB,IAAI,CAACL;UAAG;QACrD,CAAC,CAAC;MACH,CAAC,EACD,GACD,CAAC;IACF,CAAC;IACD0B,UAAUA,CAAEpC,KAAK,EAAE;MAAEU,EAAE;MAAEH,OAAO,GAAG;IAAM,CAAC,EAAE;MAC3C,IAAIG,EAAE,EAAE;QACPV,KAAK,CAACO,OAAO,GAAG;UACf,GAAGP,KAAK,CAACO,OAAO;UAChB,CAACG,EAAE,GAAGH;QACP,CAAC;MACF;IACD,CAAC;IACD8B,QAAQA,CAAErC,KAAK,EAAE;MAAEG,KAAK;MAAEO;IAAG,CAAC,EAAE;MAAA,IAAA4B,eAAA,EAAAC,gBAAA;MAC/BP,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE9B,KAAK,aAALA,KAAK,wBAAAmC,eAAA,GAALnC,KAAK,CAAE+B,QAAQ,cAAAI,eAAA,uBAAfA,eAAA,CAAiBvB,IAAI,CAAC;MAEpD,IAAIL,EAAE,IAAIP,KAAK,aAALA,KAAK,gBAAAoC,gBAAA,GAALpC,KAAK,CAAE+B,QAAQ,cAAAK,gBAAA,eAAfA,gBAAA,CAAiBxB,IAAI,EAAE;QAAA,IAAAyB,gBAAA;QAChCxC,KAAK,CAACM,MAAM,GAAG;UAAE,GAAGN,KAAK,CAACM,MAAM;UAAE,CAACI,EAAE,GAAGP,KAAK,aAALA,KAAK,wBAAAqC,gBAAA,GAALrC,KAAK,CAAE+B,QAAQ,cAAAM,gBAAA,uBAAfA,gBAAA,CAAiBzB;QAAK,CAAC;QAC/D;MACD;MACAf,KAAK,CAACG,KAAK,GAAGA,KAAK;IACpB,CAAC;IACKsC,UAAUA,CAAEzC,KAAK,EAAE;MACfA,KAAK,CAACG,KAAK,GAAG,EAAE;IACpB;EACP,CAAC;EACDuC,OAAO,EAAE;IACR,MAAMC,oBAAoBA,CAAE;MAAEd;IAAO,CAAC,EAAEe,OAAO,EAAE;MACvCf,MAAM,CAAC,YAAY,CAAC;MAC7B,MAAM;QAAEK,QAAQ;QAAE/B;MAAM,CAAC,GAAG,MAAMP,qBAAqB,CAACiD,GAAG,CAACD,OAAO,CAAC;MACpE,IAAIzC,KAAK,EAAE;QACV0B,MAAM,CAAC,UAAU,EAAE;UAAE1B;QAAM,CAAC,CAAC;QAC7B;MACD;MACA,IAAIyC,OAAO,CAAClC,EAAE,EAAE;QACfmB,MAAM,CAAC,mBAAmB,EAAEK,QAAQ,CAAC;MACtC,CAAC,MAAM;QACPL,MAAM,CAAC,oBAAoB,EAAEK,QAAQ,CAAC;MACtC;IACD,CAAC;IACD,MAAMY,mBAAmBA,CAAE;MAAEjB;IAAO,CAAC,EAAEe,OAAO,EAAE;MAC/C,MAAM;QAAEV,QAAQ;QAAE/B;MAAM,CAAC,GAAG,MAAMP,qBAAqB,CAACiD,GAAG,CAACD,OAAO,CAAC;MACpE,IAAIzC,KAAK,EAAE;QACV0B,MAAM,CAAC,UAAU,EAAE;UAAE1B;QAAM,CAAC,CAAC;QAC7B;MACD;MACA0B,MAAM,CAAC,mBAAmB,EAAEK,QAAQ,CAAC;MACrC,OAAO;QAAEA;MAAS,CAAC;IACpB,CAAC;IACD,MAAMjB,oBAAoBA,CAAE;MAAEY;IAAO,CAAC,EAAEe,OAAO,EAAE;MAChD,IAAIA,OAAO,CAAClC,EAAE,GAAG,CAAC,EAAE;QACnB,MAAM;UAAEP;QAAM,CAAC,GAAG,MAAMP,qBAAqB,CAACmD,MAAM,CAACH,OAAO,CAAC;QAC7D,IAAIzC,KAAK,EAAE;UACV0B,MAAM,CAAC,UAAU,EAAE;YAAE1B;UAAM,CAAC,CAAC;UAC7B;QACD;MACD;MACA0B,MAAM,CAAC,sBAAsB,EAAEe,OAAO,CAAC;IACxC,CAAC;IACD,MAAMI,oBAAoBA,CAAE;MAAEnB;IAAO,CAAC,EAAE;MAAEoB,GAAG;MAAEC,GAAG;MAAEnB;IAAK,CAAC,EAAE;MAC3D,MAAM;QAAEG,QAAQ;QAAE/B;MAAM,CAAC,GAAG,MAAMP,qBAAqB,CAACuD,IAAI,CAAC;QAC5DF,GAAG;QAAEC,GAAG;QAAEnB,IAAI;QAAEhB,IAAI,EAAElB;MACvB,CAAC,CAAC;MACF,IAAIM,KAAK,EAAE;QACV0B,MAAM,CAAC,UAAU,EAAE;UAAE1B;QAAM,CAAC,CAAC;QAC7B,OAAO;UAAEA;QAAM,CAAC;MACjB;MACA0B,MAAM,CAAC,mBAAmB,EAAEK,QAAQ,CAAC;MACrC,OAAO;QAAEA;MAAS,CAAC;IACpB,CAAC;IACDkB,oBAAoBA,CAAE;MAAEpD,KAAK;MAAE6B;IAAO,CAAC,EAAE;MAAEC,GAAG;MAAEC,IAAI;MAAErB,EAAE;MAAEkB,KAAK;MAAE1B;IAAe,CAAC,EAAE;MAClF,IAAIA,cAAc,CAAC0B,KAAK,KAAK5B,KAAK,CAACE,cAAc,CAAC0B,KAAK,EAAE;QACxDI,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;QACjE;MACD;MACAD,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI,CAAC/B,cAAc,IAAI,CAAC4B,GAAG,IAAI,CAACC,IAAI,EAAE;MACtCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAI,CAACjC,KAAK,CAACK,UAAU,CAACH,cAAc,CAACQ,EAAE,CAAC,EAAE;QACzCmB,MAAM,CAAC,cAAc,EAAE;UAAEnB,EAAE,EAAER,cAAc,CAACQ,EAAE;UAAEkB,KAAK,EAAEA,KAAK;UAAEC;QAAO,CAAC,CAAC;MACxE;MACAA,MAAM,CAAC,YAAY,EAAE;QAAEnB,EAAE,EAAER,cAAc,CAACQ,EAAE;QAAEK,IAAI,EAAEb;MAAe,CAAC,CAAC;MACrE2B,MAAM,CAAC,YAAY,EAAE;QAAEnB,EAAE,EAAER,cAAc,CAACQ;MAAG,CAAC,CAAC;MAC/CV,KAAK,CAACK,UAAU,CAACH,cAAc,CAACQ,EAAE,CAAC,CAAC;QAAEoB,GAAG;QAAEC,IAAI;QAAE7B;MAAe,CAAC,CAAC;IACnE,CAAC;IACDc,iBAAiBA,CAAE;MAAEhB,KAAK;MAAE6B;IAAO,CAAC,EAAE;MAAEnB;IAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzC,IAAIA,EAAE,EAAE;QACJ,MAAMK,IAAI,GAAGf,KAAK,CAACC,eAAe,CAACU,IAAI,CAAC0C,CAAC,IAAIA,CAAC,CAAC3C,EAAE,KAAK4C,QAAQ,CAAC5C,EAAE,CAAC,CAAC;QACnE,IAAI,CAACK,IAAI,EAAE;QACXc,MAAM,CAAC,mBAAmB,EAAE;UAAEd;QAAK,CAAC,CAAC;MACzC,CAAC,MAAM;QACHc,MAAM,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;MACnC;IACV,CAAC;IACD0B,UAAUA,CAAE;MAAE1B;IAAO,CAAC,EAAE;MACvBA,MAAM,CAAC,UAAU,EAAE;QAAE1B,KAAK,EAAEC;MAAU,CAAC,CAAC;IACzC;EACD;AACD,CAAC","ignoreList":[]}]}