{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\store\\modules\\dashboard\\dashboardData.js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\store\\modules\\dashboard\\dashboardData.js","mtime":1707572265401},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1741014586138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IGlzRXF1YWwgfSBmcm9tICdsb2Rhc2gnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgaW5kaWNhdG9yczogW10sCiAgICAvKiAgICAgICAgICAqLyAvLyBMaXN0IG9mIGluZGljYXRvcnMKICAgIGluZGljYXRvckRhdGE6IFtdLAogICAgLyogICAgICAgKi8gLy8gVmFsdWVzIGZyb20gc3VydmV5IHJlc3BvbnNlcwogICAgaW5kaWNhdG9yRmllbGRzOiBbXSwKICAgIC8qICAgICAqLyAvLyBTZWxlY3RlZCBmaWVsZHMgZnJvbSBzdXJ2ZXkgcmVzcG9uc2VzCiAgICBpbmRpY2F0b3JEYXRhU2V0czoge30sCiAgICAvKiAgICovIC8vIERhdGFzZXRzIGZvciBlYWNoIGluZGljYXRvcgogICAgdmlzdWFsaXNhdGlvbkRhdGFzZXRzOiBbXQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0SW5kaWNhdG9yczogKHN0YXRlLCBnZXR0ZXJzKSA9PiAoKSA9PiB7CiAgICAgIHZhciBfc3RhdGUkaW5kaWNhdG9yczsKICAgICAgcmV0dXJuIChfc3RhdGUkaW5kaWNhdG9ycyA9IHN0YXRlLmluZGljYXRvcnMpICE9PSBudWxsICYmIF9zdGF0ZSRpbmRpY2F0b3JzICE9PSB2b2lkIDAgPyBfc3RhdGUkaW5kaWNhdG9ycyA6IFtdOwogICAgfSwKICAgIGdldEluZGljYXRvckRhdGE6IChzdGF0ZSwgZ2V0dGVycykgPT4gKCkgPT4gewogICAgICByZXR1cm4gc3RhdGUuaW5kaWNhdG9yRGF0YTsKICAgIH0sCiAgICBnZXRJbmRpY2F0b3JGaWVsZHM6IChzdGF0ZSwgZ2V0dGVycykgPT4gKCkgPT4gewogICAgICByZXR1cm4gc3RhdGUuaW5kaWNhdG9yRmllbGRzOwogICAgfSwKICAgIGdldEluZGljYXRvckRhdGFTZXRzOiAoc3RhdGUsIGdldHRlcnMpID0+ICgpID0+IHsKICAgICAgcmV0dXJuIHN0YXRlLmluZGljYXRvckRhdGFTZXRzOwogICAgfSwKICAgIGdldEluZGljYXRvckRhdGFTZXQ6IChzdGF0ZSwgZ2V0dGVycykgPT4gaW5kaWNhdG9yS2V5ID0+IHsKICAgICAgcmV0dXJuIHN0YXRlLmluZGljYXRvckRhdGFTZXRzW2luZGljYXRvcktleV07CiAgICB9LAogICAgZ2V0VmlzdWFsaXNhdGlvbkRhdGFzZXRzOiAoc3RhdGUsIGdldHRlcnMpID0+ICgpID0+IHsKICAgICAgcmV0dXJuIHN0YXRlLnZpc3VhbGlzYXRpb25EYXRhc2V0czsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2V0SW5kaWNhdG9ycyhzdGF0ZSwgaW5kaWNhdG9ycykgewogICAgICBzdGF0ZS5pbmRpY2F0b3JzID0gaW5kaWNhdG9yczsKICAgIH0sCiAgICBzZXRJbmRpY2F0b3JEYXRhKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLmluZGljYXRvckRhdGEgPSBkYXRhOwogICAgfSwKICAgIHNldEluZGljYXRvckZpZWxkcyhzdGF0ZSwgZmllbGRzKSB7CiAgICAgIHN0YXRlLmluZGljYXRvckZpZWxkcyA9IGZpZWxkczsKICAgIH0sCiAgICBzZXRJbmRpY2F0b3JEYXRhU2V0cyhzdGF0ZSwgZGF0YVNldHMpIHsKICAgICAgc3RhdGUuaW5kaWNhdG9yRGF0YVNldHMgPSBkYXRhU2V0czsKICAgIH0sCiAgICBzZXRWaXN1YWxpc2F0aW9uRGF0YXNldHMoc3RhdGUsIHZpc3VhbGlzYXRpb25EYXRhc2V0cykgewogICAgICBzdGF0ZS52aXN1YWxpc2F0aW9uRGF0YXNldHMgPSB2aXN1YWxpc2F0aW9uRGF0YXNldHM7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBjcmVhdGVJbmRpY2F0b3JEYXRhU2V0cyh7CiAgICAgIGNvbW1pdCwKICAgICAgZGlzcGF0Y2gsCiAgICAgIGdldHRlcnMKICAgIH0sIHBheWxvYWQpIHsKICAgICAgY29uc3QgaW5kaWNhdG9ycyA9IGdldHRlcnMuZ2V0SW5kaWNhdG9ycygpOwogICAgICBjb25zdCBpbmRpY2F0b3JEYXRhU2V0cyA9IHt9OwogICAgICBmb3IgKGNvbnN0IGluZGljYXRvciBvZiBpbmRpY2F0b3JzKSB7CiAgICAgICAgdmFyIF9pbmRpY2F0b3IkbmFtZTsKICAgICAgICBjb25zdCBpbmRpY2F0b3JLZXkgPSBpbmRpY2F0b3Iua2V5OwogICAgICAgIGNvbnN0IGluZGljYXRvck5hbWUgPSAoX2luZGljYXRvciRuYW1lID0gaW5kaWNhdG9yLm5hbWUpICE9PSBudWxsICYmIF9pbmRpY2F0b3IkbmFtZSAhPT0gdm9pZCAwID8gX2luZGljYXRvciRuYW1lIDogaW5kaWNhdG9yLmtleTsKICAgICAgICBpbmRpY2F0b3JEYXRhU2V0c1tpbmRpY2F0b3JLZXldID0gewogICAgICAgICAgbmFtZTogaW5kaWNhdG9yTmFtZSwKICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgfTsKICAgICAgfQogICAgICBjb25zdCBpbmRpY2F0b3JzRGF0YSA9IGdldHRlcnMuZ2V0SW5kaWNhdG9yRGF0YSgpOwogICAgICBmb3IgKGNvbnN0IGluZGljYXRvckRhdGEgb2YgaW5kaWNhdG9yc0RhdGEpIHsKICAgICAgICBjb25zdCBpbmRpY2F0b3JLZXkgPSBpbmRpY2F0b3JEYXRhWydJbmRpY2F0b3IgS2V5J107CiAgICAgICAgY29uc3QgaW5kaWNhdG9yWWVhciA9IGluZGljYXRvckRhdGEuWWVhcjsKICAgICAgICBjb25zdCBpbmRpY2F0b3JWYWx1ZSA9IGluZGljYXRvckRhdGEuVmFsdWU7CiAgICAgICAgY29uc3QgaW5kaWNhdG9yTmFtZSA9IGluZGljYXRvckRhdGFTZXRzW2luZGljYXRvcktleV0ubmFtZTsKICAgICAgICB2YXIgZGF0YVJlY29yZCA9IHt9OwogICAgICAgIGRhdGFSZWNvcmQuWWVhciA9IGluZGljYXRvclllYXI7CiAgICAgICAgZGF0YVJlY29yZFtpbmRpY2F0b3JOYW1lXSA9IGluZGljYXRvclZhbHVlOwogICAgICAgIGluZGljYXRvckRhdGFTZXRzW2luZGljYXRvcktleV0uZGF0YS5wdXNoKGRhdGFSZWNvcmQpOwogICAgICB9CiAgICAgIGNvbW1pdCgnc2V0SW5kaWNhdG9yRGF0YVNldHMnLCBpbmRpY2F0b3JEYXRhU2V0cyk7CiAgICB9LAogICAgc2F2ZVZpc3VhbGlzYXRpb25EYXRhc2V0KHsKICAgICAgY29tbWl0LAogICAgICBkaXNwYXRjaCwKICAgICAgZ2V0dGVycwogICAgfSwgcGF5bG9hZCkgewogICAgICB2YXIgdmlzdWFsaXNhdGlvbkRhdGFzZXRzID0gZ2V0dGVycy5nZXRWaXN1YWxpc2F0aW9uRGF0YXNldHMoKTsKICAgICAgY29uc3QgY29uZmlnID0gcGF5bG9hZC5jb25maWc7CiAgICAgIGNvbnN0IGRhdGFzZXQgPSBwYXlsb2FkLmRhdGFzZXQ7CiAgICAgIHZhciBuZXdEYXRhc2V0ID0gdHJ1ZTsKICAgICAgZm9yICh2YXIgdmlzdWFsaXNhdGlvbkRhdGFzZXQgb2YgdmlzdWFsaXNhdGlvbkRhdGFzZXRzKSB7CiAgICAgICAgaWYgKGlzRXF1YWwodmlzdWFsaXNhdGlvbkRhdGFzZXQuY29uZmlnLCBjb25maWcpKSB7CiAgICAgICAgICBuZXdEYXRhc2V0ID0gZmFsc2U7CiAgICAgICAgICB2aXN1YWxpc2F0aW9uRGF0YXNldC5kYXRhc2V0ID0gZGF0YXNldDsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKG5ld0RhdGFzZXQpIHZpc3VhbGlzYXRpb25EYXRhc2V0cy5wdXNoKHBheWxvYWQpOwogICAgICBjb21taXQoJ3NldFZpc3VhbGlzYXRpb25EYXRhc2V0cycsIHZpc3VhbGlzYXRpb25EYXRhc2V0cyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["isEqual","namespaced","state","indicators","indicatorData","indicatorFields","indicatorDataSets","visualisationDatasets","getters","getIndicators","_state$indicators","getIndicatorData","getIndicatorFields","getIndicatorDataSets","getIndicatorDataSet","indicatorKey","getVisualisationDatasets","mutations","setIndicators","setIndicatorData","data","setIndicatorFields","fields","setIndicatorDataSets","dataSets","setVisualisationDatasets","actions","createIndicatorDataSets","commit","dispatch","payload","indicator","_indicator$name","key","indicatorName","name","indicatorsData","indicatorYear","Year","indicatorValue","Value","dataRecord","push","saveVisualisationDataset","config","dataset","newDataset","visualisationDataset"],"sources":["C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/store/modules/dashboard/dashboardData.js"],"sourcesContent":["import { isEqual } from 'lodash'\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        indicators: [], /*          */ // List of indicators\r\n        indicatorData: [], /*       */ // Values from survey responses\r\n        indicatorFields: [], /*     */ // Selected fields from survey responses\r\n        indicatorDataSets: {}, /*   */ // Datasets for each indicator\r\n        visualisationDatasets: []\r\n    },\r\n    getters: {\r\n        getIndicators: (state, getters) => () => {\r\n            return state.indicators ?? []\r\n        },\r\n        getIndicatorData: (state, getters) => () => {\r\n            return state.indicatorData\r\n        },\r\n        getIndicatorFields: (state, getters) => () => {\r\n            return state.indicatorFields\r\n        },\r\n        getIndicatorDataSets: (state, getters) => () => {\r\n            return state.indicatorDataSets\r\n        },\r\n        getIndicatorDataSet: (state, getters) => (indicatorKey) => {\r\n            return state.indicatorDataSets[indicatorKey]\r\n        },\r\n        getVisualisationDatasets: (state, getters) => () => {\r\n            return state.visualisationDatasets\r\n        }\r\n    },\r\n    mutations: {\r\n        setIndicators (state, indicators) {\r\n            state.indicators = indicators\r\n        },\r\n        setIndicatorData (state, data) {\r\n            state.indicatorData = data\r\n        },\r\n        setIndicatorFields (state, fields) {\r\n            state.indicatorFields = fields\r\n        },\r\n        setIndicatorDataSets (state, dataSets) {\r\n            state.indicatorDataSets = dataSets\r\n        },\r\n        setVisualisationDatasets (state, visualisationDatasets) {\r\n            state.visualisationDatasets = visualisationDatasets\r\n        }\r\n    },\r\n    actions: {\r\n        createIndicatorDataSets ({ commit, dispatch, getters }, payload) {\r\n            const indicators = getters.getIndicators()\r\n            const indicatorDataSets = {}\r\n            for (const indicator of indicators) {\r\n                const indicatorKey = indicator.key\r\n                const indicatorName = indicator.name ?? indicator.key\r\n                indicatorDataSets[indicatorKey] = { name: indicatorName, data: [] }\r\n            }\r\n\r\n            const indicatorsData = getters.getIndicatorData()\r\n            for (const indicatorData of indicatorsData) {\r\n                const indicatorKey = indicatorData['Indicator Key']\r\n                const indicatorYear = indicatorData.Year\r\n                const indicatorValue = indicatorData.Value\r\n\r\n                const indicatorName = indicatorDataSets[indicatorKey].name\r\n\r\n                var dataRecord = {}\r\n                dataRecord.Year = indicatorYear\r\n                dataRecord[indicatorName] = indicatorValue\r\n\r\n                indicatorDataSets[indicatorKey].data.push(dataRecord)\r\n            }\r\n            commit('setIndicatorDataSets', indicatorDataSets)\r\n        },\r\n        saveVisualisationDataset ({ commit, dispatch, getters }, payload) {\r\n            var visualisationDatasets = getters.getVisualisationDatasets()\r\n            const config = payload.config\r\n            const dataset = payload.dataset\r\n            var newDataset = true\r\n            for (var visualisationDataset of visualisationDatasets) {\r\n                if (isEqual(visualisationDataset.config, config)) {\r\n                    newDataset = false\r\n                    visualisationDataset.dataset = dataset\r\n                }\r\n            }\r\n            if (newDataset) visualisationDatasets.push(payload)\r\n            commit('setVisualisationDatasets', visualisationDatasets)\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}