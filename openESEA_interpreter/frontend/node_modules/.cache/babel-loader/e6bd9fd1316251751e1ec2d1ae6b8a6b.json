{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue?vue&type=template&id=02804e48","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue","mtime":1707572265527},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["style","class","_createElementBlock","_hoisted_1","$data","loading","_ctx","failedLoad","_createBlock","_component_ProgressSpinner","key","_hoisted_2","surveyResponse","finished","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","survey","name","_hoisted_6","description","_hoisted_7","respondent","organisation","sections","length","_hoisted_8","sectionNumber","_hoisted_9","welcome_text","_createVNode","_component_Divider","_hoisted_10","$options","totalSections","_hoisted_11","_component_ProgressBar","value","progress","_hoisted_12","currentSection","title","_renderList","mergedQuestionsAndTextFragments","item","index","_component_section_component","tabindex","id","answer","answers","active","activeQuestion","refresh","onInput","$event","updateAnswer","direct_indicator","onFocus","toggleActive","onFocuschecking","onBlur","_hoisted_13","closing_text","_hoisted_14","_hoisted_15","_component_Button","label","disabled","onClick","previousSection","_hoisted_16","saveSurvey","_hoisted_17","nextSection","finishSurvey","_hoisted_18","_component_Dialog","visible","missedQuestionsDialog","width","header","modal","footer","_withCtx","_cache","_hoisted_19","missedQuestions","question","goToQuestion"],"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue"],"sourcesContent":["<template>\r\n    <div style=\"width: 100%;\">\r\n        <ProgressSpinner v-if=\"loading && !failedLoad\" />\r\n        <div v-else-if=\"loading && failedLoad\" class=\"p-text-italic\">THe Survey could not be loaded!</div> <!-- style=\"background-color: #ddedc8;\" -->\r\n        <div v-else-if=\"!surveyResponse.finished\" class=\"p-d-flex p-grid p-jc-center p-m-0\" >\r\n            <div class=\"p-col-12 p-grid p-jc-center p-p-3\">\r\n                <h1 class=\"p-col-12 p-m-0\">{{survey.name}}</h1>\r\n                <h3 class=\"p-col-12 p-m-0\">{{survey.description}}</h3>\r\n                <div class=\"p-col-4 p-text-left\">\r\n                    <p><span class=\"p-text-bold\">Respondent:</span> {{surveyResponse.respondent}} <br> <span class=\"p-text-bold\">Organisation:</span> {{surveyResponse.organisation}} </p>\r\n                </div>\r\n            </div>\r\n            <!-- {{surveyResponse}} -->\r\n            <div v-if=\"this.survey.sections.length\" class=\"p-grid p-col-6 p-m-5\" style=\"border-radius: 10px\">\r\n                <div v-if=\"sectionNumber === 0\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.welcome_text}}</h3></div>\r\n                <Divider />\r\n                <div class=\"p-col-6 p-text-left p-text-bold\">Section {{ sectionNumber + 1 }} of {{ totalSections.length }}</div>\r\n                <div class=\"p-col-6 p-text-right\">\r\n                    <ProgressBar :value=\"progress + 0.1\">{{progress}}% completed</ProgressBar></div>\r\n                <div class=\"p-col-12 p-text-left\"><h3>Section: '{{currentSection.title}}'</h3></div>\r\n                <!-- {{answers}} -->\r\n                <section-component class=\"p-col-12 p-my-2\"\r\n                    v-for=\"item, index in currentSection.mergedQuestionsAndTextFragments\"\r\n                    tabindex=\"0\"\r\n                    :key=\"item.id\"\r\n                    :item=\"item\"\r\n                    :answer=\"answers[item.id]\"\r\n                    :active=\"activeQuestion === (index)\"\r\n                    :refresh=\"refresh\"\r\n                    @input=\"updateAnswer(item.direct_indicator[0].id, item.id, $event)\"\r\n                    @focus=\"toggleActive(index)\"\r\n                    @focuschecking=\"toggleActive(index)\"\r\n                    @blur=\"toggleActive\"\r\n                />\r\n                <div v-if=\"(sectionNumber + 1) === totalSections.length\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.closing_text}}</h3></div>\r\n                <div class=\"p-grid p-col-12 p-m-0 p-px-0\">\r\n                    <div class=\"p-col-6 p-text-left p-pl-0\">\r\n                        <Button label=\"Previous Section\" class=\"p-button-raised\" :disabled=\"sectionNumber === 0\" @click=\"previousSection\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right\">\r\n                        <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised\" @click=\"saveSurvey\" :disabled=\"true\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right p-pr-0\">\r\n                        <Button v-if=\"sectionNumber + 1 < totalSections.length\" label=\"Next Section\" class=\"p-button-raised\" style=\"width: 100%;\" @click=\"nextSection\" />\r\n                        <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%;\" @click=\"finishSurvey\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h1 v-else>This survey has no sections to display!</h1>\r\n        </div>\r\n\r\n        <Dialog v-model:visible=\"missedQuestionsDialog\" :style=\"{width: '450px'}\" header=\"Missing Answers\" :modal=\"true\">\r\n            <i class=\"pi pi-star p-mr-3\" style=\"font-size: 1.5rem\" />\r\n            <span class=\"p-text-left\">You need to fill in the following answers to be able to send your survey response:</span>\r\n            <div class=\"p-grid p-m-2\">\r\n                <div v-for=\"question in missedQuestions\" :key=\"question\" class=\"p-col-12\">\r\n                    <Button :label=\"`Question: '${question.name}'`\" style=\"width: 100%;\" @click=\"goToQuestion(question)\"> </Button>\r\n                </div>\r\n            </div>\r\n            <template #footer>\r\n                <Button label=\"Ok\" class=\"p-button-text\" @click=\"missedQuestionsDialog = false\"/>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import SectionComponent from '../../components/survey/SectionComponent'\r\n    import ProgressBar from 'primevue/progressbar'\r\n    import ProgressSpinner from 'primevue/progressspinner'\r\n\r\n    export default {\r\n        components: {\r\n            SectionComponent,\r\n            ProgressBar,\r\n            ProgressSpinner\r\n        },\r\n        data () {\r\n            return {\r\n                questionresponses: null,\r\n                loading: true,\r\n                failedload: false,\r\n                sectionNumber: 0,\r\n                progressBarValue: 0,\r\n                activeQuestion: null,\r\n                missedQuestions: [],\r\n                missedQuestionsDialog: false,\r\n                refresh: false\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponse', 'surveyResponses']),\r\n            ...mapState('eseaAccount', ['eseaAccount']),\r\n            ...mapState('question', ['questions']),\r\n            answers () {\r\n                if (this.loading) { return null } else {\r\n                var answers = {}\r\n                // console.log(']]]]', this.surveyResponse)\r\n\t\t\t\tthis.surveyResponse.question_responses.forEach((response) => {\r\n\t\t\t\t\t// if (answer.question === 36) { console.log('vallueee', answer) }\r\n                     const relevantquestion = this.questions.find(q => q.id === response.question)\r\n                    if (relevantquestion.uiComponent === 'checkbox') {\r\n                        answers[response.question] = response.values\r\n                    } else {\r\n                        answers[response.question] = response.value\r\n                    }\r\n\t\t\t\t})\r\n                // console.log(')))', answers)\r\n                return answers\r\n                }\r\n            },\r\n            currentSection () {\r\n                const section = this.survey.sections[this.sectionNumber]\r\n                const mergedQuestionsAndTextFragments = section?.questions.concat(section.text_fragments)\r\n                const sortedComponents = mergedQuestionsAndTextFragments?.sort((a, b) => (a.order > b.order) ? 1 : -1)\r\n                section.mergedQuestionsAndTextFragments = sortedComponents\r\n                return section\r\n            },\r\n            totalSections () {\r\n                const sectionList = []\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    sectionList.push(this.survey.sections[i].id)\r\n                }\r\n                // for (const section in this.survey?.sections) { totalSections = totalSections + this.survey?.topics[topic].sub_topics.length }\r\n\r\n                return sectionList\r\n            },\r\n            progress () {\r\n                var progress\r\n                if (this.sectionNumber === 0) { return 0 }\r\n                progress = ((this.sectionNumber + 1) / this.totalSections.length) * 100\r\n                return progress\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            surveyResponse: {\r\n                handler: function (newValue) {\r\n                    this.refresh = !this.refresh\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        created () {\r\n            console.log('eee')\r\n            setTimeout(() => { this.failedLoad = true }, 10000)\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponse', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse', 'setSurveyResponse']),\r\n            ...mapActions('question', ['fetchQuestions']),\r\n            async initialize () {\r\n                // Unique Token can be a 'pk', 'survey=survey_pk' or 'survey response token' (more on this in the backend, survey_responseview..py in the retrieve function.\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                console.log('++++', this.eseaAccount, this.surveyResponse.question_responses)\r\n                await this.fetchSurvey({ mId: this.surveyResponse.method, id: this.surveyResponse.survey })\r\n                console.log(this.survey.name)\r\n                await this.fetchQuestions({ mId: this.surveyResponse.method, SuId: this.surveyResponse.survey, SeId: 0 })\r\n                this.loading = false\r\n                console.log('eee', this.surveyResponse.question_responses)\r\n                if (this.surveyResponse.finished) {\r\n                    console.log(this.surveyResponse.survey_audit)\r\n                    if (this.surveyResponse.survey_audit) {\r\n                        print()\r\n                        console.log('Go to read only version of survey-fill for multiple respondent auditing purposes.')\r\n                        // this.$router.push({ name: 'survey-audit' })\r\n                    }\r\n                    this.$router.push({ name: 'survey-thank-you' })\r\n                }\r\n                this.questionresponses = this.surveyResponse.question_responses\r\n            },\r\n            previousSection () {\r\n                if (this.sectionNumber > 0) {\r\n                    this.sectionNumber--\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            nextSection () {\r\n                if (this.sectionNumber + 1 < this.totalSections.length) {\r\n                    this.sectionNumber++\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            toggleActive (question) {\r\n                if (Number.isInteger(question)) {\r\n                    this.activeQuestion = question\r\n                } else {\r\n                    this.activeQuestion = null\r\n                    }\r\n            },\r\n            goToQuestion (question) {\r\n                this.sectionNumber = this.totalSections.indexOf(question.section)\r\n                console.log(this.sectionNumber)\r\n                this.missedQuestionsDialog = false\r\n            },\r\n            saveSurvey () {\r\n                // TODO // popup Dialog: Survey is automatically saved.\r\n            },\r\n            async finishSurvey () {\r\n                console.log('cc')\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                this.checkRequiredQuestions = true\r\n                this.missedQuestions = []\r\n                await this.checkMandatoryFields()\r\n                console.log('reee')\r\n                if (!this.missedQuestions.length) {\r\n                this.surveyResponse.finished = true\r\n                await this.updateResponse()\r\n                this.$router.push({ name: 'survey-thank-you' })\r\n                } else {\r\n                    this.missedQuestionsDialog = true\r\n                }\r\n            },\r\n            updateAnswer (id, questionId, answer) {\r\n                if (answer.answer === null) { return }\r\n                console.log('====>', answer, id, questionId, this.questionresponses)\r\n                var responseIndex = this.questionresponses.findIndex(response => response.question === questionId)\r\n            //     console.log(responseIndex)\r\n                var questionResponse = null\r\n                if (responseIndex > -1) {\r\n                    questionResponse = this.questionresponses.splice(responseIndex, 1)[0]\r\n                } else {\r\n                    questionResponse = { question: questionId, direct_indicator_id: id, values: [], value: null }\r\n                }\r\n                if (answer.datatype === 'multiplechoice') {\r\n                    questionResponse.values = answer.answer\r\n                } else {\r\n                    questionResponse.value = answer.answer\r\n                }\r\n                this.questionresponses.push(questionResponse)\r\n                this.surveyResponse.question_responses = this.questionresponses\r\n\r\n                if (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey) {\r\n                    console.log('clearly not the same')\r\n                }\r\n                var SurveyId = parseInt(this.$route.params.uniquetoken.replace('survey=', ''))\r\n                console.log(SurveyId === this.surveyResponse.survey)\r\n                if ((this.$route.params.uniquetoken !== this.surveyResponse.token) && (SurveyId !== this.surveyResponse.survey) && (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey)) { // (this.$route.params.uniquetoken !== 'accountant')\r\n                    console.log('Not possible')\r\n                    return\r\n                }\r\n                this.updateResponse()\r\n            },\r\n            async updateResponse () {\r\n                console.log('dddd')\r\n                await this.updateSurveyResponse({\r\n                    oId: this.eseaAccount?.organisation,\r\n                    eaId: this.eseaAccount?.id,\r\n                    token: this.surveyResponse.id, // this.$route.params.uniquetoken,\r\n                    surveyResponse: {\r\n                        ...this.surveyResponse\r\n                    }\r\n                })\r\n            },\r\n            checkMandatoryFields () {\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    for (let j = 0; j < this.survey.sections[i].questions.length; j++) {\r\n                        if (this.survey.sections[i].questions[j].isMandatory) {\r\n                            const answer = this.surveyResponse.question_responses.find(response => response.question === this.survey.sections[i].questions[j].id)\r\n\r\n                            if (!answer || (!answer.values.length && !answer.value)) {\r\n                                this.survey.sections[i].questions[j].required = true\r\n                                this.missedQuestions.push(this.survey.sections[i].questions[j])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}