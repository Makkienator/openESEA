{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\store\\modules\\method\\direct_indicator.js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\store\\modules\\method\\direct_indicator.js","mtime":1707572265422},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\babel.config.js","mtime":1707572265264},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1741014586138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["random","debounce","isInteger","DirectIndicatorService","baseDirectIndicator","key","name","description","isMandatory","datatype","options","namespaced","state","directIndicators","directIndicator","error","undefined","debouncers","errors","isSaved","getters","getDirectIndicators","getById","id","find","object","topicDirectIndicators","filtered","forEach","topic","getValidDirectIndicatorNumber","indicators","map","indicator","parseInt","match","filter","length","Math","max","mutations","setDirectIndicators","data","objType","setDirectIndicator","deleteDirectIndicator","i","updateList","item","Object","assign","addNewDirectIndicator","question","console","log","push","setDebouncer","commit","mId","method","response","setIsSaved","setError","_error$response","_error$response2","_error$response3","clearError","actions","fetchDirectIndicators","payload","get","patchDirectIndicator","patch","headers","updateDirectIndicator","delete","resetError"],"sources":["C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/store/modules/method/direct_indicator.js"],"sourcesContent":["import { random, debounce, isInteger } from 'lodash'\r\nimport DirectIndicatorService from '../../../services/DirectIndicatorService'\r\n\r\nconst baseDirectIndicator = { key: '', name: '', description: '', isMandatory: true, datatype: '', options: [] }\r\n\r\nexport default {\r\n    namespaced: true,\r\n    state: {\r\n        directIndicators: [],\r\n        directIndicator: {},\r\n        error: undefined,\r\n        debouncers: {},\r\n        errors: {},\r\n        isSaved: {}\r\n    },\r\n    getters: {\r\n        getDirectIndicators: state => state.directIndicators,\r\n        getById: state => id => state.directIndicators.find(object => object.id === id),\r\n        topicDirectIndicators: (state) => {\r\n            const filtered = {}\r\n            state.directIndicators.forEach((directIndicator) => { filtered[directIndicator.topic] = !filtered[directIndicator.topic] ? [directIndicator] : [...filtered[directIndicator.topic], directIndicator] })\r\n            return filtered\r\n        },\r\n        getValidDirectIndicatorNumber: (state) => {\r\n            const indicators = state.directIndicators.map(indicator => parseInt(indicator.name.match(/[^_]*$/), 10)).filter(indicator => isInteger(indicator))\r\n            return indicators.length ? Math.max(...indicators) + 1 : 1\r\n        }\r\n    },\r\n    mutations: {\r\n        setDirectIndicators (state, { data }) {\r\n            if (data.length) {\r\n                data.forEach(indicator => { indicator.objType = 'direct-indicator' })\r\n            }\r\n            state.directIndicators = data || {}\r\n            state.debouncers = {}\r\n            state.errors = {}\r\n            state.isSaved = {}\r\n        },\r\n        setDirectIndicator (state, { data }) {\r\n            state.directIndicator = data || {}\r\n        },\r\n        deleteDirectIndicator (state, { id }) {\r\n            delete state.debouncers[id]\r\n            delete state.errors[id]\r\n            delete state.isSaved[id]\r\n            state.directIndicators = state.directIndicators.filter(i => i.id !== id)\r\n            if (state.directIndicator.id === 'id') {\r\n                state.directIndicator = {}\r\n            }\r\n        },\r\n        // update list instead of pushing complete object\r\n        updateList (state, { id, data }) {\r\n            if (id !== data.id) {\r\n                delete state.debouncers[id]\r\n                delete state.errors[id]\r\n                delete state.isSaved[id]\r\n            }\r\n            state.directIndicators = state.directIndicators.map((item) => {\r\n                if (item.id !== id) { return item }\r\n                return Object.assign(item, data)\r\n            })\r\n        },\r\n        addNewDirectIndicator (state, { topic, question }) {\r\n            // set information of direct indicator. Temporary id is created (negative number), which is used untill direct indicator is pushed to backend and gets permanend id.\r\n            const directIndicator = { ...baseDirectIndicator, id: random(-1000000, -1) }//, topic, question }\r\n            console.log('topic' + topic, 'question' + question)\r\n            // new direct indicator is pushed to local storage\r\n            state.directIndicators.push(directIndicator)\r\n            // new direct indicator is set as active direct indicator\r\n            state.directIndicator = directIndicator\r\n        },\r\n        setDebouncer (state, { id, commit }) {\r\n            state.debouncers[id] = debounce(\r\n                async ({ mId, directIndicator }) => {\r\n                    // check if indicator exists in database (positive id) or not (negative, temporary id). Uses put or post dependent on this. Put/post can be found in BaseApiService.\r\n                    const method = directIndicator.id > 0 ? 'put' : 'post'\r\n                    // call to backend. DirectIndicatorService. Payload in curly braces.\r\n                    const { response, error } = await DirectIndicatorService[method]({ mId, id, data: directIndicator })\r\n                    // check if error, if yes, save error and return.\r\n                    if (error) {\r\n                        commit('setError', { error, id: directIndicator.id })\r\n                        return\r\n                    }\r\n                    // make changes to state by calling other mutations\r\n                    // empty error list\r\n                    commit('setError', { error: {}, id: directIndicator.id })\r\n\t\t\t\t\t// set saved to true, indicating that indicator has been saved to database\r\n                    commit('setIsSaved', { id: directIndicator.id, isSaved: true })\r\n                    // update local storage list (eg with new non-temporary id)\r\n\t\t\t\t\tcommit('updateList', { id: directIndicator.id, data: response.data })\r\n                    // update local storage current object\r\n                    commit('setDirectIndicator', response)\r\n                },\r\n                1000\r\n            )\r\n        },\r\n        setIsSaved (state, { id, isSaved = false }) {\r\n            if (id) {\r\n                state.isSaved = {\r\n                    ...state.isSaved,\r\n                    [id]: isSaved\r\n                }\r\n            }\r\n        },\r\n        setError (state, { error, id }) {\r\n            console.log(error?.response?.data)\r\n            if (id && error?.response?.data) {\r\n                state.errors = { ...state.errors, [id]: error?.response?.data }\r\n                return\r\n            }\r\n            state.error = error\r\n        },\r\n        clearError (state) {\r\n            state.error = []\r\n        }\r\n    },\r\n    actions: {\r\n        async fetchDirectIndicators ({ commit }, payload) {\r\n            commit('clearError')\r\n            const { response, error } = await DirectIndicatorService.get(payload)\r\n            if (error) {\r\n                commit('setError', { error })\r\n                return\r\n            }\r\n            console.log('Response', response) // TEMP\r\n            commit('setDirectIndicators', response)\r\n        },\r\n        async patchDirectIndicator ({ commit }, { mId, id, data }) {\r\n            const { response, error } = await DirectIndicatorService.patch({ mId: mId, id: id, data: data, headers: { 'Content-Type': 'application/json' } })\r\n            if (error) {\r\n                commit('setError', { error })\r\n                return\r\n            }\r\n            commit('updateList', { id: id, data: response.data })\r\n            commit('setDirectIndicator', response)\r\n        },\r\n        updateDirectIndicator ({ state, commit }, { mId, directIndicator }) {\r\n            if (directIndicator.topic === null) {\r\n                delete directIndicator.topic\r\n            }\r\n            // clear previous errors\r\n            commit('clearError')\r\n            delete state.errors[directIndicator.id]\r\n\r\n            // check if payload is complete\r\n            if (!directIndicator || !mId || !directIndicator.name || !directIndicator.key) { return }\r\n\r\n            // reset unsaved status: indicate that indicator has not yet been saved to database\r\n            commit('setIsSaved', { id: directIndicator.id })\r\n\r\n            // check if call has already been recently made for this indicator. Debouncer object avoid database call overload.\r\n            if (!state.debouncers[directIndicator.id]) {\r\n                // where the magic happens: call to database\r\n                commit('setDebouncer', { id: directIndicator.id, commit })\r\n            }\r\n            // check if id is negative (ie if id is temporary from local storage), and call updatelist to update localstorage\r\n            if (directIndicator.id < 0) {\r\n                commit('updateList', { id: directIndicator.id, data: directIndicator })\r\n            }\r\n            // add debouncer for this indicator to local storage (?)\r\n            state.debouncers[directIndicator.id]({ mId, directIndicator })\r\n        },\r\n        async deleteDirectIndicator ({ commit }, payload) {\r\n            if (payload.id > 0) {\r\n                const { error } = await DirectIndicatorService.delete(payload)\r\n                if (error) {\r\n                    commit('setError', { error })\r\n                    return\r\n                }\r\n            }\r\n            commit('deleteDirectIndicator', payload)\r\n        },\r\n        setDirectIndicator ({ state, commit }, { id } = {}) {\r\n            if (id) {\r\n            const data = state.directIndicators.find(indicator => indicator.id === id)\r\n            if (data && data.id === state.directIndicator.id) { return data }\r\n            commit('setDirectIndicator', { data })\r\n            } else {\r\n                commit('setDirectIndicator', {})\r\n            }\r\n        },\r\n        resetError ({ commit }) {\r\n            commit('setError', { error: undefined })\r\n        },\r\n        addNewDirectIndicator ({ commit }, payload) {\r\n            // call mutation addNewDirectIndicator\r\n            commit('addNewDirectIndicator', payload)\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}