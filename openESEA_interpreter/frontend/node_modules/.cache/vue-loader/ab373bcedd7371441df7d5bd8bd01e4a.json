{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\UserDetails.vue?vue&type=style&index=0&id=7395f3a6&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\UserDetails.vue","mtime":1707572265531},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741014585012},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLnAtaW5wdXR0ZXh0IHsNCiAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRncmV5Ow0KICAgIH0NCiAgICAuYm9yZGVybGVzcyB7DQogICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZWQ7DQoNCiAgICB9DQogICAgLmltYWdldXBsb2FkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzOw0KICAgIGNvbG9yOiB3aGl0ZTsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgbWFyZ2luOiAwcHggNTBweDsNCiAgICBib3JkZXItcmFkaXVzOiA1cHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgIH0NCg=="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\UserDetails.vue"],"names":[],"mappings":";IA2NI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEhC;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/user/UserDetails.vue","sourceRoot":"","sourcesContent":["// http://localhost:8080/users/user_id/\r\n\r\n<template>\r\n    <div class=\"p-grid p-m-0 p-p-0\" style=\"height: 100%;\">\r\n        <div class=\"p-col-fixed p-m-0 p-p-0\" style=\"height: 100%;\">\r\n            <!-- <organisation-sidebar :links=\"links\" :name=\"network.name\" @reroute=\"goToPage\"/> -->\r\n            <sub-sidebar :links=\"links\" />\r\n        </div>\r\n        <div class=\"p-col\">\r\n            <div class=\"p-col-12 p-text-left p-text-italic p-m-0 p-px-5\">\r\n            </div>\r\n            <router-view />\r\n        </div>\r\n    </div>\r\n    <!-- <input v-if=\"usernameedit && editing\" v-model=\"user.username\" @focus=\"usernameedit\" @blur=\"usernameedit=false && console.log('check')\" @keyup.enter=\"usernameedit=false\" class=\"p-col-12 p-inputtext\" />\r\n                            <div v-else @click=\"usernameedit=true\">{{user.username}}</div> --> <!--@focusin=\"true\" @focusout=\"usernameedit=false\" -->\r\n    <div class=\"p-d-flex p-jc-center\" style=\"width: 100%; height: 100%;\">\r\n        <div style=\"width: 100%;\">\r\n            <!-- <h1> {{user.username}}'s Profile</h1> -->\r\n            <!-- <Divider /> -->\r\n            <TabView class=\"p-shadow-2\" style=\"height: 80%;\">\r\n                <TabPanel header=\"Contact Information\" style=\"height: 80%;\">'\r\n                    a'\r\n                </TabPanel>\r\n                <TabPanel header=\"User Settings\">\r\n                </TabPanel>\r\n                <TabPanel header=\"Permissions and Teams\">\r\n                </TabPanel>\r\n            </TabView>\r\n            <!-- <form id=\"userform\" v-on:submit.prevent=\"updateProfile\" class=\"p-grid p-fluid p-p-5\" style=\"width: 1000px\">\r\n                <div class=\"p-col-7 p-grid p-ai-center p-text-left p-p-3\">\r\n                        <div class=\"p-col-6 p-text-bold\"> Username </div>\r\n                        <div class=\"p-col-6\">\r\n                            <input id=\"username\" v-if=\"editablefields.username\" v-model=\"user.username\" @blur=\"editablefields.username=false\" @keyup.enter=\"editablefields.username=false\" class=\"p-inputtext\" />\r\n                            <div v-else @click=\"delayedfocus('username')\">{{user.username}}</div>\r\n                            <div class=\"p-error p-text-italic\" v-for=\"error in usernameErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n                        </div>\r\n                        <div class=\"p-col-6 p-text-bold\"> Full name </div>\r\n                        <div class=\"p-col-6 \">\r\n                            <div v-if=\"editablefields.fullname\">\r\n                            <input id=\"firstname\" v-if=\"editablefields.fullname\" v-model=\"user.first_name\"  @focus=\"editablefields.fullname=true\" placeholder=\"first name\" @blur=\"editablefields.fullname=false\" class=\"p-inputtext\" />\r\n                            <input id=\"prefix\" v-if=\"editablefields.fullname\" v-model=\"user.last_name_prefix\" @focus=\"editablefields.fullname=true\" placeholder=\"last name prefix\" @blur=\"editablefields.fullname=false\" class=\"p-inputtext\" />\r\n                            <input id=\"lastname\" v-if=\"editablefields.fullname\" v-model=\"user.last_name\" @focus=\"editablefields.fullname=true\" placeholder=\"last name\" @blur=\"editablefields.fullname=false\" class=\"p-inputtext\" />\r\n                            </div>\r\n                            <div v-else @click=\"delayedfocus('fullname')\">{{ (user.firstname || user.last_name_prefix || user.last_name) ? `${user.first_name} ${user.last_name_prefix} ${user.last_name}` : 'no name'}}</div>\r\n                        </div>\r\n                        <div class=\"p-col-6 p-text-bold\"> Email </div>\r\n                        <div class=\"p-col-6\">\r\n                            <input id=\"email\" v-if=\"editablefields.email || emailErrors.length\" type=\"email\" v-model=\"user.email\" @blur=\"editablefields.email=false\" @keyup.enter=\"editablefields.email=false\" placeholder=\"email\" class=\"p-inputtext\" :class=\"{'borderless': emailErrors.length}\" />\r\n                            <div v-else @click=\"delayedfocus('email')\">{{user.email}}</div>\r\n                            <div class=\"p-error p-text-italic\" v-for=\"error in emailErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n                        </div>\r\n                        <div class=\"p-col-6 p-text-bold\"> Account Creation </div>\r\n                        <div class=\"p-col-6\"> {{ user?.date_joined?.slice(0, 10) }} </div>\r\n                        <div class=\"p-col-12\" >\r\n                            <div class=\"p-text-bold p-mb-2\" >Bio</div>\r\n                            <textarea id=\"bio\" v-if=\"editablefields.bio\" type=\"text\" rows=\"5\" @blur=\"editablefields.bio=false\" @keyup.enter=\"editablefields.bio=false\" class=\"p-inputtext\" />\r\n                            <div v-else @click=\"delayedfocus('bio')\">\r\n                                Hello this is my Bio! Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                <div class=\"p-col-1\"></div>\r\n                <div class=\"p-col p-grid\">\r\n                    <div class=\"p-col-12\">\r\n                        <img class=\"p-shadow-5\" :src=\"user.image\" alt=\"Profile Avatar\" style=\"max-width: 200px; max-height: 200px; border-radius: 50%;\" format=\"image/jpeg\">\r\n                    </div>\r\n                    <div v-if=\"editing\" class=\"p-grid p-col-12 p-px-5\">\r\n                        <input id=\"uploadfile\" type=\"file\" accept=\"image/*\" @change=\"validateImage\" hidden />\r\n                        <label for=\"uploadfile\" class=\"p-col imageupload p-text-center\"> Change your Avatar</label>\r\n                        <div class=\"p-col-12\">{{file.name}}</div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <Divider />\r\n            <div v-if=\"currentuser === user.username\" class=\"p-d-flex p-jc-start\">\r\n                <Button type=\"submit\" form=\"userform\" label=\"Save Profile\" class=\"p-button-raised p-button-primary p-mr-2\" :loading=\"loading\" />\r\n                <Button label=\"Delete Account\" class=\"p-button-raised p-button-danger\" @click=\"deleteAccountDialog = true\" />\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n\r\n    <Dialog v-if=\"user\" v-model:visible=\"deleteAccountDialog\" :style=\"{width: '450px'}\" header=\"Confirm\" :modal=\"true\">\r\n        <div class=\"confirmation-content\">\r\n            <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size:1.5rem\" />\r\n            <span>Are you sure you want to delete the following account: '<b>{{user.username}}</b>'?</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteAccountDialog = false\" />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"deleteAccount()\" />\r\n        </template>\r\n    </Dialog>\r\n\r\n</template>\r\n\r\n<script>\r\n    import useVuelidate from '@vuelidate/core'\r\n    import { required, minLength, maxLength, email } from 'vuelidate/lib/validators'\r\n    import HandleValidationErrors from '../../utils/HandleValidationErrors'\r\n    import { mapActions, mapState } from 'vuex'\r\n    import imageValidator from '../../utils/imageValidator'\r\n    import SubSidebar from '@/components/SubSidebar'\r\n\r\n    export default {\r\n        components: {\r\n            SubSidebar\r\n        },\r\n        data () {\r\n            return {\r\n                deleteAccountDialog: false,\r\n                editing: false,\r\n                activatefocus: false,\r\n                loading: false,\r\n                file: false,\r\n                editablefields: {\r\n                    username: false,\r\n                    fullname: false,\r\n                    email: false,\r\n                    accountcreation: false,\r\n                    bio: false\r\n                    },\r\n                links: [\r\n                    {\r\n                        name: 'Contact Information',\r\n                        icon: 'pi pi-user',\r\n                        path: 'profileoverview'\r\n                    },\r\n                    {\r\n                        name: 'Socials',\r\n                        icon: 'pi pi-comments',\r\n                        path: 'profilesocials'\r\n                    },\r\n                    {\r\n                        name: 'User Settings',\r\n                        icon: 'pi pi-cog',\r\n                        path: 'profilesettings'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('user', ['user', 'error']),\r\n            ...mapState('authentication', ['currentuser', 'authenticatedUser']),\r\n            usernameErrors () {\r\n                return HandleValidationErrors(this.v$.user.username, this.error.username)\r\n            },\r\n            emailErrors () {\r\n                return HandleValidationErrors(this.v$.user.email, this.error.email)\r\n            }\r\n        },\r\n        setup: () => ({ v$: useVuelidate() }),\r\n        validations: {\r\n            user: {\r\n                username: { required, minLength: minLength(4), maxLength: maxLength(50) },\r\n                fullname: {},\r\n                email: { email, required }\r\n                // bio: {} Isn't an attribute in the user Model yet (backend).\r\n            }\r\n        },\r\n        async created () {\r\n            await this.fetchUser({ id: this.$route.params.id })\r\n            this.initialize()\r\n        },\r\n        mounted  () {\r\n            /*\r\n                this.$refs.myref.focus()\r\n            */\r\n        },\r\n        methods: {\r\n            ...mapActions('user', ['fetchUser', 'updateUser', 'deleteUser']),\r\n            initialize () {\r\n                if (this.currentuser === this.user.username) {\r\n                    this.editing = true\r\n                }\r\n            },\r\n            async updateProfile () {\r\n                this.v$.user.$touch()\r\n                if (this.v$.user.$invalid) { return }\r\n                this.loading = true\r\n                setTimeout(() => { this.loading = false }, 1000)\r\n\r\n                // formData can be used to construct objects to send through a Post Request.\r\n                var formData = new FormData()\r\n                for (var key in this.user) {\r\n                    if (key !== 'image') {\r\n                        if (this.user[key].length) {\r\n                            formData.append(key, this.user[key])\r\n                        }\r\n                    }\r\n                }\r\n                // Add image file to formData object if an image was uploaded.\r\n                if (this.file) {\r\n                    formData.append('image', this.file)\r\n                }\r\n                await this.updateUser(formData)\r\n                await this.fetchUser({ id: this.$route.params.id })\r\n                setTimeout(() => { this.loading = false }, 1000)\r\n            },\r\n            async deleteAccount () {\r\n                if (this.currentuser === this.user.username) {\r\n                    await this.deleteUser({ id: this.user.id })\r\n                    this.$router.push({ name: 'logout' })\r\n                }\r\n            },\r\n            // Used to change an attribute (e.g. bio) to an input field in order for it to be changed.\r\n            delayedfocus (id) {\r\n                if (this.editing) {\r\n                    this.editablefields[`${id}`] = true\r\n                    setTimeout(() => { document.getElementById(`${id}`).focus() }, 50)\r\n                }\r\n            },\r\n            async validateImage (e) {\r\n                this.file = await imageValidator(e)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .p-inputtext {\r\n        border: none;\r\n        border-bottom: 1px solid lightgrey;\r\n    }\r\n    .borderless {\r\n        border-bottom: 1px solid red;\r\n\r\n    }\r\n    .imageupload {\r\n    background-color: #2196F3;\r\n    color: white;\r\n    padding: 5px;\r\n    margin: 0px 50px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    }\r\n</style>\r\n\r\n// <div class=\"p-col-4 p-shadow-1\" style=\"border-style: solid; border-color: #f2f2f2; border-width: thin; opacity: 0.6\"></div>\r\n"]}]}