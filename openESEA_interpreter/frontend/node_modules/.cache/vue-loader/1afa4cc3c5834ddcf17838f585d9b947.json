{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyUserResult.vue?vue&type=template&id=85ca5766","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyUserResult.vue","mtime":1707572265528},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0icC1kLWZsZXggcC1ncmlkIHAtamMtY2VudGVyIHAtbS0wIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMTIgcC1wLTMiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZGNlZGM4OyI+DQogICAgICAgICAgICA8aDE+e3tzdXJ2ZXkubmFtZX19PC9oMT4NCiAgICAgICAgICAgIDxoMz57e3N1cnZleS5kZXNjcmlwdGlvbn19PC9oMz4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtamMtY2VudGVyIj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icC10ZXh0LWxlZnQgcC10ZXh0LWJvbGQiPlJlc3BvbmRlbnQ6PC9zcGFuPiAne3tzdXJ2ZXlSZXNwb25zZS5yZXNwb25kZW50fX0nIDxicj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icC10ZXh0LWxlZnQgcC10ZXh0LWJvbGQiPm9yZ2FuaXNhdGlvbjo8L3NwYW4+ICd7e3N1cnZleVJlc3BvbnNlLm9yZ2FuaXNhdGlvbn19Jw0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8UHJvZ3Jlc3NTcGlubmVyIHYtaWY9ImxvYWRpbmcgJiYgIWZhaWxlZExvYWQiIC8+DQogICAgICAgIDxkaXYgdi1lbHNlIGNsYXNzPSJwLWdyaWQgcC1jb2wtNiBwLXAtMyIgc3R5bGU9Im1pbi13aWR0aDogODAwcHg7Ij4NCiAgICAgICAgICAgIDxkaXYgdi1mb3I9InNlY3Rpb24gaW4gc3VydmV5LnNlY3Rpb25zIiA6a2V5PSJzZWN0aW9uLmlkIiBjbGFzcz0icC1ncmlkIHAtY29sLTEyIHAtcC0zIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTsgYm9yZGVyLXJhZGl1czogMTBweDsiPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtY29sLTEyIHAtdGV4dC1sZWZ0Ij48aDM+U2VjdGlvbjogJ3t7c2VjdGlvbi50aXRsZX19JzwvaDM+PC9kaXY+DQogICAgICAgICAgICAgICAgPHN1cnZleS1xdWVzdGlvbiBjbGFzcz0icC1jb2wtMTIgcC1tLTIiDQogICAgICAgICAgICAgICAgdi1mb3I9InF1ZXN0aW9uIGluIHNlY3Rpb24ucXVlc3Rpb25zIg0KICAgICAgICAgICAgICAgIDprZXk9InF1ZXN0aW9uLmlkIg0KICAgICAgICAgICAgICAgIDpxdWVzdGlvbj0icXVlc3Rpb24iDQogICAgICAgICAgICAgICAgOmFuc3dlcj0iYW5zd2Vyc1txdWVzdGlvbi5pZF0iDQogICAgICAgICAgICAgICAgOnJlYWRvbmx5PSJ0cnVlIg0KICAgICAgICAgICAgICAgIC8+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyUserResult.vue"],"names":[],"mappings":";IAII,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5F,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3I,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/survey/SurveyUserResult.vue","sourceRoot":"","sourcesContent":["// http://localhost:8080/organisations/1/esea-accounts/20/surveys/6/result/\r\n// Shows results of a single Survey Response\r\n\r\n<template>\r\n    <div class=\"p-d-flex p-grid p-jc-center p-m-0\">\r\n        <div class=\"p-col-12 p-p-3\" style=\"background-color: #dcedc8;\">\r\n            <h1>{{survey.name}}</h1>\r\n            <h3>{{survey.description}}</h3>\r\n            <div class=\"p-jc-center\">\r\n                <span class=\"p-text-left p-text-bold\">Respondent:</span> '{{surveyResponse.respondent}}' <br>\r\n                <span class=\"p-text-left p-text-bold\">organisation:</span> '{{surveyResponse.organisation}}'\r\n            </div>\r\n        </div>\r\n        <ProgressSpinner v-if=\"loading && !failedLoad\" />\r\n        <div v-else class=\"p-grid p-col-6 p-p-3\" style=\"min-width: 800px;\">\r\n            <div v-for=\"section in survey.sections\" :key=\"section.id\" class=\"p-grid p-col-12 p-p-3\" style=\"background-color: #F5F5F5; border-radius: 10px;\">\r\n                <div class=\"p-col-12 p-text-left\"><h3>Section: '{{section.title}}'</h3></div>\r\n                <survey-question class=\"p-col-12 p-m-2\"\r\n                v-for=\"question in section.questions\"\r\n                :key=\"question.id\"\r\n                :question=\"question\"\r\n                :answer=\"answers[question.id]\"\r\n                :readonly=\"true\"\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex'\r\n    import SurveyQuestion from '../../components/survey/SurveyQuestion'\r\n    import ProgressSpinner from 'primevue/progressspinner'\r\n\r\n    export default {\r\n        components: {\r\n            SurveyQuestion,\r\n            ProgressSpinner\r\n        },\r\n        data () {\r\n            return {\r\n                loading: true,\r\n                failedLoad: false\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('method', ['method']),\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponses', 'surveyResponse']),\r\n            answers () {\r\n                const answers = {}\r\n                if (this.surveyResponse && this.surveyResponse.question_responses) {\r\n                    this.surveyResponse.question_responses.forEach((answer) => {\r\n                        console.log(answer)\r\n                        answers[answer.question] = answer.value\r\n                    })\r\n                }\r\n                return answers\r\n            }\r\n        },\r\n        created () {\r\n            this.setSurveyResponse()\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponse', 'setSurveyResponse']),\r\n            // ...mapActions('surveyResponseCalculation', ['fetchSurveyResponseCalculations']),\r\n            async initialize () {\r\n                await this.fetchSurvey({ mId: this.method.id, id: parseInt(this.$route.params.SurveyId) })\r\n                await this.fetchSurveyResponse({ oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId, id: `survey=${this.survey.id}` })\r\n                setTimeout(() => { this.failedLoad = true }, 10000)\r\n                this.loading = false\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}