{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\forms\\FormulaFormCorrect.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\forms\\FormulaFormCorrect.vue","mtime":1707572265303},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jw0KDQogICAgZXhwb3J0IGRlZmF1bHQgew0KICAgICAgICBjb21wb25lbnRzOiB7DQogICAgICAgIH0sDQogICAgICAgIHByb3BzOiB7DQogICAgICAgICAgICBmb3JtdWxhOiB7DQogICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6ICcnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAga2V5eTogew0KICAgICAgICAgICAgICAgIHR5cGU6IFN0cmluZw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBkYXRhICgpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgbGF6eUZvcm11bGE6IHRoaXMuZm9ybXVsYSB8fCAnJywNCiAgICAgICAgICAgICAgICBhdXRvQ29tcGxldGU6IGZhbHNlLA0KICAgICAgICAgICAgICAgIHBvc2l0aW9uTGVmdDogbnVsbCwNCiAgICAgICAgICAgICAgICBwb3NpdGlvblJpZ2h0OiBudWxsDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGNvbXB1dGVkOiB7DQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgnZGlyZWN0SW5kaWNhdG9yJywgWydkaXJlY3RJbmRpY2F0b3JzJ10pLA0KICAgICAgICAgICAgLi4ubWFwU3RhdGUoJ2luZGlyZWN0SW5kaWNhdG9yJywgWydpbmRpcmVjdEluZGljYXRvcnMnLCAnaW5kaXJlY3RJbmRpY2F0b3InXSksDQogICAgICAgICAgICBpbmRpY2F0b3JzICgpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kaXJlY3RJbmRpY2F0b3JzLmNvbmNhdCh0aGlzLmluZGlyZWN0SW5kaWNhdG9ycykNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgd2F0Y2g6IHsNCiAgICAgICAgICAgIGxhenlGb3JtdWxhICh2YWwpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmxhenlGb3JtdWxhID0gdmFsLnJlcGxhY2UoJyB0aGVuJywgJ1xudGhlbicpDQogICAgICAgICAgICAgICAgdGhpcy5sYXp5Rm9ybXVsYSA9IHZhbC5yZXBsYWNlKCcgZWxzZScsICdcbmVsc2UnKQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHZhbCkNCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdvdXRwdXQnLCB2YWwpDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIG1vdW50ZWQgKCkgew0KICAgICAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXMNCiAgICAgICAgICAgIHRoaXMuJHJlZnMuZXhwcmVzc2lvbi4kZWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBzZWxmLmNoZWNrVXNlclBvc2l0aW9uLCBmYWxzZSkNCiAgICAgICAgICAgIHRoaXMuJHJlZnMuZXhwcmVzc2lvbi4kZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZWxmLmNoZWNrVXNlclBvc2l0aW9uLCBmYWxzZSkNCiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGV2ZW50KSB7DQogICAgICAgICAgICAgICAgaWYgKHNlbGYuJHJlZnMuZm9jdXN3aW5kb3cgIT09IGV2ZW50LnRhcmdldCAmJiAhc2VsZi4kcmVmcy5mb2N1c3dpbmRvdz8uY29udGFpbnMoZXZlbnQudGFyZ2V0KSkgeyBzZWxmLnJlbW92ZUF1dG9Db21wbGV0ZSgpIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgIH0sDQogICAgICAgIG1ldGhvZHM6IHsNCiAgICAgICAgICAgIHNob3dJbmRpY2F0b3JzICgpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmF1dG9Db21wbGV0ZSA9IHRydWUNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICByZW1vdmVBdXRvQ29tcGxldGUgKCkgew0KICAgICAgICAgICAgICAgIHRoaXMuYXV0b0NvbXBsZXRlID0gZmFsc2UNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBjaGVja1VzZXJQb3NpdGlvbiAoZSkgew0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd1c2VyIGlzIG1vdmluZyEnKQ0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3NpdGlvbmxlZnQgPSBudWxsDQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9ucmlnaHQgPSBudWxsDQogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1c2VyUG9zaXRpb24gPSBlLnRhcmdldC5zZWxlY3Rpb25TdGFydA0KDQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5sYXp5Rm9ybXVsYS5pbmNsdWRlcygnI2lmZicpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXp5Rm9ybXVsYSA9IHRoaXMubGF6eUZvcm11bGEucmVwbGFjZSgnI2lmZicsIGBpZiAoW2luZGljYXRvcl9rZXldID0gbnVsbClcbnRoZW4gWyR7dGhpcy5rZXl5fV0gPSBudWxsXG5lbHNlIFske3RoaXMua2V5eX1dID0gbnVsbGApDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5sYXp5Rm9ybXVsYS5pbmNsdWRlcygnI2lmZScpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXp5Rm9ybXVsYSA9IHRoaXMubGF6eUZvcm11bGEucmVwbGFjZSgnI2lmZScsICdpZiAoKSBcbnRoZW4gXG5lbHNlJykNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gRm9sbG93aW5nIHRocmVlIGZvciBsb29wcyBsb29rIGZvciB0aGUgMSkuIGxlZnQgYnJhY2tldCBhbmQgMikuIHJpZ2h0IGJyYWNrZXQgb3IgMykuIGVtcHR5IHNwYWNlDQogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gdXNlclBvc2l0aW9uIC0gMTsgaSA+PSAwOyBpLS0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5sYXp5Rm9ybXVsYVtpXSA9PT0gJ10nKSB7IGJyZWFrIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5sYXp5Rm9ybXVsYVtpXSA9PT0gJ1snKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25sZWZ0ID0gaQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IHVzZXJQb3NpdGlvbjsgaSA8PSB0aGlzLmxhenlGb3JtdWxhLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGF6eUZvcm11bGFbaV0gPT09ICdbJykgeyBicmVhayB9DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMubGF6eUZvcm11bGFbaV0gPT09ICddJykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9ucmlnaHQgPSBpICsgMQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKHRoaXMucG9zaXRpb25sZWZ0KSAmJiAhdGhpcy5wb3NpdGlvbnJpZ2h0KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gdGhpcy5wb3NpdGlvbmxlZnQ7IGkgPD0gdGhpcy5sYXp5Rm9ybXVsYS5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoKHRoaXMubGF6eUZvcm11bGFbaV0gPT09ICcpJykgfHwgKHRoaXMubGF6eUZvcm11bGFbaV0gPT09ICcgJykpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25yaWdodCA9IGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbGVmdDogJywgdGhpcy5wb3NpdGlvbmxlZnQsICdyaWdodDogJywgdGhpcy5wb3NpdGlvbnJpZ2h0KQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKE51bWJlci5pc0ludGVnZXIodGhpcy5wb3NpdGlvbmxlZnQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93SW5kaWNhdG9ycygpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUF1dG9Db21wbGV0ZSgpDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgY2hvb3NlSW5kaWNhdG9yIChpbmRpY2F0b3IpIHsNCiAgICAgICAgICAgICAgICBjb25zdCB0ZW1wU3RyaW5nID0gdGhpcy5sYXp5Rm9ybXVsYS5zcGxpdCgnJykNCiAgICAgICAgICAgICAgICBsZXQgcmVtb3ZhYmxlUGFydCA9IHRoaXMubGF6eUZvcm11bGEubGVuZ3RoIC0gdGhpcy5wb3NpdGlvbmxlZnQNCiAgICAgICAgICAgICAgICBpZiAoTnVtYmVyLmlzSW50ZWdlcih0aGlzLnBvc2l0aW9ucmlnaHQpKSB7DQogICAgICAgICAgICAgICAgICAgIHJlbW92YWJsZVBhcnQgPSAodGhpcy5wb3NpdGlvbnJpZ2h0KSAtICh0aGlzLnBvc2l0aW9ubGVmdCkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGVtcFN0cmluZy5zcGxpY2UoKHRoaXMucG9zaXRpb25sZWZ0KSwgcmVtb3ZhYmxlUGFydCwgYFske2luZGljYXRvci5rZXl9XWApDQogICAgICAgICAgICAgICAgdGhpcy5sYXp5Rm9ybXVsYSA9IHRlbXBTdHJpbmcuam9pbignJykNCiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUF1dG9Db21wbGV0ZSgpDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQogICAgLy8gZmluZEluZGljYXRvcnMgKHN0cmluZykgew0KLy8gICAgIGxldCByZXN1bHRzID0gW10NCi8vICAgICB0aGlzLmdldEFsbFJlc3VsdHMoKQ0KDQovLyB9LA0KLy8gZ2V0QWxsUmVzdWx0cyAoc3RyaW5nKSB7DQovLyAgICAgIGlmKHN0cmluZy5pbmRleE9mKCdbJykgPj0gMCB8fCBzdHJpbmcuaW5kZXhPZignXScpID49IDApIHsNCg0KLy8gICAgICB9DQovLyB9DQovLyBjb25zdCBzZWxlY3RhYmxlSW5kaXJlY3RJbmRpY2F0b3JzID0gdGhpcy5pbmRpcmVjdEluZGljYXRvcnMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5pZCAhPT0gdGhpcy5pbmRpcmVjdEluZGljYXRvci5pZCkNCi8vICh0aGlzLnBvc2l0aW9ucmlnaHQgLSAodGhpcy5wb3NpdGlvbkxlZnQgKyAxKSkgKHRoaXMucG9zaXRpb25yaWdodCAtICh0aGlzLnBvc2l0aW9uTGVmdCArIDEpKQ0KLy8gY29tcGFyaXNvbk9wZXJhdG9yczogWw0KLy8gICAgIHsgaWQ6IDAsIHZhbHVlOiAnPT0nLCBjb21wb25lbnQ6IG51bGwgfSwNCi8vICAgICB7IGlkOiAxLCB2YWx1ZTogJyEtJywgY29tcG9uZW50OiBudWxsIH0sDQovLyAgICAgeyBpZDogMiwgdmFsdWU6ICc+JywgY29tcG9uZW50OiBudWxsIH0sDQovLyAgICAgeyBpZDogMywgdmFsdWU6ICc8JywgY29tcG9uZW50OiBudWxsIH0sDQovLyAgICAgeyBpZDogNCwgdmFsdWU6ICc+PScsIGNvbXBvbmVudDogbnVsbCB9LA0KLy8gICAgIHsgaWQ6IDUsIHZhbHVlOiAnPD0nLCBjb21wb25lbnQ6IG51bGwgfQ0KLy8gXSwNCi8vIGlmICh2YWwubGVuZ3RoKSB7DQovLyAgICAgY29uc3QgcGF0dGVybiA9IC9bXHM/W1x3XHNdKlxzP10vZw0KLy8gICAgIHRoaXMucmVzdWx0ID0gWy4uLnZhbC5tYXRjaEFsbChwYXR0ZXJuKV0NCi8vIH0NCg=="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\forms\\FormulaFormCorrect.vue"],"names":[],"mappings":"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AC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;wBACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;wBACxB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;wBAE3C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACnwBAC7I;wBACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAA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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACxB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9D,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D;gBACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B;QACJ;IACJ;IACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC/B,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACtB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE1B,CAAC,EAAE,CAAC;AACJ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AAC1B,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;AAEjE,CAAC,OAAO;AACR,CAAC,EAAE;AACH,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpxB,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9C,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9C,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAC7C,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAC7C,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAC9C,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AAC7C,CAAC,EAAE,CAAC;AACJ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACnB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,EAAE","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/components/forms/FormulaFormCorrect.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"p-d-flex p-ai-center p-m-0\" style=\"\">\r\n        <div ref=\"focuswindow\" style=\"position: relative; width: 100%;\">\r\n            <Textarea ref=\"expression\" :autoResize=\"true\" rows=\"1\" v-model=\"lazyFormula\" :placeholder=\"(assignment) ? 'Type #ife  or #iff for either an empty or filled if/else statement. Type [ to insert an indicator.' : 'Write any expression you want here. Typing [ will pop up an autocomplete list.'\" style=\"width: 100%; position: relative;\" autocomplete=\"off\" />\r\n            <div id=\"autocomplete\" v-if=\"autoComplete\" style=\"width: 100%; position: absolute; z-index: 50;\">\r\n                <div v-for=\"indicator in indicators\" :key=\"indicator\" class=\"autocomplete-item\" style=\"padding: 4px; border: 0.5px solid lightgrey; cursor: pointer; position: relative;\" @click=\"chooseIndicator(indicator)\">{{indicator.key}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapState } from 'vuex'\r\n\r\n    export default {\r\n        components: {\r\n        },\r\n        props: {\r\n            formula: {\r\n                type: String,\r\n                default: ''\r\n            },\r\n            keyy: {\r\n                type: String\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                lazyFormula: this.formula || '',\r\n                autoComplete: false,\r\n                positionLeft: null,\r\n                positionRight: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('directIndicator', ['directIndicators']),\r\n            ...mapState('indirectIndicator', ['indirectIndicators', 'indirectIndicator']),\r\n            indicators () {\r\n                return this.directIndicators.concat(this.indirectIndicators)\r\n            }\r\n        },\r\n        watch: {\r\n            lazyFormula (val) {\r\n                this.lazyFormula = val.replace(' then', '\\nthen')\r\n                this.lazyFormula = val.replace(' else', '\\nelse')\r\n                console.log(val)\r\n                this.$emit('output', val)\r\n            }\r\n        },\r\n        mounted () {\r\n            const self = this\r\n            this.$refs.expression.$el.addEventListener('keyup', self.checkUserPosition, false)\r\n            this.$refs.expression.$el.addEventListener('click', self.checkUserPosition, false)\r\n            document.addEventListener('click', function (event) {\r\n                if (self.$refs.focuswindow !== event.target && !self.$refs.focuswindow?.contains(event.target)) { self.removeAutoComplete() }\r\n            })\r\n        },\r\n        methods: {\r\n            showIndicators () {\r\n                this.autoComplete = true\r\n            },\r\n            removeAutoComplete () {\r\n                this.autoComplete = false\r\n            },\r\n            checkUserPosition (e) {\r\n                console.log('user is moving!')\r\n                        this.positionleft = null\r\n                        this.positionright = null\r\n                        const userPosition = e.target.selectionStart\r\n\r\n                        if (this.lazyFormula.includes('#iff')) {\r\n                            this.lazyFormula = this.lazyFormula.replace('#iff', `if ([indicator_key] = null)\\nthen [${this.keyy}] = null\\nelse [${this.keyy}] = null`)\r\n                        }\r\n                        if (this.lazyFormula.includes('#ife')) {\r\n                            this.lazyFormula = this.lazyFormula.replace('#ife', 'if () \\nthen \\nelse')\r\n                        }\r\n\r\n                        // Following three for loops look for the 1). left bracket and 2). right bracket or 3). empty space\r\n                        for (var i = userPosition - 1; i >= 0; i--) {\r\n                            if (this.lazyFormula[i] === ']') { break }\r\n                            if (this.lazyFormula[i] === '[') {\r\n                                this.positionleft = i\r\n                                break\r\n                            }\r\n                        }\r\n                        for (i = userPosition; i <= this.lazyFormula.length; i++) {\r\n                            if (this.lazyFormula[i] === '[') { break }\r\n                            if (this.lazyFormula[i] === ']') {\r\n                                this.positionright = i + 1\r\n                                break\r\n                            }\r\n                        }\r\n                        if (Number.isInteger(this.positionleft) && !this.positionright) {\r\n                            for (i = this.positionleft; i <= this.lazyFormula.length; i++) {\r\n                                if ((this.lazyFormula[i] === ')') || (this.lazyFormula[i] === ' ')) {\r\n                                    this.positionright = i\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        console.log('left: ', this.positionleft, 'right: ', this.positionright)\r\n                        if (Number.isInteger(this.positionleft)) {\r\n                            this.showIndicators()\r\n                            return\r\n                        }\r\n                        this.removeAutoComplete()\r\n            },\r\n            chooseIndicator (indicator) {\r\n                const tempString = this.lazyFormula.split('')\r\n                let removablePart = this.lazyFormula.length - this.positionleft\r\n                if (Number.isInteger(this.positionright)) {\r\n                    removablePart = (this.positionright) - (this.positionleft)\r\n                }\r\n                tempString.splice((this.positionleft), removablePart, `[${indicator.key}]`)\r\n                this.lazyFormula = tempString.join('')\r\n                this.removeAutoComplete()\r\n            }\r\n        }\r\n    }\r\n    // findIndicators (string) {\r\n//     let results = []\r\n//     this.getAllResults()\r\n\r\n// },\r\n// getAllResults (string) {\r\n//      if(string.indexOf('[') >= 0 || string.indexOf(']') >= 0) {\r\n\r\n//      }\r\n// }\r\n// const selectableIndirectIndicators = this.indirectIndicators.filter(item => item.id !== this.indirectIndicator.id)\r\n// (this.positionright - (this.positionLeft + 1)) (this.positionright - (this.positionLeft + 1))\r\n// comparisonOperators: [\r\n//     { id: 0, value: '==', component: null },\r\n//     { id: 1, value: '!-', component: null },\r\n//     { id: 2, value: '>', component: null },\r\n//     { id: 3, value: '<', component: null },\r\n//     { id: 4, value: '>=', component: null },\r\n//     { id: 5, value: '<=', component: null }\r\n// ],\r\n// if (val.length) {\r\n//     const pattern = /[\\s?[\\w\\s]*\\s?]/g\r\n//     this.result = [...val.matchAll(pattern)]\r\n// }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n        .autocomplete-item {\r\n            background-color: white;\r\n        }\r\n        .autocomplete-item:hover {\r\n            background-color: lightgrey;\r\n        }\r\n</style>\r\n"]}]}