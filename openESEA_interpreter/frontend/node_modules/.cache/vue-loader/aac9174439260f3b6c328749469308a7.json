{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\MethodCreation.vue?vue&type=template&id=2a6c7544","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\MethodCreation.vue","mtime":1707572265506},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0icC1ncmlkIHAtamMtY2VudGVyIHAtdGV4dC1jZW50ZXIgcC1wLTUiPg0KICAgICAgICA8aDEgY2xhc3M9InAtY29sLTEyIj5NZXRob2QgQ3JlYXRpb24gT3B0aW9uczwvaDE+DQogICAgICAgICAgICAgICAgPERpdmlkZXIgLz4NCiAgICAgICAgPGRpdiB2LWZvcj0ib3B0aW9uIGluIGNyZWF0aW9uT3B0aW9ucyIgOmtleT0ib3B0aW9uLmFjdGlvbiIgY2xhc3M9InAtY29sLTQgcC1qYyIgc3R5bGU9IndpZHRoOiA0MDBweDsgaGVpZ2h0OiAyNTBweDsiPg0KICAgICAgICAgICAgPGRpdiA6Y2xhc3M9Im9wdGlvbi5ob3ZlciA/ICdwLXNoYWRvdy0xMCBwLXAtMScgOiAncC1zaGFkb3ctMyBwLW0tMSciIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGMUYxOyBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyZXk7IGhlaWdodDogMTAwJTsiIDpzdHlsZT0ib3B0aW9uLmhvdmVyID8gJ2JhY2tncm91bmQtY29sb3I6IHdoaXRlOyBjdXJzb3I6IHBvaW50ZXI7JzogJ2JhY2tncm91bmQtY29sb3I6ICNFREVERUQ7JyIgQG1vdXNlb3Zlcj0ib3B0aW9uLmhvdmVyPXRydWUiIEBtb3VzZWxlYXZlPSJvcHRpb24uaG92ZXI9ZmFsc2UiIEBjbGljaz0iY3JlYXRlTmV3TWV0aG9kKG9wdGlvbi5hY3Rpb24pIj4NCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJoZWlnaHQ6IDUwJTsiPg0KICAgICAgICAgICAgICAgICAgICA8aDM+e3tvcHRpb24udGl0bGV9fTwvaDM+DQogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJwLW0tNSBwLXRleHQtanVzdGlmeSI+e3tvcHRpb24uZGVzY3JpcHRpb259fTwvcD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tIDxCdXR0b24gOmxhYmVsPSJvcHRpb24uYnV0dG9uIiBAY2xpY2s9ImNyZWF0ZU5ld01ldGhvZChvcHRpb24uYWN0aW9uKSIgY2xhc3M9InAtYnV0dG9uLWxnIHAtYnV0dG9uLW91dGxpbmVkIHAtbS01IiBzdHlsZT0id2lkdGg6IDgwJTsiIC8+IC0tPg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIDwvZGl2Pg0KDQogICAgPERpYWxvZyB2LW1vZGVsOnZpc2libGU9ImNyZWF0ZU1ldGhvZERpYWxvZyIgOnN0eWxlPSJ7d2lkdGg6ICc0NTBweCd9IiBoZWFkZXI9IkNyZWF0ZSBNZXRob2QiIDptb2RhbD0idHJ1ZSIgOmRpc21pc3NhYmxlTWFzaz0idHJ1ZSIgY2xhc3M9InAtZmx1aWQiPg0KICAgICAgICA8bWV0aG9kLWZvcm0gQGNsb3NlZGlhbG9nPSJjcmVhdGVNZXRob2REaWFsb2cgPSBmYWxzZSIgLz4NCiAgICA8L0RpYWxvZz4NCg0KICAgIDxEaWFsb2cgdi1tb2RlbDp2aXNpYmxlPSJ1cGxvYWRNZXRob2REaWFsb2ciIDpzdHlsZT0ie3dpZHRoOiAnNzAwcHgnfSIgaGVhZGVyPSJVcGxvYWQgTWV0aG9kIiA6bW9kYWw9InRydWUiIDpkaXNtaXNzYWJsZU1hc2s9InRydWUiPg0KICAgICAgICA8RmlsZVVwbG9hZCBuYW1lPSJteWZpbGUiIDpjdXN0b21VcGxvYWQ9InRydWUiIEB1cGxvYWRlcj0ib25VcGxvYWQiIDpmaWxlTGltaXQ9IjEiIGFjY2VwdD0iLnR4dCIgOm1heEZpbGVTaXplPSIxMDAwMDAwMCIgY2xhc3M9InAtamMtYmV0d2VlbiI+DQogICAgICAgICAgICA8dGVtcGxhdGUgI2VtcHR5Pg0KICAgICAgICAgICAgICAgIDxwPkRyYWcgYW5kIGRyb3AgeW91ciBUZXh0IGZpbGUgaGVyZSB0byB1cGxvYWQuPC9wPg0KICAgICAgICAgICAgPC90ZW1wbGF0ZT4NCiAgICAgICAgPC9GaWxlVXBsb2FkPg0KICAgICAgICA8dGVtcGxhdGUgI2Zvb3Rlcj4NCiAgICAgICAgICAgIDxCdXR0b24gbGFiZWw9IkNhbmNlbCIgaWNvbj0icGkgcGktdGltZXMiIGNsYXNzPSJwLWJ1dHRvbi10ZXh0IiBAY2xpY2s9InVwbG9hZE1ldGhvZERpYWxvZyA9IGZhbHNlIi8+DQogICAgICAgIDwvdGVtcGxhdGU+DQogICAgPC9EaWFsb2c+DQoNCiAgICA8RGlhbG9nIHYtbW9kZWw6dmlzaWJsZT0iY29weU1ldGhvZERpYWxvZyIgOnN0eWxlPSJ7d2lkdGg6ICc3MDBweCd9IiBoZWFkZXI9IkNvcHkgTWV0aG9kIiA6bW9kYWw9InRydWUiIDpkaXNtaXNzYWJsZU1hc2s9InRydWUiPg0KICAgICAgICA8cD4gSW4gdGhlIG5lYXIgZnV0dXJlIGl0IHdpbGwgYmUgcG9zc2libGUgdG8gY29weSBhIG1ldGhvZCBpbnN0YW5jZSwgaW5jbHVkaW5nIGl0cyByZWxhdGVkIG9iamVjdHMgdG8gYmUgYWJsZSB0byBtb2RpZnkgaXQgZnJlZWx5IHdpdGhvdXQgYmVpbmcgdGhlIG93bmVyLjwvcD4NCiAgICA8L0RpYWxvZz4NCg=="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\MethodCreation.vue"],"names":[],"mappings":";IAGI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACljgBACzV,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7D,CAAC,CAAC,CAAC,CAAC,CAAC;grJ,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/I,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAER,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACdlK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/method/MethodCreation.vue","sourceRoot":"","sourcesContent":["// http://localhost:8081/method-creation\r\n\r\n<template>\r\n    <div class=\"p-grid p-jc-center p-text-center p-p-5\">\r\n        <h1 class=\"p-col-12\">Method Creation Options</h1>\r\n                <Divider />\r\n        <div v-for=\"option in creationOptions\" :key=\"option.action\" class=\"p-col-4 p-jc\" style=\"width: 400px; height: 250px;\">\r\n            <div :class=\"option.hover ? 'p-shadow-10 p-p-1' : 'p-shadow-3 p-m-1'\" style=\"background-color: #F1F1F1; border: 1px solid lightgrey; height: 100%;\" :style=\"option.hover ? 'background-color: white; cursor: pointer;': 'background-color: #EDEDED;'\" @mouseover=\"option.hover=true\" @mouseleave=\"option.hover=false\" @click=\"createNewMethod(option.action)\">\r\n                <div style=\"height: 50%;\">\r\n                    <h3>{{option.title}}</h3>\r\n                    <p class=\"p-m-5 p-text-justify\">{{option.description}}</p>\r\n                </div>\r\n                <!-- <Button :label=\"option.button\" @click=\"createNewMethod(option.action)\" class=\"p-button-lg p-button-outlined p-m-5\" style=\"width: 80%;\" /> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <Dialog v-model:visible=\"createMethodDialog\" :style=\"{width: '450px'}\" header=\"Create Method\" :modal=\"true\" :dismissableMask=\"true\" class=\"p-fluid\">\r\n        <method-form @closedialog=\"createMethodDialog = false\" />\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"uploadMethodDialog\" :style=\"{width: '700px'}\" header=\"Upload Method\" :modal=\"true\" :dismissableMask=\"true\">\r\n        <FileUpload name=\"myfile\" :customUpload=\"true\" @uploader=\"onUpload\" :fileLimit=\"1\" accept=\".txt\" :maxFileSize=\"10000000\" class=\"p-jc-between\">\r\n            <template #empty>\r\n                <p>Drag and drop your Text file here to upload.</p>\r\n            </template>\r\n        </FileUpload>\r\n        <template #footer>\r\n            <Button label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"uploadMethodDialog = false\"/>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"copyMethodDialog\" :style=\"{width: '700px'}\" header=\"Copy Method\" :modal=\"true\" :dismissableMask=\"true\">\r\n        <p> In the near future it will be possible to copy a method instance, including its related objects to be able to modify it freely without being the owner.</p>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex'\r\n    import MethodForm from '../../components/forms/createMethodForm'\r\n    import { AxiosInstance } from '../../plugins/axios'\r\n    import store from '../../store'\r\n\r\n    export default {\r\n        components: {\r\n            MethodForm\r\n        },\r\n        data () {\r\n            return {\r\n                createMethodDialog: false,\r\n                uploadMethodDialog: false,\r\n                copyMethodDialog: false,\r\n                creationOptions: [\r\n                    {\r\n                        title: 'Upload a Method',\r\n                        description: 'Pick this option if you have a .yaml file which can be used as a model. You can modify this later through the editor.',\r\n                        button: 'Upload Method',\r\n                        action: 'upload'\r\n                    },\r\n                    {\r\n                        title: 'Create a Method',\r\n                        description: 'Pick this option if you don\\'t have a model that can be imported directly. You\\'ll be able to create the method manually.',\r\n                        button: 'Create Method',\r\n                        action: 'create'\r\n                    },\r\n                    {\r\n                        title: 'Copy a Method',\r\n                        description: 'Pick this option if you want to copy a publicly available method to be able to modify it freely.',\r\n                        button: 'Copy Method',\r\n                        action: 'copy'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('method', ['method'])\r\n        },\r\n        methods: {\r\n            ...mapActions('method', ['fetchMethod', 'createMethod']),\r\n            ...mapActions('authentication', ['refreshAccessToken']),\r\n            async createNewMethod (action) {\r\n                if (action === 'upload') {\r\n                    this.uploadMethodDialog = true\r\n                } else if (action === 'create') {\r\n                    await this.createMethod({})\r\n                    this.$router.push({ name: 'method-general', params: { id: this.method.id } })\r\n                } else if (action === 'copy') {\r\n                    this.copyMethodDialog = true\r\n                }\r\n            },\r\n            async onUpload (event) {\r\n                await this.refreshAccessToken()\r\n                for (const file of event.files) {\r\n                    console.log(file)\r\n                }\r\n                var formData = new FormData()\r\n                formData.append('file', event.files[0])\r\n\r\n                const config = {\r\n                    headers: {\r\n                        'Content-type': 'application/json',\r\n                        Authorization: `Bearer ${store.getters['authentication/AuthenticationToken']}`\r\n                    }\r\n                }\r\n                return new Promise((resolve, reject) => {\r\n                    AxiosInstance.post('/import-method/', formData, config)\r\n                    .then(response => {\r\n                        const id = response?.data?.id\r\n                        this.goToMethod(id)\r\n                        console.log(response)\r\n                        this.$toast.add({ severity: 'success', summary: 'Method created', detail: 'New method', life: 3000 })\r\n                    })\r\n                    .catch(console.log)\r\n                })\r\n            },\r\n            async goToMethod (id) {\r\n                await this.fetchMethod({ id: id })\r\n                this.$router.push({ name: 'method-general', params: { id: this.method?.id } })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}