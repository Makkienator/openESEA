{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\SurveyCreation.vue?vue&type=style&index=0&id=95314386&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\SurveyCreation.vue","mtime":1707572265512},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741014585012},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLmFkZFF1ZXN0aW9uIHsNCiAgICAgICAgaGVpZ2h0OiA1MHB4Ow0KICAgICAgICBsaW5lLWhlaWdodDogNTBweDsNCiAgICAgICAgbWFyZ2luOiA1MHB4Ow0KICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMkUyRTI7DQogICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICAgICAgZm9udC1zaXplOiAyMnB4Ow0KICAgICAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICAgICAgY29sb3I6IGJsYWNrOw0KICAgIH0NCiAgICAuYWRkUXVlc3Rpb246aG92ZXIgew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5Ow0KICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyZXk7DQogICAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB9DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\SurveyCreation.vue"],"names":[],"mappings":";IAsLI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/method/SurveyCreation.vue","sourceRoot":"","sourcesContent":["http://localhost:8081/method-wizard/2/surveys/5/survey-design/\r\n\r\n<template>\r\n    <div class=\"p-d-flex\" style=\"height: 100%; border-top: 1px solid lightgrey;\">\r\n        <div class=\"p-d-flex p-flex-column p-jc-between\" style=\"height: calc(100vh - 190px;); width: 300px; border: 1px solid lightgrey;\">\r\n            <survey-tree-side-bar style=\"height: 100%;\" :key=\"updateSidebar\" />\r\n        </div>\r\n        <div class=\"p-col p-d-flex p-jc-center\" style=\"height: calc(100vh - 195px); width: 100%; background-color: white; text-align: center; overflow-y: auto;\">\r\n            <div class=\"p-text-left p-fluid\" style=\"width: 1200px;\">\r\n                <div v-for=\"(section, sectionIndex) in items\" :key=\"sectionIndex\" class=\"p-my-5\" style=\"background-color: #f8f9fe; border: 1px solid lightgrey;\">\r\n                    <sectioon-form\r\n                        :section=\"section\"\r\n                        :active=\"activeItem.objType === section.objType && activeItem.id === section.id\"\r\n                        :errors=\"errors[section.id]\"\r\n                        :check-saving-status=\"checkSavingStatus\"\r\n                        @savingstatus=\"savingStatus(section, $event)\"\r\n                        @click=\"toggleActive(section)\" @delete=\"removeSection\"\r\n                    />\r\n                    <div v-for=\"(sectionChild, index) in section.children\" :key=\"index\" class=\"p-my-1 p-ml-5\">\r\n                        <question-form ref=\"items\"\r\n                        :question=\"sectionChild\"\r\n                        :active=\"activeItem.objType === sectionChild.objType && activeItem.id === sectionChild.id\"\r\n                        :check-saving-status=\"checkSavingStatus\"\r\n                        @savingstatus=\"savingStatus(sectionChild, $event)\"\r\n                        @click=\"toggleActive(sectionChild)\"\r\n                        @delete=\"removeQuestion(section, question)\" />\r\n                    </div>\r\n                    <div class=\"addQuestion\" @click=\"addQuestion(section)\"><i class=\"pi pi-plus\" /> Add Question</div>\r\n                </div>\r\n                <div class=\"addQuestion p-mb-5\" @click=\"addSection\"><i class=\"pi pi-plus\" /> Add Section</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <Dialog v-model:visible=\"unsavedChangesDialog\" style=\"width: 600px;\" header=\"Unsaved Changes\" :modal=\"true\" :dismissableMask=\"true\">\r\n        <div class=\"confirmation-content\">\r\n            This page contains unsaved changes, leaving the page now will destroy these. Do you still wish to leave the page?\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"unsavedChangesChoice(true)\" />\r\n            <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"unsavedChangesChoice(false)\"/>\r\n        </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions, mapGetters } from 'vuex'\r\n    import SurveyTreeSideBar from '@/components/SurveyTreeSideBar'\r\n    import getSurveyItems from '@/utils/getSurveyItems'\r\n    import SectioonForm from '../../components/forms/SectioonForm'\r\n    import QuestionForm from '@/components/forms/QuestionForm'\r\n\r\n    export default {\r\n        components: {\r\n            SurveyTreeSideBar,\r\n            QuestionForm,\r\n            SectioonForm\r\n        },\r\n        data () {\r\n            return {\r\n                checkSavingStatus: false,\r\n                SectionAndQuestionSavingStatus: {},\r\n                to: null,\r\n                allowRouting: false,\r\n                unsavedChangesDialog: false,\r\n                discardUnsavedChanges: false,\r\n                updateSidebar: 0\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('method', ['method']),\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('section', ['sections', 'section', 'errors']),\r\n            ...mapState('question', ['questions', 'question', 'updatedList']),\r\n            ...mapGetters('question', ['sectionQuestions']),\r\n            items () {\r\n                return getSurveyItems(\r\n                    this.sections,\r\n                    this.sectionQuestions\r\n                )\r\n            },\r\n            activeItem () {\r\n                let objType = 'section'\r\n                let { id } = this.section\r\n\r\n                if (this.question.id) {\r\n                    objType = 'question'\r\n                    id = this.question.id\r\n                }\r\n                return { objType, id }\r\n            },\r\n            errors () {\r\n                return {\r\n                    section: this.sectionErrors,\r\n                    question: this.questionErrors\r\n                }\r\n            }\r\n        },\r\n            beforeRouteLeave (to, from, next) {\r\n            if (this.allowRouting || this.discardUnsavedChanges) { //  & !this.discardUnsavedChanges @input=\"saveActive('section', $event)\"  @input=\"saveActive(sectionChild.objType, $event)\"\r\n                next(true)\r\n            } else {\r\n                this.to = to\r\n                this.allowRouting = false\r\n                this.checkSavingStatus = !this.checkSavingStatus\r\n                next(false)\r\n            }\r\n        },\r\n        watch: {\r\n            SectionAndQuestionSavingStatus: {\r\n                handler (val) {\r\n                    if ((Object.keys(val).length === (this.questions.length + this.sections.length))) {\r\n                        for (const key in val) {\r\n                            if (val[key]) {\r\n                                this.SectionAndQuestionSavingStatus = {}\r\n                                console.log('...')\r\n                                this.unsavedChangesDialog = true\r\n                                return\r\n                            }\r\n                        }\r\n                        this.allowRouting = true\r\n                        this.$router.push(this.to)\r\n                    }\r\n                },\r\n                deep: true\r\n            },\r\n            // Used to rerender the sidebar component\r\n            updatedList (val) {\r\n                if (val) {\r\n                    this.updateSidebar += 1\r\n                }\r\n            }\r\n        },\r\n        created () {\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey', 'updateSurvey', 'saveSurvey']),\r\n            ...mapActions('section', ['fetchSections', 'createSection', 'setSection', 'updateSection', 'addNewSection', 'deleteSection']),\r\n            ...mapActions('question', ['fetchQuestions', 'setQuestion', 'addNewQuestion', 'updateQuestion', 'deleteQuestion']),\r\n            async initialize () {\r\n                if (this.survey.id !== parseInt(this.$route.params.SurveyId)) {\r\n                    this.$router.push({ name: 'method-wizard-surveys' })\r\n                }\r\n\r\n                await this.fetchSections({ mId: this.method.id, sId: this.survey.id })\r\n                await this.fetchQuestions({ mId: this.method.id, SuId: this.survey.id, SeId: 0 })\r\n            },\r\n            addSection () {\r\n                this.createSection({ mId: this.method.id, sId: this.survey.id }) //  this.addNewSection({ survey: this.survey.id })\r\n                this.setQuestion()\r\n            },\r\n            addQuestion (section) {\r\n                this.addNewQuestion({ section: section?.id })\r\n            },\r\n            toggleActive (item) {\r\n                console.log('check', item.objType, item.id, this.question.id)\r\n                const { objType } = item\r\n                const section = { id: item.section || item.id }\r\n                if (objType === 'section') {\r\n                    this.setSection(section)\r\n                    this.setQuestion()\r\n                } else if (objType === 'question' && (item.id !== this.question.id)) {\r\n                    this.setQuestion(item)\r\n                }\r\n            },\r\n            savingStatus (object, status) {\r\n                const key = object.objType + object.id\r\n                this.SectionAndQuestionSavingStatus[key] = status\r\n            },\r\n            unsavedChangesChoice (choice) {\r\n                this.unsavedChangesDialog = false\r\n                this.discardUnsavedChanges = choice\r\n                if (choice) {\r\n                    this.$router.push(this.to)\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .addQuestion {\r\n        height: 50px;\r\n        line-height: 50px;\r\n        margin: 50px;\r\n        text-align: center;\r\n        background-color: #E2E2E2;\r\n        border-radius: 5px;\r\n        font-size: 22px;\r\n        font-weight: bold;\r\n        color: black;\r\n    }\r\n    .addQuestion:hover {\r\n        background-color: #E9E9E9;\r\n        border: 1px solid lightgrey;\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n"]}]}