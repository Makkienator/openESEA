{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\survey\\SurveyQuestionResults.vue?vue&type=template&id=f597461e&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\survey\\SurveyQuestionResults.vue","mtime":1707572265310},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0icC1wLTUiIHN0eWxlPSJib3JkZXItY29sb3I6ICMwMDAwOEI7IGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JleTsgYm9yZGVyLXJhZGl1czogNXB4OyI+DQogICAgICAgIDxwIGNsYXNzPSJwLXRleHQtbGVmdCI+e3sgcXVlc3Rpb24ubmFtZSB9fTwvcD4NCiAgICAgICAgPERpdmlkZXIgY2xhc3M9InAtbWItNCIgLz4NCiAgICA8ZGl2IGNsYXNzPSJwLXAtMyBwLXB0LTUgcC1teS0zIiBzdHlsZT0iYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmV5OyI+DQogICAgPGRpdiB2LWlmPSJhbnN3ZXJ0eXBlID09PSBxdWVzdGlvblR5cGVzLlJBRElPIHx8IHF1ZXN0aW9uVHlwZXMuQ0hFQ0tCT1giPg0KICAgICAgICA8ZGl2IHYtZm9yPSIoYW1vdW50LCBvcHRpb24pIGluIGFuc3dlcnMiIDprZXk9Im9wdGlvbiIgY2xhc3M9InAtZ3JpZCBwLWQtZmxleCBwLWFpLWNlbnRlciBwLW0tMSI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC1maXhlZCIgc3R5bGU9IndpZHRoOjgwcHgiPg0KICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iYW1vdW50ZGlzcGxheWNob2ljZS52YWx1ZSI+DQogICAgICAgICAgICAgICAgICAgIHt7IE1hdGgucm91bmQoYW1vdW50IC8gYW5zd2Vyc3VtICogMTAwICkgfX0lDQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiB2LWVsc2U+DQogICAgICAgICAgICAgICAgICAgIHt7IGFtb3VudCB9fQ0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbCBwLXRleHQtbGVmdCBwLWZpZWxkLXJhZGlvYnV0dG9uIHAtbS0wIHAtcC0wIj4NCiAgICAgICAgICAgICAgICA8UmFkaW9CdXR0b24gIHYtaWY9ImFuc3dlcnR5cGUgPT09IHF1ZXN0aW9uVHlwZXMuUkFESU8iIDppZD0iYCR7aW5kZXh9LW9wdGlvbmAiIG5hbWU9Im9wdGlvbiIgOnZhbHVlPSJvcHRpb24iIDpkaXNhYmxlZD0idHJ1ZSIgLz4NCiAgICAgICAgICAgICAgICA8Q2hlY2tib3ggdi1pZj0iYW5zd2VydHlwZSA9PT0gcXVlc3Rpb25UeXBlcy5DSEVDS0JPWCIgOmlkPSJgJHtpbmRleH0tb3B0aW9uYCIgbmFtZT0ib3B0aW9uIiA6dmFsdWU9Im9wdGlvbiIgOmRpc2FibGVkPSJ0cnVlIiAvPg0KICAgICAgICAgICAgICAgIDxsYWJlbCA6Zm9yPSJgJHtpbmRleH0tb3B0aW9uYCIgY2xhc3M9InAtdGV4dC1sZWZ0Ij57e29wdGlvbn19PC9sYWJlbD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8ZGl2IHYtZWxzZT4NCiAgICAgICAgPGRpdiB2LWZvcj0iKGFtb3VudCwgdmFsdWUpIGluIGFuc3dlcnMiIDprZXk9InZhbHVlIj4NCiAgICAgICAgICAgIHt7YW1vdW50fX0NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxwPg0KICAgICAgICAgICAgYXZlcmFnZToge3sgYXZlcmFnZSB9fQ0KICAgICAgICA8L3A+DQogICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgICAgIDxkaXYgdi1pZj0icXVlc3Rpb24uZGVzY3JpcHRpb24iPg0KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0icC10ZXh0LWp1c3RpZnkgcC10ZXh0LWxpZ2h0IHAtbS0wIiBzdHlsZT0iY29sb3I6IGxpZ2h0Z3JleTsiPjxzbWFsbD5EZXNjcmlwdGlvbjo8L3NtYWxsPjxicj4NCiAgICAgICAgICAgICAgICAgICAgPHNtYWxsPjxzbWFsbD57e3F1ZXN0aW9uLmRlc2NyaXB0aW9ufX08L3NtYWxsPjwvc21hbGw+PC9wPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiB2LWVsc2U+DQogICAgICAgICAgICA8cCAgY2xhc3M9InAtdGV4dC1sZWZ0IHAtbS0wIiBzdHlsZT0iY29sb3I6IGxpZ2h0Z3JleTsiPjxzbWFsbD5ObyBEZXNjcmlwdGlvbjwvc21hbGw+PC9wPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1kLWZsZXggcC1qYy1jZW50ZXIiPg0KICAgICAgICA8Q2hhcnQgdi1pZj0iYW5zd2VydHlwZSA9PT0gcXVlc3Rpb25UeXBlcy5SQURJTyIgdHlwZT0icGllIiA6ZGF0YT0iY2hhcnREYXRhIiBjbGFzcz0icC1jb2wiIC8+DQogICAgPC9kaXY+DQogICAgICAgIDwhLS0gPENoYXJ0IHYtaWY9ImFuc3dlcnR5cGUgPT09IHF1ZXN0aW9uVHlwZXMuQ0hFQ0tCT1giIHR5cGU9ImJhciIgOmRhdGE9ImNoYXJ0RGF0YSIgLz4gLS0+DQogICAgPC9kaXY+DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\survey\\SurveyQuestionResults.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpgBACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAC/C,CAAC,CAAC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACP,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACf,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;ggBAChgBAC/H,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;YACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACjG,CAAC,CAAC,CAAC,CAAC,CAAC;QACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/components/survey/SurveyQuestionResults.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"p-p-5\" style=\"border-color: #00008B; border: 1px solid lightgrey; border-radius: 5px;\">\r\n        <p class=\"p-text-left\">{{ question.name }}</p>\r\n        <Divider class=\"p-mb-4\" />\r\n    <div class=\"p-p-3 p-pt-5 p-my-3\" style=\"border: 1px solid lightgrey;\">\r\n    <div v-if=\"answertype === questionTypes.RADIO || questionTypes.CHECKBOX\">\r\n        <div v-for=\"(amount, option) in answers\" :key=\"option\" class=\"p-grid p-d-flex p-ai-center p-m-1\">\r\n            <div class=\"p-col-fixed\" style=\"width:80px\">\r\n                <div v-if=\"amountdisplaychoice.value\">\r\n                    {{ Math.round(amount / answersum * 100 ) }}%\r\n                </div>\r\n                <div v-else>\r\n                    {{ amount }}\r\n                </div>\r\n            </div>\r\n            <div class=\"p-col p-text-left p-field-radiobutton p-m-0 p-p-0\">\r\n                <RadioButton  v-if=\"answertype === questionTypes.RADIO\" :id=\"`${index}-option`\" name=\"option\" :value=\"option\" :disabled=\"true\" />\r\n                <Checkbox v-if=\"answertype === questionTypes.CHECKBOX\" :id=\"`${index}-option`\" name=\"option\" :value=\"option\" :disabled=\"true\" />\r\n                <label :for=\"`${index}-option`\" class=\"p-text-left\">{{option}}</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div v-else>\r\n        <div v-for=\"(amount, value) in answers\" :key=\"value\">\r\n            {{amount}}\r\n        </div>\r\n        <p>\r\n            average: {{ average }}\r\n        </p>\r\n    </div>\r\n    </div>\r\n        <div v-if=\"question.description\">\r\n                    <p class=\"p-text-justify p-text-light p-m-0\" style=\"color: lightgrey;\"><small>Description:</small><br>\r\n                    <small><small>{{question.description}}</small></small></p>\r\n        </div>\r\n        <div v-else>\r\n            <p  class=\"p-text-left p-m-0\" style=\"color: lightgrey;\"><small>No Description</small></p>\r\n        </div>\r\n        <div class=\"p-d-flex p-jc-center\">\r\n        <Chart v-if=\"answertype === questionTypes.RADIO\" type=\"pie\" :data=\"chartData\" class=\"p-col\" />\r\n    </div>\r\n        <!-- <Chart v-if=\"answertype === questionTypes.CHECKBOX\" type=\"bar\" :data=\"chartData\" /> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { QUESTION_TYPES } from '../../utils/constants'\r\nimport Chart from 'primevue/chart'\r\nexport default {\r\n    components: {\r\n        Chart\r\n    },\r\n    props: {\r\n        question: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        answers: {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        amountdisplaychoice: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            questionTypes: QUESTION_TYPES,\r\n            chartData: {\r\n\t\t\t\tlabels: [],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n                        label: 'Visualisation',\r\n\t\t\t\t\t\tdata: [],\r\n\t\t\t\t\t\tbackgroundColor: [\r\n                            '#42A5F5',\r\n                            '#66BB6A',\r\n                            '#FFA726',\r\n                            '#26C6DA',\r\n                            '#7E57C2',\r\n                            '#7AC142',\r\n                            '#007CC3',\r\n                            '#00529B',\r\n                            '#377B2B'\r\n                        ],\r\n                        hoverBackgroundColor: [\r\n                            '#64B5F6',\r\n                            '#81C784',\r\n                            '#FFB74D'\r\n                        ]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n        }\r\n    },\r\n    computed: {\r\n        answertype () {\r\n            return this.question.answertype\r\n        },\r\n        average () {\r\n            if (!this.answers.length || this.type !== this.questionTypes.NUMBER) {\r\n                return 0\r\n            }\r\n            const total = this.answers.reduce(\r\n                (a, b) => parseInt(a, 10) + parseInt(b, 10), 0)\r\n\r\n            return total / this.answers.length\r\n\t\t},\r\n        answersum () {\r\n            var answersum = 0\r\n            for (var key in this.answers) {\r\n                answersum += this.answers[key]\r\n            }\r\n            return answersum\r\n        },\r\n        optionMappedAnswers () {\r\n            console.log(this.answers)\r\n            const optionMappedAnswers = {}\r\n            // if (!this.question.options.length || !this.answers) {\r\n\t\t\t// \treturn optionMappedAnswers\r\n            // }\r\n            // console.log('b')\r\n            // this.question.options.forEach(\r\n\t\t\t// \toption => (optionMappedAnswers[option.text] = 0)\r\n\t\t\t// )\r\n\t\t\t// let allAnswers = []\r\n            // console.log(this.answertype)\r\n\t\t\t// if (this.answertype === this.questionTypes.CHECKBOX) {\r\n            //     for (var key in this.answers) {\r\n            //         console.log('//')\r\n            //         if (Object.prototype.hasOwnProperty.call(this.answers, key)) {\r\n            //             console.log(key, this.answers[key])\r\n            //         }\r\n            //     }\r\n\t\t\t// \tthis.answers.forEach((answer) => {\r\n            //         console.log('>>', answer)\r\n\t\t\t// \t\tconst list = answer.split(',')\r\n\t\t\t// \t\tallAnswers = [...allAnswers, ...list]\r\n\t\t\t// \t})\r\n\t\t\t// } else if (this.answertype === this.questionTypes.RADIO) {\r\n            //     console.log(this.answers)\r\n\t\t\t// \tallAnswers = this.answers\r\n\t\t\t// }\r\n\t\t\t// allAnswers.forEach(answer => (optionMappedAnswers[answer] += 1))\r\n\t\t\treturn Object.entries(optionMappedAnswers)\r\n\t\t}\r\n    },\r\n    created () {\r\n        this.initialize()\r\n    },\r\n    methods: {\r\n        initialize () {\r\n            var i = 0\r\n            for (const key in this.answers) {\r\n                i += i\r\n                if (this.answers[key] > 0) {\r\n                    var val = Math.round(this.answers[key] / this.answersum * 100)\r\n                    if (key.length > 100) {\r\n                        var label = `Label ${key.slice(0, 20)}`\r\n                        this.chartData.labels.push(label)\r\n                    } else {\r\n                        this.chartData.labels.push(key)\r\n                    }\r\n                this.chartData.datasets[0].data.push(val)\r\n                }\r\n            }\r\n            // this.answers.forEach((answer) => {\r\n            //     if (answer[1] > 0) {\r\n            //     var val = Math.round(answer[1] / this.answers.length * 100)\r\n            //     console.log(val)\r\n            //     if (answer[0].length > 100) {\r\n            //         var label = 'A'\r\n            //         this.chartData.labels.push(label)\r\n            //     } else {\r\n            //         this.chartData.labels.push(answer[0])\r\n            //     }\r\n            //     this.chartData.datasets[0].data.push(val)\r\n            //     }\r\n            // })\r\n        },\r\n        changeAnswer (answer) {\r\n            this.$emit('input', answer)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.p-chart {\r\n    width: 500px;\r\n}\r\n</style>\r\n"]}]}