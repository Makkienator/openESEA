{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue","mtime":1707572265527},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHsgbWFwQWN0aW9ucywgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jw0KICAgIGltcG9ydCBTZWN0aW9uQ29tcG9uZW50IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc3VydmV5L1NlY3Rpb25Db21wb25lbnQnDQogICAgaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gJ3ByaW1ldnVlL3Byb2dyZXNzYmFyJw0KICAgIGltcG9ydCBQcm9ncmVzc1NwaW5uZXIgZnJvbSAncHJpbWV2dWUvcHJvZ3Jlc3NzcGlubmVyJw0KDQogICAgZXhwb3J0IGRlZmF1bHQgew0KICAgICAgICBjb21wb25lbnRzOiB7DQogICAgICAgICAgICBTZWN0aW9uQ29tcG9uZW50LA0KICAgICAgICAgICAgUHJvZ3Jlc3NCYXIsDQogICAgICAgICAgICBQcm9ncmVzc1NwaW5uZXINCiAgICAgICAgfSwNCiAgICAgICAgZGF0YSAoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIHF1ZXN0aW9ucmVzcG9uc2VzOiBudWxsLA0KICAgICAgICAgICAgICAgIGxvYWRpbmc6IHRydWUsDQogICAgICAgICAgICAgICAgZmFpbGVkbG9hZDogZmFsc2UsDQogICAgICAgICAgICAgICAgc2VjdGlvbk51bWJlcjogMCwNCiAgICAgICAgICAgICAgICBwcm9ncmVzc0JhclZhbHVlOiAwLA0KICAgICAgICAgICAgICAgIGFjdGl2ZVF1ZXN0aW9uOiBudWxsLA0KICAgICAgICAgICAgICAgIG1pc3NlZFF1ZXN0aW9uczogW10sDQogICAgICAgICAgICAgICAgbWlzc2VkUXVlc3Rpb25zRGlhbG9nOiBmYWxzZSwNCiAgICAgICAgICAgICAgICByZWZyZXNoOiBmYWxzZQ0KDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGNvbXB1dGVkOiB7DQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgnc3VydmV5JywgWydzdXJ2ZXknXSksDQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgnc3VydmV5UmVzcG9uc2UnLCBbJ3N1cnZleVJlc3BvbnNlJywgJ3N1cnZleVJlc3BvbnNlcyddKSwNCiAgICAgICAgICAgIC4uLm1hcFN0YXRlKCdlc2VhQWNjb3VudCcsIFsnZXNlYUFjY291bnQnXSksDQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgncXVlc3Rpb24nLCBbJ3F1ZXN0aW9ucyddKSwNCiAgICAgICAgICAgIGFuc3dlcnMgKCkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmxvYWRpbmcpIHsgcmV0dXJuIG51bGwgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICB2YXIgYW5zd2VycyA9IHt9DQogICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ11dXV0nLCB0aGlzLnN1cnZleVJlc3BvbnNlKQ0KCQkJCXRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25fcmVzcG9uc2VzLmZvckVhY2goKHJlc3BvbnNlKSA9PiB7DQoJCQkJCS8vIGlmIChhbnN3ZXIucXVlc3Rpb24gPT09IDM2KSB7IGNvbnNvbGUubG9nKCd2YWxsdWVlZScsIGFuc3dlcikgfQ0KICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVsZXZhbnRxdWVzdGlvbiA9IHRoaXMucXVlc3Rpb25zLmZpbmQocSA9PiBxLmlkID09PSByZXNwb25zZS5xdWVzdGlvbikNCiAgICAgICAgICAgICAgICAgICAgaWYgKHJlbGV2YW50cXVlc3Rpb24udWlDb21wb25lbnQgPT09ICdjaGVja2JveCcpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGFuc3dlcnNbcmVzcG9uc2UucXVlc3Rpb25dID0gcmVzcG9uc2UudmFsdWVzDQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgICAgICBhbnN3ZXJzW3Jlc3BvbnNlLnF1ZXN0aW9uXSA9IHJlc3BvbnNlLnZhbHVlDQogICAgICAgICAgICAgICAgICAgIH0NCgkJCQl9KQ0KICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCcpKSknLCBhbnN3ZXJzKQ0KICAgICAgICAgICAgICAgIHJldHVybiBhbnN3ZXJzDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGN1cnJlbnRTZWN0aW9uICgpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBzZWN0aW9uID0gdGhpcy5zdXJ2ZXkuc2VjdGlvbnNbdGhpcy5zZWN0aW9uTnVtYmVyXQ0KICAgICAgICAgICAgICAgIGNvbnN0IG1lcmdlZFF1ZXN0aW9uc0FuZFRleHRGcmFnbWVudHMgPSBzZWN0aW9uPy5xdWVzdGlvbnMuY29uY2F0KHNlY3Rpb24udGV4dF9mcmFnbWVudHMpDQogICAgICAgICAgICAgICAgY29uc3Qgc29ydGVkQ29tcG9uZW50cyA9IG1lcmdlZFF1ZXN0aW9uc0FuZFRleHRGcmFnbWVudHM/LnNvcnQoKGEsIGIpID0+IChhLm9yZGVyID4gYi5vcmRlcikgPyAxIDogLTEpDQogICAgICAgICAgICAgICAgc2VjdGlvbi5tZXJnZWRRdWVzdGlvbnNBbmRUZXh0RnJhZ21lbnRzID0gc29ydGVkQ29tcG9uZW50cw0KICAgICAgICAgICAgICAgIHJldHVybiBzZWN0aW9uDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgdG90YWxTZWN0aW9ucyAoKSB7DQogICAgICAgICAgICAgICAgY29uc3Qgc2VjdGlvbkxpc3QgPSBbXQ0KICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zdXJ2ZXkuc2VjdGlvbnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgICAgICAgc2VjdGlvbkxpc3QucHVzaCh0aGlzLnN1cnZleS5zZWN0aW9uc1tpXS5pZCkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgLy8gZm9yIChjb25zdCBzZWN0aW9uIGluIHRoaXMuc3VydmV5Py5zZWN0aW9ucykgeyB0b3RhbFNlY3Rpb25zID0gdG90YWxTZWN0aW9ucyArIHRoaXMuc3VydmV5Py50b3BpY3NbdG9waWNdLnN1Yl90b3BpY3MubGVuZ3RoIH0NCg0KICAgICAgICAgICAgICAgIHJldHVybiBzZWN0aW9uTGlzdA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHByb2dyZXNzICgpIHsNCiAgICAgICAgICAgICAgICB2YXIgcHJvZ3Jlc3MNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZWN0aW9uTnVtYmVyID09PSAwKSB7IHJldHVybiAwIH0NCiAgICAgICAgICAgICAgICBwcm9ncmVzcyA9ICgodGhpcy5zZWN0aW9uTnVtYmVyICsgMSkgLyB0aGlzLnRvdGFsU2VjdGlvbnMubGVuZ3RoKSAqIDEwMA0KICAgICAgICAgICAgICAgIHJldHVybiBwcm9ncmVzcw0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0sDQogICAgICAgIHdhdGNoOiB7DQogICAgICAgICAgICBzdXJ2ZXlSZXNwb25zZTogew0KICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIChuZXdWYWx1ZSkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2ggPSAhdGhpcy5yZWZyZXNoDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICBkZWVwOiB0cnVlDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGNyZWF0ZWQgKCkgew0KICAgICAgICAgICAgY29uc29sZS5sb2coJ2VlZScpDQogICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsgdGhpcy5mYWlsZWRMb2FkID0gdHJ1ZSB9LCAxMDAwMCkNCiAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZSgpDQogICAgICAgIH0sDQogICAgICAgIG1ldGhvZHM6IHsNCiAgICAgICAgICAgIC4uLm1hcEFjdGlvbnMoJ3N1cnZleScsIFsnZmV0Y2hTdXJ2ZXknXSksDQogICAgICAgICAgICAuLi5tYXBBY3Rpb25zKCdzdXJ2ZXlSZXNwb25zZScsIFsnZmV0Y2hTdXJ2ZXlSZXNwb25zZScsICdzZXRTdXJ2ZXlSZXNwb25zZScsICd1cGRhdGVTdXJ2ZXlSZXNwb25zZScsICdjcmVhdGVTdXJ2ZXlSZXNwb25zZScsICdzZXRTdXJ2ZXlSZXNwb25zZSddKSwNCiAgICAgICAgICAgIC4uLm1hcEFjdGlvbnMoJ3F1ZXN0aW9uJywgWydmZXRjaFF1ZXN0aW9ucyddKSwNCiAgICAgICAgICAgIGFzeW5jIGluaXRpYWxpemUgKCkgew0KICAgICAgICAgICAgICAgIC8vIFVuaXF1ZSBUb2tlbiBjYW4gYmUgYSAncGsnLCAnc3VydmV5PXN1cnZleV9waycgb3IgJ3N1cnZleSByZXNwb25zZSB0b2tlbicgKG1vcmUgb24gdGhpcyBpbiB0aGUgYmFja2VuZCwgc3VydmV5X3Jlc3BvbnNldmlldy4ucHkgaW4gdGhlIHJldHJpZXZlIGZ1bmN0aW9uLg0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZmV0Y2hTdXJ2ZXlSZXNwb25zZSh7IG9JZDogdGhpcy5lc2VhQWNjb3VudD8ub3JnYW5pc2F0aW9uIHx8IDAsIGVhSWQ6IHRoaXMuZXNlYUFjY291bnQ/LmlkIHx8IDAsIGlkOiB0aGlzLiRyb3V0ZS5wYXJhbXMudW5pcXVldG9rZW4gfSkNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnKysrKycsIHRoaXMuZXNlYUFjY291bnQsIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25fcmVzcG9uc2VzKQ0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZmV0Y2hTdXJ2ZXkoeyBtSWQ6IHRoaXMuc3VydmV5UmVzcG9uc2UubWV0aG9kLCBpZDogdGhpcy5zdXJ2ZXlSZXNwb25zZS5zdXJ2ZXkgfSkNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN1cnZleS5uYW1lKQ0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZmV0Y2hRdWVzdGlvbnMoeyBtSWQ6IHRoaXMuc3VydmV5UmVzcG9uc2UubWV0aG9kLCBTdUlkOiB0aGlzLnN1cnZleVJlc3BvbnNlLnN1cnZleSwgU2VJZDogMCB9KQ0KICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2VlZScsIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25fcmVzcG9uc2VzKQ0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnN1cnZleVJlc3BvbnNlLmZpbmlzaGVkKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3VydmV5UmVzcG9uc2Uuc3VydmV5X2F1ZGl0KQ0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zdXJ2ZXlSZXNwb25zZS5zdXJ2ZXlfYXVkaXQpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdHbyB0byByZWFkIG9ubHkgdmVyc2lvbiBvZiBzdXJ2ZXktZmlsbCBmb3IgbXVsdGlwbGUgcmVzcG9uZGVudCBhdWRpdGluZyBwdXJwb3Nlcy4nKQ0KICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAnc3VydmV5LWF1ZGl0JyB9KQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ3N1cnZleS10aGFuay15b3UnIH0pDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMucXVlc3Rpb25yZXNwb25zZXMgPSB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uX3Jlc3BvbnNlcw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHByZXZpb3VzU2VjdGlvbiAoKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMuc2VjdGlvbk51bWJlciA+IDApIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZWN0aW9uTnVtYmVyLS0NCiAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3RpdmVRdWVzdGlvbiA9IG51bGwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgbmV4dFNlY3Rpb24gKCkgew0KICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlY3Rpb25OdW1iZXIgKyAxIDwgdGhpcy50b3RhbFNlY3Rpb25zLmxlbmd0aCkgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnNlY3Rpb25OdW1iZXIrKw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmFjdGl2ZVF1ZXN0aW9uID0gbnVsbA0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB0b2dnbGVBY3RpdmUgKHF1ZXN0aW9uKSB7DQogICAgICAgICAgICAgICAgaWYgKE51bWJlci5pc0ludGVnZXIocXVlc3Rpb24pKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlUXVlc3Rpb24gPSBxdWVzdGlvbg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlUXVlc3Rpb24gPSBudWxsDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBnb1RvUXVlc3Rpb24gKHF1ZXN0aW9uKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zZWN0aW9uTnVtYmVyID0gdGhpcy50b3RhbFNlY3Rpb25zLmluZGV4T2YocXVlc3Rpb24uc2VjdGlvbikNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnNlY3Rpb25OdW1iZXIpDQogICAgICAgICAgICAgICAgdGhpcy5taXNzZWRRdWVzdGlvbnNEaWFsb2cgPSBmYWxzZQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHNhdmVTdXJ2ZXkgKCkgew0KICAgICAgICAgICAgICAgIC8vIFRPRE8gLy8gcG9wdXAgRGlhbG9nOiBTdXJ2ZXkgaXMgYXV0b21hdGljYWxseSBzYXZlZC4NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBhc3luYyBmaW5pc2hTdXJ2ZXkgKCkgew0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjYycpDQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaFN1cnZleVJlc3BvbnNlKHsgb0lkOiB0aGlzLmVzZWFBY2NvdW50Py5vcmdhbmlzYXRpb24gfHwgMCwgZWFJZDogdGhpcy5lc2VhQWNjb3VudD8uaWQgfHwgMCwgaWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy51bmlxdWV0b2tlbiB9KQ0KICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tSZXF1aXJlZFF1ZXN0aW9ucyA9IHRydWUNCiAgICAgICAgICAgICAgICB0aGlzLm1pc3NlZFF1ZXN0aW9ucyA9IFtdDQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5jaGVja01hbmRhdG9yeUZpZWxkcygpDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3JlZWUnKQ0KICAgICAgICAgICAgICAgIGlmICghdGhpcy5taXNzZWRRdWVzdGlvbnMubGVuZ3RoKSB7DQogICAgICAgICAgICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5maW5pc2hlZCA9IHRydWUNCiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZVJlc3BvbnNlKCkNCiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICdzdXJ2ZXktdGhhbmsteW91JyB9KQ0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMubWlzc2VkUXVlc3Rpb25zRGlhbG9nID0gdHJ1ZQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB1cGRhdGVBbnN3ZXIgKGlkLCBxdWVzdGlvbklkLCBhbnN3ZXIpIHsNCiAgICAgICAgICAgICAgICBpZiAoYW5zd2VyLmFuc3dlciA9PT0gbnVsbCkgeyByZXR1cm4gfQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCc9PT09PicsIGFuc3dlciwgaWQsIHF1ZXN0aW9uSWQsIHRoaXMucXVlc3Rpb25yZXNwb25zZXMpDQogICAgICAgICAgICAgICAgdmFyIHJlc3BvbnNlSW5kZXggPSB0aGlzLnF1ZXN0aW9ucmVzcG9uc2VzLmZpbmRJbmRleChyZXNwb25zZSA9PiByZXNwb25zZS5xdWVzdGlvbiA9PT0gcXVlc3Rpb25JZCkNCiAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhyZXNwb25zZUluZGV4KQ0KICAgICAgICAgICAgICAgIHZhciBxdWVzdGlvblJlc3BvbnNlID0gbnVsbA0KICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZUluZGV4ID4gLTEpIHsNCiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25SZXNwb25zZSA9IHRoaXMucXVlc3Rpb25yZXNwb25zZXMuc3BsaWNlKHJlc3BvbnNlSW5kZXgsIDEpWzBdDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25SZXNwb25zZSA9IHsgcXVlc3Rpb246IHF1ZXN0aW9uSWQsIGRpcmVjdF9pbmRpY2F0b3JfaWQ6IGlkLCB2YWx1ZXM6IFtdLCB2YWx1ZTogbnVsbCB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIGlmIChhbnN3ZXIuZGF0YXR5cGUgPT09ICdtdWx0aXBsZWNob2ljZScpIHsNCiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25SZXNwb25zZS52YWx1ZXMgPSBhbnN3ZXIuYW5zd2VyDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25SZXNwb25zZS52YWx1ZSA9IGFuc3dlci5hbnN3ZXINCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdGhpcy5xdWVzdGlvbnJlc3BvbnNlcy5wdXNoKHF1ZXN0aW9uUmVzcG9uc2UpDQogICAgICAgICAgICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbl9yZXNwb25zZXMgPSB0aGlzLnF1ZXN0aW9ucmVzcG9uc2VzDQoNCiAgICAgICAgICAgICAgICBpZiAocGFyc2VJbnQodGhpcy4kcm91dGUucGFyYW1zLnVuaXF1ZXRva2VuKSAhPT0gdGhpcy5zdXJ2ZXlSZXNwb25zZS5zdXJ2ZXkpIHsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NsZWFybHkgbm90IHRoZSBzYW1lJykNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgdmFyIFN1cnZleUlkID0gcGFyc2VJbnQodGhpcy4kcm91dGUucGFyYW1zLnVuaXF1ZXRva2VuLnJlcGxhY2UoJ3N1cnZleT0nLCAnJykpDQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coU3VydmV5SWQgPT09IHRoaXMuc3VydmV5UmVzcG9uc2Uuc3VydmV5KQ0KICAgICAgICAgICAgICAgIGlmICgodGhpcy4kcm91dGUucGFyYW1zLnVuaXF1ZXRva2VuICE9PSB0aGlzLnN1cnZleVJlc3BvbnNlLnRva2VuKSAmJiAoU3VydmV5SWQgIT09IHRoaXMuc3VydmV5UmVzcG9uc2Uuc3VydmV5KSAmJiAocGFyc2VJbnQodGhpcy4kcm91dGUucGFyYW1zLnVuaXF1ZXRva2VuKSAhPT0gdGhpcy5zdXJ2ZXlSZXNwb25zZS5zdXJ2ZXkpKSB7IC8vICh0aGlzLiRyb3V0ZS5wYXJhbXMudW5pcXVldG9rZW4gIT09ICdhY2NvdW50YW50JykNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ05vdCBwb3NzaWJsZScpDQogICAgICAgICAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVJlc3BvbnNlKCkNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBhc3luYyB1cGRhdGVSZXNwb25zZSAoKSB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2RkZGQnKQ0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMudXBkYXRlU3VydmV5UmVzcG9uc2Uoew0KICAgICAgICAgICAgICAgICAgICBvSWQ6IHRoaXMuZXNlYUFjY291bnQ/Lm9yZ2FuaXNhdGlvbiwNCiAgICAgICAgICAgICAgICAgICAgZWFJZDogdGhpcy5lc2VhQWNjb3VudD8uaWQsDQogICAgICAgICAgICAgICAgICAgIHRva2VuOiB0aGlzLnN1cnZleVJlc3BvbnNlLmlkLCAvLyB0aGlzLiRyb3V0ZS5wYXJhbXMudW5pcXVldG9rZW4sDQogICAgICAgICAgICAgICAgICAgIHN1cnZleVJlc3BvbnNlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAuLi50aGlzLnN1cnZleVJlc3BvbnNlDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNoZWNrTWFuZGF0b3J5RmllbGRzICgpIHsNCiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc3VydmV5LnNlY3Rpb25zLmxlbmd0aDsgaSsrKSB7DQogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5zdXJ2ZXkuc2VjdGlvbnNbaV0ucXVlc3Rpb25zLmxlbmd0aDsgaisrKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zdXJ2ZXkuc2VjdGlvbnNbaV0ucXVlc3Rpb25zW2pdLmlzTWFuZGF0b3J5KSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYW5zd2VyID0gdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbl9yZXNwb25zZXMuZmluZChyZXNwb25zZSA9PiByZXNwb25zZS5xdWVzdGlvbiA9PT0gdGhpcy5zdXJ2ZXkuc2VjdGlvbnNbaV0ucXVlc3Rpb25zW2pdLmlkKQ0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFhbnN3ZXIgfHwgKCFhbnN3ZXIudmFsdWVzLmxlbmd0aCAmJiAhYW5zd2VyLnZhbHVlKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN1cnZleS5zZWN0aW9uc1tpXS5xdWVzdGlvbnNbal0ucmVxdWlyZWQgPSB0cnVlDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWlzc2VkUXVlc3Rpb25zLnB1c2godGhpcy5zdXJ2ZXkuc2VjdGlvbnNbaV0ucXVlc3Rpb25zW2pdKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg=="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue"],"names":[],"mappings":"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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBACP,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;gBACvC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;gBACf,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtqBACjD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7E,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/C,EAAE,CAAC,CAAC,CAAC,EAAE;wBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9C;IAChB,CAAC;gBACW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb;YACJ,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBACd,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxF,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBACrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC;QACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;YACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxlJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBAChggBAChJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5E,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC1F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;gBACxG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC/F,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CA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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBACV,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChgBAChJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;gBACxB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9C,EAAE,CAAC,CAAC,CAAC,EAAE;oBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACpC;YACJ,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBAClC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAC1B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;oBACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACxE,EAAE,CAAC,CAAC,CAAC,EAAE;oBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBAChG;gBACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,EAAE,CAAC,CAAC,CAAC,EAAE;oBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC;gBACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;gBAE9D,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtC;gBACA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnoBAC/O,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/survey/SurveyFill.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div style=\"width: 100%;\">\r\n        <ProgressSpinner v-if=\"loading && !failedLoad\" />\r\n        <div v-else-if=\"loading && failedLoad\" class=\"p-text-italic\">THe Survey could not be loaded!</div> <!-- style=\"background-color: #ddedc8;\" -->\r\n        <div v-else-if=\"!surveyResponse.finished\" class=\"p-d-flex p-grid p-jc-center p-m-0\" >\r\n            <div class=\"p-col-12 p-grid p-jc-center p-p-3\">\r\n                <h1 class=\"p-col-12 p-m-0\">{{survey.name}}</h1>\r\n                <h3 class=\"p-col-12 p-m-0\">{{survey.description}}</h3>\r\n                <div class=\"p-col-4 p-text-left\">\r\n                    <p><span class=\"p-text-bold\">Respondent:</span> {{surveyResponse.respondent}} <br> <span class=\"p-text-bold\">Organisation:</span> {{surveyResponse.organisation}} </p>\r\n                </div>\r\n            </div>\r\n            <!-- {{surveyResponse}} -->\r\n            <div v-if=\"this.survey.sections.length\" class=\"p-grid p-col-6 p-m-5\" style=\"border-radius: 10px\">\r\n                <div v-if=\"sectionNumber === 0\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.welcome_text}}</h3></div>\r\n                <Divider />\r\n                <div class=\"p-col-6 p-text-left p-text-bold\">Section {{ sectionNumber + 1 }} of {{ totalSections.length }}</div>\r\n                <div class=\"p-col-6 p-text-right\">\r\n                    <ProgressBar :value=\"progress + 0.1\">{{progress}}% completed</ProgressBar></div>\r\n                <div class=\"p-col-12 p-text-left\"><h3>Section: '{{currentSection.title}}'</h3></div>\r\n                <!-- {{answers}} -->\r\n                <section-component class=\"p-col-12 p-my-2\"\r\n                    v-for=\"item, index in currentSection.mergedQuestionsAndTextFragments\"\r\n                    tabindex=\"0\"\r\n                    :key=\"item.id\"\r\n                    :item=\"item\"\r\n                    :answer=\"answers[item.id]\"\r\n                    :active=\"activeQuestion === (index)\"\r\n                    :refresh=\"refresh\"\r\n                    @input=\"updateAnswer(item.direct_indicator[0].id, item.id, $event)\"\r\n                    @focus=\"toggleActive(index)\"\r\n                    @focuschecking=\"toggleActive(index)\"\r\n                    @blur=\"toggleActive\"\r\n                />\r\n                <div v-if=\"(sectionNumber + 1) === totalSections.length\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.closing_text}}</h3></div>\r\n                <div class=\"p-grid p-col-12 p-m-0 p-px-0\">\r\n                    <div class=\"p-col-6 p-text-left p-pl-0\">\r\n                        <Button label=\"Previous Section\" class=\"p-button-raised\" :disabled=\"sectionNumber === 0\" @click=\"previousSection\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right\">\r\n                        <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised\" @click=\"saveSurvey\" :disabled=\"true\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right p-pr-0\">\r\n                        <Button v-if=\"sectionNumber + 1 < totalSections.length\" label=\"Next Section\" class=\"p-button-raised\" style=\"width: 100%;\" @click=\"nextSection\" />\r\n                        <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%;\" @click=\"finishSurvey\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h1 v-else>This survey has no sections to display!</h1>\r\n        </div>\r\n\r\n        <Dialog v-model:visible=\"missedQuestionsDialog\" :style=\"{width: '450px'}\" header=\"Missing Answers\" :modal=\"true\">\r\n            <i class=\"pi pi-star p-mr-3\" style=\"font-size: 1.5rem\" />\r\n            <span class=\"p-text-left\">You need to fill in the following answers to be able to send your survey response:</span>\r\n            <div class=\"p-grid p-m-2\">\r\n                <div v-for=\"question in missedQuestions\" :key=\"question\" class=\"p-col-12\">\r\n                    <Button :label=\"`Question: '${question.name}'`\" style=\"width: 100%;\" @click=\"goToQuestion(question)\"> </Button>\r\n                </div>\r\n            </div>\r\n            <template #footer>\r\n                <Button label=\"Ok\" class=\"p-button-text\" @click=\"missedQuestionsDialog = false\"/>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import SectionComponent from '../../components/survey/SectionComponent'\r\n    import ProgressBar from 'primevue/progressbar'\r\n    import ProgressSpinner from 'primevue/progressspinner'\r\n\r\n    export default {\r\n        components: {\r\n            SectionComponent,\r\n            ProgressBar,\r\n            ProgressSpinner\r\n        },\r\n        data () {\r\n            return {\r\n                questionresponses: null,\r\n                loading: true,\r\n                failedload: false,\r\n                sectionNumber: 0,\r\n                progressBarValue: 0,\r\n                activeQuestion: null,\r\n                missedQuestions: [],\r\n                missedQuestionsDialog: false,\r\n                refresh: false\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponse', 'surveyResponses']),\r\n            ...mapState('eseaAccount', ['eseaAccount']),\r\n            ...mapState('question', ['questions']),\r\n            answers () {\r\n                if (this.loading) { return null } else {\r\n                var answers = {}\r\n                // console.log(']]]]', this.surveyResponse)\r\n\t\t\t\tthis.surveyResponse.question_responses.forEach((response) => {\r\n\t\t\t\t\t// if (answer.question === 36) { console.log('vallueee', answer) }\r\n                     const relevantquestion = this.questions.find(q => q.id === response.question)\r\n                    if (relevantquestion.uiComponent === 'checkbox') {\r\n                        answers[response.question] = response.values\r\n                    } else {\r\n                        answers[response.question] = response.value\r\n                    }\r\n\t\t\t\t})\r\n                // console.log(')))', answers)\r\n                return answers\r\n                }\r\n            },\r\n            currentSection () {\r\n                const section = this.survey.sections[this.sectionNumber]\r\n                const mergedQuestionsAndTextFragments = section?.questions.concat(section.text_fragments)\r\n                const sortedComponents = mergedQuestionsAndTextFragments?.sort((a, b) => (a.order > b.order) ? 1 : -1)\r\n                section.mergedQuestionsAndTextFragments = sortedComponents\r\n                return section\r\n            },\r\n            totalSections () {\r\n                const sectionList = []\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    sectionList.push(this.survey.sections[i].id)\r\n                }\r\n                // for (const section in this.survey?.sections) { totalSections = totalSections + this.survey?.topics[topic].sub_topics.length }\r\n\r\n                return sectionList\r\n            },\r\n            progress () {\r\n                var progress\r\n                if (this.sectionNumber === 0) { return 0 }\r\n                progress = ((this.sectionNumber + 1) / this.totalSections.length) * 100\r\n                return progress\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            surveyResponse: {\r\n                handler: function (newValue) {\r\n                    this.refresh = !this.refresh\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        created () {\r\n            console.log('eee')\r\n            setTimeout(() => { this.failedLoad = true }, 10000)\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponse', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse', 'setSurveyResponse']),\r\n            ...mapActions('question', ['fetchQuestions']),\r\n            async initialize () {\r\n                // Unique Token can be a 'pk', 'survey=survey_pk' or 'survey response token' (more on this in the backend, survey_responseview..py in the retrieve function.\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                console.log('++++', this.eseaAccount, this.surveyResponse.question_responses)\r\n                await this.fetchSurvey({ mId: this.surveyResponse.method, id: this.surveyResponse.survey })\r\n                console.log(this.survey.name)\r\n                await this.fetchQuestions({ mId: this.surveyResponse.method, SuId: this.surveyResponse.survey, SeId: 0 })\r\n                this.loading = false\r\n                console.log('eee', this.surveyResponse.question_responses)\r\n                if (this.surveyResponse.finished) {\r\n                    console.log(this.surveyResponse.survey_audit)\r\n                    if (this.surveyResponse.survey_audit) {\r\n                        print()\r\n                        console.log('Go to read only version of survey-fill for multiple respondent auditing purposes.')\r\n                        // this.$router.push({ name: 'survey-audit' })\r\n                    }\r\n                    this.$router.push({ name: 'survey-thank-you' })\r\n                }\r\n                this.questionresponses = this.surveyResponse.question_responses\r\n            },\r\n            previousSection () {\r\n                if (this.sectionNumber > 0) {\r\n                    this.sectionNumber--\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            nextSection () {\r\n                if (this.sectionNumber + 1 < this.totalSections.length) {\r\n                    this.sectionNumber++\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            toggleActive (question) {\r\n                if (Number.isInteger(question)) {\r\n                    this.activeQuestion = question\r\n                } else {\r\n                    this.activeQuestion = null\r\n                    }\r\n            },\r\n            goToQuestion (question) {\r\n                this.sectionNumber = this.totalSections.indexOf(question.section)\r\n                console.log(this.sectionNumber)\r\n                this.missedQuestionsDialog = false\r\n            },\r\n            saveSurvey () {\r\n                // TODO // popup Dialog: Survey is automatically saved.\r\n            },\r\n            async finishSurvey () {\r\n                console.log('cc')\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                this.checkRequiredQuestions = true\r\n                this.missedQuestions = []\r\n                await this.checkMandatoryFields()\r\n                console.log('reee')\r\n                if (!this.missedQuestions.length) {\r\n                this.surveyResponse.finished = true\r\n                await this.updateResponse()\r\n                this.$router.push({ name: 'survey-thank-you' })\r\n                } else {\r\n                    this.missedQuestionsDialog = true\r\n                }\r\n            },\r\n            updateAnswer (id, questionId, answer) {\r\n                if (answer.answer === null) { return }\r\n                console.log('====>', answer, id, questionId, this.questionresponses)\r\n                var responseIndex = this.questionresponses.findIndex(response => response.question === questionId)\r\n            //     console.log(responseIndex)\r\n                var questionResponse = null\r\n                if (responseIndex > -1) {\r\n                    questionResponse = this.questionresponses.splice(responseIndex, 1)[0]\r\n                } else {\r\n                    questionResponse = { question: questionId, direct_indicator_id: id, values: [], value: null }\r\n                }\r\n                if (answer.datatype === 'multiplechoice') {\r\n                    questionResponse.values = answer.answer\r\n                } else {\r\n                    questionResponse.value = answer.answer\r\n                }\r\n                this.questionresponses.push(questionResponse)\r\n                this.surveyResponse.question_responses = this.questionresponses\r\n\r\n                if (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey) {\r\n                    console.log('clearly not the same')\r\n                }\r\n                var SurveyId = parseInt(this.$route.params.uniquetoken.replace('survey=', ''))\r\n                console.log(SurveyId === this.surveyResponse.survey)\r\n                if ((this.$route.params.uniquetoken !== this.surveyResponse.token) && (SurveyId !== this.surveyResponse.survey) && (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey)) { // (this.$route.params.uniquetoken !== 'accountant')\r\n                    console.log('Not possible')\r\n                    return\r\n                }\r\n                this.updateResponse()\r\n            },\r\n            async updateResponse () {\r\n                console.log('dddd')\r\n                await this.updateSurveyResponse({\r\n                    oId: this.eseaAccount?.organisation,\r\n                    eaId: this.eseaAccount?.id,\r\n                    token: this.surveyResponse.id, // this.$route.params.uniquetoken,\r\n                    surveyResponse: {\r\n                        ...this.surveyResponse\r\n                    }\r\n                })\r\n            },\r\n            checkMandatoryFields () {\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    for (let j = 0; j < this.survey.sections[i].questions.length; j++) {\r\n                        if (this.survey.sections[i].questions[j].isMandatory) {\r\n                            const answer = this.surveyResponse.question_responses.find(response => response.question === this.survey.sections[i].questions[j].id)\r\n\r\n                            if (!answer || (!answer.values.length && !answer.value)) {\r\n                                this.survey.sections[i].questions[j].required = true\r\n                                this.missedQuestions.push(this.survey.sections[i].questions[j])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}