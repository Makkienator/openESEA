{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\Register.vue?vue&type=style&index=0&id=30b8895d&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\Register.vue","mtime":1707572265530},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741014585012},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLmJvcmRlcmxlc3Mgew0KICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmVkOw0KICAgIH0NCiAgICAubGluayB7DQogICAgICAgIHRleHQtZGVjb3JhdGlvbjogTm9uZTsNCiAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgfQ0KICAgIC5saW5rOmhvdmVyIHsNCiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7DQogICAgfQ0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\Register.vue"],"names":[],"mappings":";IAyII,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC;IACA,CAAC,CAAC,CAAC,CAAC,EAAE;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/user/Register.vue","sourceRoot":"","sourcesContent":["// http://localhost:8080/register/\r\n\r\n<template>\r\n    <unauthenticated-base>\r\n        <form @submit.prevent=\"register\" class=\"p-grid p-fluid p-shadow-10 p-px-5 p-pb-5\" style=\"background-color: white; border-radius: 3px;\">\r\n            <h1 class=\"p-col-12\" style=\"border-bottom: 1px solid #00695C;\">Create Account</h1>\r\n            <div class=\"p-col-12 p-field\">\r\n                <span class=\"p-float-label\">\r\n                        <InputText type=\"text\" id=\"username\" v-model=\"customuser.username\" :class=\"{'borderless': usernameErrors.length}\" @change=\"v$.customuser.username.$touch()\" />\r\n                        <label for=\"username\">Username</label>\r\n                    </span>\r\n                    <div class=\"p-error p-text-italic p-text-left\" v-for=\"error in usernameErrors\" :key=\"error\"><small v-if=\"error === 'This field must be unique.'\">Username is already taken.</small><small v-else>{{ error }}</small></div>\r\n            </div>\r\n            <div class=\"p-col-12 p-field\">\r\n                <span class=\"p-float-label\">\r\n                        <InputText type=\"text\" id=\"email\" v-model=\"customuser.email\" :class=\"{'borderless': emailErrors.length}\" @change=\"v$.customuser.email.$touch()\" />\r\n                        <label for=\"email\">Email</label>\r\n                    </span>\r\n                    <div class=\"p-error p-text-italic p-text-left\" v-for=\"error in emailErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n            </div>\r\n            <div class=\"p-col-12 p-field\">\r\n                <span class=\"p-float-label\">\r\n                        <InputText type=\"password\" id=\"password\" v-model=\"customuser.password\" :class=\"{'borderless': passwordErrors.length}\" @change=\"v$.customuser.password.$touch()\" />\r\n                        <label for=\"password\">Password</label>\r\n                    </span>\r\n                    <div class=\"p-error p-text-italic p-text-left\" v-for=\"error in passwordErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n            </div>\r\n            <div class=\"p-col-12 p-field\">\r\n                <span class=\"p-float-label\">\r\n                        <InputText type=\"password\" id=\"password2\" v-model=\"customuser.password2\" :class=\"{'borderless': password2Errors.length}\" @change=\"v$.customuser.password2.$touch()\"/>\r\n                        <label for=\"password2\">Confirm Password</label>\r\n                    </span>\r\n                    <div class=\"p-error p-text-italic p-text-left\" v-for=\"error in password2Errors\" :key=\"error\"><small>{{error}}</small></div>\r\n            </div>\r\n            <div class=\"p-text-left p-p-3\" style=\"color: grey;\">\r\n                <small>By signing up, you agree to the <span style=\"text-decoration: underline;\">Terms of Use</span> and <span style=\"text-decoration: underline;\">Privacy Policy</span></small>\r\n            </div>\r\n            <Button type=\"submit\" value=\"submit\" class=\"p-jc-center p-button-success\" style=\"background-color: #00695C;\" :disabled=\"v$.customuser.$invalid\">Register Account</Button>\r\n        </form>\r\n        <div class=\"p-m-5\">\r\n            <router-link to=\"/login\" class=\"link\">Already have an Account? Log in.</router-link>\r\n        </div>\r\n    </unauthenticated-base>\r\n</template>\r\n\r\n<script>\r\n    import useVuelidate from '@vuelidate/core'\r\n    import { required, minLength, maxLength, email, sameAs } from 'vuelidate/lib/validators'\r\n    import HandleValidationErrors from '../../utils/HandleValidationErrors'\r\n    import { mapActions, mapState } from 'vuex'\r\n    import UnauthenticatedBase from '@/components/UnauthenticatedBase'\r\n\r\n    export default {\r\n        components: {\r\n            UnauthenticatedBase\r\n        },\r\n        data () {\r\n            return {\r\n                customuser: {\r\n                    username: '',\r\n                    password: '',\r\n                    password2: '',\r\n                    email: '',\r\n                    first_name: '',\r\n                    last_name_prefix: '',\r\n                    last_name: ''\r\n                },\r\n                submitted: false\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('authentication', ['errors']),\r\n            usernameErrors () {\r\n                return HandleValidationErrors(this.v$.customuser.username, this.errors.username)\r\n            },\r\n            emailErrors () {\r\n                return HandleValidationErrors(this.v$.customuser.email, this.errors.email)\r\n            },\r\n            passwordErrors () {\r\n                return HandleValidationErrors(this.v$.customuser.password, this.errors.password)\r\n            },\r\n            password2Errors () {\r\n                return HandleValidationErrors(this.v$.customuser.password2)\r\n            },\r\n            firstnameErrors () {\r\n                return HandleValidationErrors(this.v$.customuser.first_name)\r\n            },\r\n            lastnameprefixErrors () {\r\n                return HandleValidationErrors(this.v$.customuser.last_name_prefix)\r\n            },\r\n            lastnameErrors () {\r\n                return HandleValidationErrors(this.v$.customuser.last_name)\r\n            }\r\n        },\r\n        watch: {\r\n            customuser: {\r\n                handler (val) {\r\n                    this.initialize()\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        setup: () => ({ v$: useVuelidate() }),\r\n        validations: {\r\n            customuser: {\r\n                username: { required, minLength: minLength(4), maxLength: maxLength(100) },\r\n                password: { required, minLength: minLength(8) },\r\n                password2: { required, sameAsPassword: sameAs(function () { return this.customuser.password }) },\r\n                email: { required, email }\r\n                // Left out on registration, to make registration easier for the user\r\n                /*\r\n                first_name: { required, maxLength: maxLength(50) },\r\n                last_name_prefix: { maxLength: maxLength(50) },\r\n                last_name: { required, maxLength: maxLength(50) }\r\n                */\r\n            }\r\n        },\r\n        created () {\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('authentication', ['userRegister']),\r\n            initialize () {\r\n                this.$store.commit('authentication/clearErrors')\r\n            },\r\n            register (e) {\r\n                this.submitted = true\r\n                this.v$.customuser.$touch()\r\n                if (this.v$.$invalid) { return }\r\n                console.log('succes!')\r\n                this.userRegister(this.customuser)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .borderless {\r\n        border-bottom: 1px solid red;\r\n    }\r\n    .link {\r\n        text-decoration: None;\r\n        color: white;\r\n        font-size: 14px;\r\n    }\r\n    .link:hover {\r\n        text-decoration: underline;\r\n    }\r\n</style>\r\n\r\n    <!-- <h4 class=\"p-col-12 p-text-center\" style=\"border-bottom: 1px solid #00695C\">Optional fields <small>(to be pushed to account settings page)</small></h4>\r\n    <div class=\"p-col-12 p-field\">\r\n        <span class=\"p-float-label\">\r\n                <InputText type=\"text\" id=\"firstname\" v-model=\"customuser.first_name\" :class=\"{'borderless': firstnameErrors.length && submitted}\" />\r\n                <label for=\"firstname\">First Name</label>\r\n            </span>\r\n            <div class=\"p-error p-text-italic\" v-for=\"error in firstnameErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n    </div>\r\n    <div class=\"p-col-12 p-field\">\r\n        <span class=\"p-float-label\">\r\n                <InputText type=\"text\" id=\"lastnameprefix\" v-model=\"customuser.last_name_prefix\" :class=\"{'borderless': lastnameprefixErrors.length && submitted}\" />\r\n                <label for=\"lastnameprefix\">Last Name Prefix</label>\r\n            </span>\r\n            <div class=\"p-error p-text-italic\" v-for=\"error in lastnameprefixErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n    </div>\r\n    <div class=\"p-col-12 p-field\">\r\n        <span class=\"p-float-label\">\r\n                <InputText type=\"text\" id=\"lastname\" v-model=\"customuser.last_name\" :class=\"{'borderless': lastnameErrors.length && submitted}\" />\r\n                <label for=\"lastname\">Last Name</label>\r\n            </span>\r\n            <div class=\"p-error p-text-italic\" v-for=\"error in lastnameErrors\" :key=\"error\"><small>{{error}}</small></div>\r\n    </div> -->\r\n"]}]}