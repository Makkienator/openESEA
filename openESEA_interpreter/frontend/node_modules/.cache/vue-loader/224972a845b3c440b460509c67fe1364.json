{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\OverviewSelection.vue?vue&type=template&id=62978758","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\OverviewSelection.vue","mtime":1707572265292},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPERyb3Bkb3duIGNsYXNzPSJmdWxsLXdpZHRoIg0KICAgICAgICA6b3B0aW9ucz0ib3ZlcnZpZXdJbmZvIg0KICAgICAgICA6b3B0aW9uTGFiZWw9IidkZXNjcmlwdGlvbiciDQogICAgICAgIDpvcHRpb25WYWx1ZT0iJ2luZGV4JyINCiAgICAgICAgOnBsYWNlaG9sZGVyPSJvdmVydmlld0luZm9bY29uZmlnRGF0YT8ub3ZlcnZpZXdJZF0/LmRlc2NyaXB0aW9uIg0KICAgICAgICBAY2hhbmdlPSJnb1RvT3ZlcnZpZXciPg0KICAgIDwvRHJvcGRvd24+DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\dashboard\\OverviewSelection.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/components/dashboard/OverviewSelection.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <Dropdown class=\"full-width\"\r\n        :options=\"overviewInfo\"\r\n        :optionLabel=\"'description'\"\r\n        :optionValue=\"'index'\"\r\n        :placeholder=\"overviewInfo[configData?.overviewId]?.description\"\r\n        @change=\"goToOverview\">\r\n    </Dropdown>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from 'vuex'\r\n\r\nimport Dropdown from 'primevue/dropdown'\r\n\r\nexport default {\r\n    components: {\r\n        Dropdown\r\n    },\r\n    props: {\r\n        config: { type: Object, default: () => { return null } }\r\n    },\r\n    computed: {\r\n        ...mapState('dashboardModel', ['selectionConfig']),\r\n        configData: {\r\n            get () { return this.config ?? this.selectionConfig }\r\n        },\r\n        overviewInfo: {\r\n            get () {\r\n                const overviews = this.getOverviews()()\r\n                const overviewNames = overviews.map(overview => overview?.Name)\r\n                return overviewNames.map((value, index) => ({ description: value, index: index }))\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapGetters('dashboardModel', ['getOverviews']),\r\n        ...mapActions('dashboardModel', ['updateSelectionConfig']),\r\n        goToOverview (event) {\r\n            const selectedOverviewId = event.value\r\n            this.updateSelectionConfig({ overviewId: selectedOverviewId })\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}