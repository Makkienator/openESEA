{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\organisation\\OrganisationEseaAccount.vue?vue&type=style&index=0&id=3d8d5ae4&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\organisation\\OrganisationEseaAccount.vue","mtime":1707572265524},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741014585012},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLnAtc3BsaXRidXR0b24gew0KICAgICAgICB3aWR0aDogMjAwcHg7DQogICAgfQ0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\organisation\\OrganisationEseaAccount.vue"],"names":[],"mappings":";IAkgBI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/organisation/OrganisationEseaAccount.vue","sourceRoot":"","sourcesContent":["http://localhost:8081/organisation/1/esea-accounts/1\r\n\r\n<template>\r\n    <router-view />\r\n\r\n    <div v-if=\"eseaAccount.campaign\" class=\"card p-mx-5 p-mb-5\">\r\n        <div class=\"p-d-flex p-jc-between p-m-2\">\r\n            <div>\r\n                {{ dateFixer(campaign.open_survey_date, 'MMMM Do YYYY') }}\r\n            </div>\r\n            <div>\r\n                {{ dateFixer(campaign.close_survey_date, 'MMMM Do YYYY') }}\r\n            </div>\r\n        </div>\r\n        <ProgressBar :value=\"timeline\" :showValue=\"true\">\r\n            <div v-if=\"campaigntimeleft > 0\"> {{campaigntimeleft}} days left </div>\r\n            <div v-else>This campaign has finished</div>\r\n        </ProgressBar>\r\n    </div>\r\n    <br>\r\n    <br>\r\n    <div v-for=\"survey in eseaAccount.survey_response_by_survey\" :key=\"survey.id\" class=\"p-m-5\">\r\n        <ProgressBar :value=\"survey.current_response_rate + 1\" :showValue=\"true\">\r\n            '{{survey.name}}' - Response Rate: {{survey.current_response_rate }}%\r\n        </ProgressBar>\r\n    </div>\r\n    <TabView :activeIndex=\"0\">\r\n        <TabPanel header=\"Surveys\">\r\n            <DataTable :value=\"eseaAccount.survey_response_by_survey\" datakey=\"id\" :rows=\"10\" :paginator=\"true\" :rowHover=\"true\" v-model:filters=\"filters\" filterDisplay=\"Menu\" selectionMode=\"single\" @row-select=\"goToSurveyFill\"\r\n            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[10,25,50]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n            <template #header>\r\n                <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n                    <h5 class=\"p-m-0\">Surveys</h5>\r\n                    <span class=\"p-input-icon-left\">\r\n                        <i class=\"pi pi-search\" />\r\n                        <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\" />\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <Column field=\"name\" header=\"Name\" sortable />\r\n            <Column field=\"stakeholdergroup\" header=\"Stakeholder Group\" />\r\n            <Column field=\"questions.length\" header=\"Questions\" sortable />\r\n            <Column field=\"respondees.length\" header=\"Stakeholders\" sortable />\r\n            <Column field=\"responses\" header=\"Responses\" sortable />\r\n            <Column field=\"current_response_rate\" header=\"Response Rate\" sortable>\r\n                <template #body=\"{data}\">\r\n                    <ProgressBar :value=\"(data.current_response_rate)\" :showValue=\"true\" />\r\n                </template>\r\n            </Column>\r\n            <Column field=\"required_response_rate\" header=\"Response Rate Threshold\" sortable>\r\n                <template #body='{data}'>\r\n                    {{data.required_response_rate}}%\r\n                </template>\r\n            </Column>\r\n            <Column header=\"Actions\" headerStyle=\"width: 15rem; text-align: center\" bodyStyle=\"text-align: center; overflow: visible\" :style=\"permission ? '': 'display:none;'\">\r\n                <template #body=\"{data}\">\r\n                    <div v-if=\"permission\">\r\n                        <Button v-if=\"(data.type === 'single')\" :label=\"data.responses ? 'Survey Results' : 'Fill in Survey'\" type=\"button\" icon=\"\" class=\"p-button-success\" @click=\"data.responses? goToResults(data) : goToSurveyFill(data)\"  style=\"width: 200px\" />\r\n                        <Button v-else label=\"Import Employees\" type=\"button\" icon=\"pi pi-user-plus\" @click=\"openEmployeesImportWindow(data)\" style=\"width: 200px\" />\r\n                    </div>\r\n                    <div v-else></div>\r\n                </template>\r\n            </Column>\r\n            <Column header=\"Report\" headerStyle=\"width: 6rem; text-align: center\" bodyStyle=\"text-align: center; overflow: visible\">\r\n                <template #body=\"data\">\r\n                    <Button @click=\"goToReport(data)\" icon=\"pi pi-file-pdf\" :class=\"data.sufficient_responses? 'p-button-success' : 'p-button-danger'\"></Button>\r\n                </template>\r\n            </Column>\r\n            </DataTable>\r\n        </TabPanel>\r\n        <TabPanel header=\"Method\">\r\n            <h4>Method: <span class=\"p-text-light p-text-italic\">'{{eseaAccount.method_name}}'</span></h4>\r\n            <h4>Description: <span class=\"p-text-light p-text-italic\">''</span></h4>\r\n            <Button label=\"Go to Method\" @click=\"goToMethod\" />\r\n        </TabPanel>\r\n        <TabPanel header=\"Auditing\">\r\n            <div class=\"p-col-12 p-d-flex p-jc-end\">\r\n                <Button label=\"Reset for Demo\" class=\"p-button-primary p-button-sm\" @click=\"demoReset()\" :disabled=\"false\"/>\r\n            </div>\r\n             <Card v-if=\"(accountAudit.status === 'finished' && !accountAudit.assurance && !provideAssuranceCard && !declineAssuranceCard) || card1\" class=\"p-text-left p-m-2\">\r\n                 <template #title>\r\n                    Assurance\r\n                 </template>\r\n                 <template #subtitle>\r\n                     Provide assurance?\r\n                 </template>\r\n                 <template #content>\r\n                    Thank you for auditing {{organisation.name}}.\r\n\r\n                    <p>Below you will find an overview of the audit status of all surveys.</p>\r\n\r\n                    <p>Do you wish to provide assurance on this ESEA account?</p>\r\n                 </template>\r\n                 <template #footer>\r\n                     <Button icon=\"pi pi-check\" label=\"Provide Assurance\" @click=\"provideAssuranceCard = true\" />\r\n                     <Button icon=\"pi pi-times\" label=\"No Assurance\" @click=\"declineAssuranceCard = true\" class=\"p-button-secondary p-button-outlined\" style=\"margin-left: .5em\" />\r\n                 </template>\r\n             </Card>\r\n\r\n            <Card v-if=\"(provideAssuranceCard && !accountAudit.assurance) || card2\" class=\"p-text-left p-m-2\">\r\n                 <template #title>\r\n                    Assurance\r\n                 </template>\r\n                 <template #subtitle class=\"p-col-12\">\r\n                    <div class=\"p-col-12 p-d-flex p-ai-center p-jc-between\">\r\n                        Please write your assurance declaration below\r\n                        <Dropdown id=\"method\"  v-model=\"chosenAssuranceLevel\" placeholder=\"Assurance Level\" :options=\"assuranceLevels\" />\r\n                    </div>\r\n                 </template>\r\n                 <template #content>\r\n                    <Textarea v-model=\"assuranceDeclaration\" :autoResize=\"true\" rows=\"3\" class=\"p-col-12\" />\r\n                 </template>\r\n                 <template #footer>\r\n                     <Button icon=\"pi pi-check\" label=\"Provide Assurance Declaration\" @click=\"confirmAssurance(chosenAssuranceLevel)\" :disabled=\"!chosenAssuranceLevel\" />\r\n                 </template>\r\n             </Card>\r\n\r\n            <Card v-if=\"(declineAssuranceCard && !accountAudit.assurance) || card3\" class=\"p-text-left p-m-2\">\r\n                 <template #title>\r\n                    Assurance\r\n                 </template>\r\n                 <template #subtitle class=\"p-col-12\">\r\n                    Why do you not wish to provide assurance?\r\n                 </template>\r\n                 <template #content>\r\n                    <Textarea v-model=\"assuranceDeclaration\" :autoResize=\"true\" rows=\"3\" class=\"p-col-12\" />\r\n                 </template>\r\n                 <template #footer>\r\n                     <Button label=\"Decline Assurance\" @click=\"confirmAssurance('assurance rejected')\" />\r\n                 </template>\r\n             </Card>\r\n\r\n            <Card v-if=\"accountAudit.assurance === 'limited' || accountAudit.assurance === 'reasonable' || card4\" class=\"p-text-left p-m-2\">\r\n                 <template #title>\r\n                    Assurance\r\n                 </template>\r\n                 <template #content class=\"p-col-12\">\r\n                    <div class=\"p-mr-5\">\r\n                        <div class=\"p-grid\">\r\n                            <div class=\"p-col-2 p-text-center\"><i class=\"pi pi-check\" style=\"font-size: 3rem; background-color: #689F38; color: white; border-radius: 50%; padding: 30px;\"></i></div>\r\n                            <div class=\"p-col-10\">\r\n                                <h3 class=\"p-mt-0 p-pt-0\">Assurance Declaration</h3>\r\n                                {{accountAudit.assurance_declaration}}\r\n                            </div>\r\n                        </div>\r\n                        <h3 class=\"p-d-flex p-jc-end p-my-0 p-py-0\">Assurance Level: {{accountAudit.assurance}}</h3>\r\n                    </div>\r\n                 </template>\r\n             </Card>\r\n\r\n            <Card v-if=\"accountAudit.assurance === 'assurance rejected' || card5\" class=\"p-text-left p-m-2\">\r\n                 <template #title>\r\n                    Assurance\r\n                 </template>\r\n                 <template #content class=\"p-col-12\">\r\n                    <div class=\"p-mr-5\">\r\n                        <div class=\"p-grid\">\r\n                            <div class=\"p-col-2 p-text-center\"><i class=\"pi pi-times\" style=\"font-size: 3rem; background-color: red; color: white; border-radius: 50%; padding: 30px;\"></i></div>\r\n                            <div class=\"p-col-10\">\r\n                                <h3 class=\"p-mt-0 p-pt-0\">Assurance Declaration</h3>\r\n                                {{accountAudit.assurance_declaration}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                 </template>\r\n             </Card>\r\n            <!-- {{accountAudit}} -->\r\n            <!-- <Button label=\"start Account Audit\" @click=\"goToMethod\" /> -->\r\n            <!-- <div class=\"p-shadow-4\" style=\"display: flex; justify-content: center; align-items: center; width: 80%; height: 400px; margin: auto; background-color: lightblue; border-radius: 10px\"><h2>Start Account Audit</h2></div> -->\r\n            <DataTable :value=\"eseaAccount.survey_response_by_survey\" datakey=\"id\" :rows=\"10\" :paginator=\"true\" v-model:filters=\"filters\" filterDisplay=\"Menu\"\r\n            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[10,25,50]\"\r\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n                <template #header>\r\n                    <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n                        <h5 class=\"p-m-0\">Surveys</h5>\r\n                        <span class=\"p-input-icon-left\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\" />\r\n                        </span>\r\n                        <div>\r\n                            <Button label=\"Refresh Recommendations\" class=\"p-mr-2\" @click=\"refreshRecommendations()\" />\r\n                            <!-- <Button label=\"Auditors\" class=\"p-mr-2\" @click=\"something\" :disabled=\"true\" /> -->\r\n                            <Button label=\"Finish Account Audit\" @click=\"finishAuditDialog = true\" :disabled=\"accountAudit.status === 'finished'\" />\r\n\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <Column field=\"name\" header=\"Name\" sortable />\r\n                <Column field=\"auditor\" header=\"Auditor\" sortable />\r\n                <Column field=\"recommendations\" header=\"Recommendations\">\r\n                    <template #body=\"{data}\">\r\n                        <div v-if=\"permission\">\r\n                           <Button v-if=\"data.id===6\" :label=\"`${nr_of_recommended} Recommendations`\" class=\"p-button-sm p-button-rounded p-py-1 p-button-danger\" :disabled=\"true\" />\r\n                        </div>\r\n                    </template>\r\n                </Column>\r\n                <Column field=\"type\" header=\"Type\" />\r\n                <Column header=\"Status\" headerStyle=\"width: 15rem; text-align: center\" bodyStyle=\"text-align: center; overflow: visible\" :style=\"permission ? '': 'display:none;'\">\r\n                    <template #body=\"{data}\">\r\n                        <div v-if=\"permission\">\r\n                            <div v-if=\"eseaAccount.verified_surveys.includes(data.id)\" class=\"p-d-flex p-ai-center p-jc-between p-px-1\">\r\n                                <div class=\"p-col-2 p-text-right\"><i class=\"pi pi-check\" style=\"font-size: 1rem; background-color: #689F38; color: white; border-radius: 50%; padding: 7px;\"></i></div>\r\n                            </div>\r\n                            <div v-else class=\"p-text-left\">\r\n                                <Button :label=\"data.survey_audit? 'Continue Audit' : 'Start Audit'\" type=\"button\" class=\"p-button-sm\" @click=\"startAudit(data)\"  style=\"width: 150px\" />\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </TabPanel>\r\n        <TabPanel header=\"Settings\" :disabled=\"!permission\">\r\n            <div class=\"p-col-8 p-fluid p-text-left p-p-5\" style=\"width: 600px\">\r\n                    <div class=\"p-d-flex p-jc-between\">\r\n                        <Button label=\"Save ESEA Account Details\" class=\"p-button-primary p-button-sm p-mr-5\" @click=\"editEseaAccount\" :disabled=\"false\"/>\r\n                        <Button label=\"Delete ESEA Account\" class=\"p-button-danger p-button-sm p-ml-5\" @click=\"deleteEseaAccountDialog = true\" />\r\n                    </div>\r\n                </div>\r\n        </TabPanel>\r\n    </TabView>\r\n\r\n        <Dialog v-model:visible=\"finishAuditDialog\" style=\"width: 500px;\" header=\"Finish Audit\" :modal=\"true\" dismissableMask=\"true\">\r\n        <p>Are you sure you wish to finish the audit for this complete ESEA account? </p>\r\n\r\n        <p>You will not be able to start new survey audits for this ESEA account after clicking 'Yes'.</p>\r\n        <template #footer>\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"finishAudit()\" />\r\n            <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"finishAuditDialog = false\" />\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"importEmployeesDialog\" :style=\"{width: '900px'}\" header=\"Import your stakeholders\" :modal=\"true\" class=\"p-fluid\">\r\n        <div class=\"p-d-flex p-jc-between p-ai-start p-p-5\" style=\"border: 1px solid lightgrey;\">\r\n            <Listbox v-if=\"surveyy.respondees.length\" v-model=\"s\" :options=\"surveyy.respondees\" :multiple=\"false\"  optionLabel=\"name\" :filter=\"true\" listStyle=\"max-height:250px\" style=\"width:15rem\" filterPlaceholder=\"Search\">\r\n                <template #option=\"slotProps\">\r\n                    <div class=\"country-item\">\r\n                        <div>{{slotProps.option.name}}</div>\r\n                    </div>\r\n                </template>\r\n            </Listbox>\r\n            <div>\r\n                <p>Import employees for the following survey: <span class=\"p-text-italic\">'{{surveyy.name}}'</span>.</p>\r\n                <FileUpload name=\"myfile\" :customUpload=\"true\" @uploader=\"onUpload\" :fileLimit=\"1\" accept=\".csv\" :maxFileSize=\"1000000\">\r\n                    <template #empty>\r\n                        <p>Drag and drop your csv file here to upload.</p>\r\n                    </template>\r\n                </FileUpload>\r\n                <div class=\"p-error p-text-italic\" v-for=\"response in stakeholderupload\" :key=\"response\"><small>{{response}}</small></div>\r\n            </div>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Remove window\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"importEmployeesDialog = false\"/>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-if=\"eseaAccount\" v-model:visible=\"deleteEseaAccountDialog\" style=\"width: 450px;\" header=\"Confirm\" :modal=\"true\" dismissableMask=\"true\">\r\n        <div class=\"confirmation-content\">\r\n            <i class=\"pi pi-exclamation-triangle p-mr-3\" style=\"font-size: 1.5rem\" />\r\n            <span>Are you sure you want to delete this Esea Account?</span>\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"deleteEseaAccountDialog = false\" />\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"removeEseaAccount()\" />\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"startAuditDialog\" style=\"width: 500px\" header=\"New Audit Process\" :modal=\"true\" :dismissableMask=\"true\">\r\n        <audit-form @closedialog=\"startAuditDialog=false\" />\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import { AxiosInstance } from '../../plugins/axios'\r\n    import { FilterMatchMode } from 'primevue/api'\r\n    import ProgressBar from 'primevue/progressbar'\r\n    import Listbox from 'primevue/listbox'\r\n    import dateFixer from '../../utils/datefixer'\r\n    import moment from 'moment'\r\n    import Dropdown from 'primevue/dropdown'\r\n\r\n    import AuditForm from '../../components/forms/AuditForm'\r\n\r\n    export default {\r\n        components: {\r\n            ProgressBar,\r\n            Listbox,\r\n            AuditForm,\r\n            Dropdown\r\n        },\r\n        data () {\r\n            return {\r\n                filters: {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS }\r\n                },\r\n                columns: [\r\n                    { field: 'name', header: 'Name' },\r\n                    { field: 'method', header: 'Method' },\r\n                    { field: 'questions.length', header: 'Questions' },\r\n                    { field: 'stakeholders', header: 'Stakeholder group' }\r\n                ],\r\n                deleteEseaAccountDialog: false,\r\n                importEmployeesDialog: false,\r\n                startAuditDialog: false,\r\n                finishAuditDialog: false,\r\n                surveyy: null,\r\n                selected_survey: null,\r\n                stakeholderupload: null,\r\n                // Only used for Artur's Demo!\r\n                card1: false,\r\n                card2: false,\r\n                card3: false,\r\n                card4: false,\r\n                card5: false,\r\n                provideAssuranceCard: false,\r\n                declineAssuranceCard: false,\r\n                assuranceLevels: [\r\n                    'limited',\r\n                    'reasonable'\r\n                ],\r\n                chosenAssuranceLevel: null,\r\n                assuranceDeclaration: '',\r\n                items: [\r\n                    {\r\n                        label: '- Send Message',\r\n                        command: () => {\r\n                            this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 })\r\n                        }\r\n                    },\r\n                    {\r\n                        label: '- Send Reminder',\r\n                        command: () => {\r\n                            this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 })\r\n                        }\r\n                    }\r\n                ],\r\n                AssuranceDeclaration: 'Assurance Declaration',\r\n                AssuranceDeclarationPlaceholder: 'Motivation for not providing assurance'\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('eseaAccount', ['eseaAccount']),\r\n            ...mapState('organisation', ['organisation']),\r\n            ...mapState('survey', ['surveys', 'survey']),\r\n            ...mapState('campaign', ['campaign']),\r\n            ...mapState('auditIndicators', ['indicators']),\r\n            ...mapState('accountAudit', ['accountAudit']),\r\n            ...mapState('surveyAudit', ['surveyAudits']),\r\n            nr_of_recommended () {\r\n                var i = 0\r\n                this.indicators.forEach((dict) => {\r\n                    if (typeof dict === 'object') {\r\n                        for (const [key] of Object.entries(dict)) {\r\n                            // console.log(key)\r\n                            if (key === 'critical_impact' | dict[key] === true) {\r\n                                i++\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                console.log(i)\r\n                return i\r\n            },\r\n            timeline () {\r\n                const jsondate = new Date().toJSON()\r\n                var currentdate = moment(jsondate, 'YYYY-MM-DD')\r\n                var admission = moment(this.campaign.open_survey_date, 'YYYY-MM-DD')\r\n                var discharge = moment(this.campaign.close_survey_date, 'YYYY-MM-DD')\r\n                var progress = (admission.diff(currentdate, 'days') / admission.diff(discharge, 'days')) * 100\r\n                return progress\r\n            },\r\n            campaigntimeleft () {\r\n                const jsondate = new Date().toJSON()\r\n                var currentdate = moment(jsondate, 'YYYY-MM-DD')\r\n                var discharge = moment(this.campaign.close_survey_date, 'YYYY-MM-DD')\r\n                var daysleft = (discharge.diff(currentdate, 'days'))\r\n                return daysleft\r\n            },\r\n            permission () {\r\n            if (this.organisation.accesLevel) {\r\n                const accesLevel = this.organisation.accesLevel\r\n                if (accesLevel === 'admin' || accesLevel === 'organisation admin' || accesLevel === 'esea accountant') {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n        },\r\n        created () {\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('eseaAccount', ['deleteEseaAccount']),\r\n            ...mapActions('survey', ['fetchSurveys', 'setSurvey']),\r\n            ...mapActions('campaign', ['fetchCampaign']),\r\n            ...mapActions('method', ['fetchMethod']),\r\n            ...mapActions('auditIndicators', ['fetchIndicators']),\r\n            ...mapActions('surveyAudit', ['fetchSurveyAudits', 'fetchSurveyAudit']),\r\n            ...mapActions('accountAudit', ['fetchAccountAudit', 'updateAccountAudit']),\r\n            dateFixer,\r\n            async initialize () {\r\n                this.fetchMethod({ id: this.eseaAccount.method })\r\n                this.fetchSurveys({ mId: this.eseaAccount.method })\r\n                if (this.eseaAccount.campaign) {\r\n                    this.fetchCampaign({ nId: this.eseaAccount.network, id: this.eseaAccount.campaign })\r\n                }\r\n                this.refreshRecommendations()\r\n                // this.fetchSurveyAudits({ oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId })\r\n            },\r\n            toggle (event) {\r\n                this.$refs.menu.toggle(event)\r\n            },\r\n            openEmployeesImportWindow (data) {\r\n                this.surveyy = data\r\n                if (data.id) {\r\n                    this.importEmployeesDialog = true\r\n                    this.stakeholdergroup = null\r\n                }\r\n            },\r\n            async onUpload (event) {\r\n                var formData = new FormData()\r\n                formData.append('file', event.files[0])\r\n                return new Promise((resolve, reject) => {\r\n                    AxiosInstance.post(`/import-employees/${this.$route.params.EseaAccountId || 0}/${this.surveyy.id}/`, formData) // esea account // survey\r\n                    .then(response => {\r\n                        this.stakeholderupload = response.data\r\n                        console.log('...response:', response.data)\r\n                        this.importDialog = false\r\n                        this.$toast.add({ severity: 'success', summary: 'CSV uploaded', detail: 'Your csv was correctly uploaded.' })\r\n                        this.initialize()\r\n                    resolve()\r\n                    })\r\n                    .catch(err => { reject(err) })\r\n                })\r\n            },\r\n            async goToSurveyFill (data) {\r\n                // The retrieved object structure is dependent on whether the button was clicked or the full row\r\n                if (data.data) {\r\n                    data = data.data\r\n                }\r\n                if (data.responses) {\r\n                    this.goToResults(data)\r\n                    return\r\n                }\r\n                this.$router.push({ name: 'survey-fill-page', params: { uniquetoken: `survey=${data.id}` } })\r\n            },\r\n            // Right now this also goes to the report, but could be changed to show the summarized survey data to organisation members as well EseaAccountId\r\n            goToResults (data) {\r\n                console.log(data)\r\n                if (data.type === 'single') {\r\n                this.$router.push({ name: 'method-survey-result', params: { OrganisationId: this.$route.params.OrganisationId, EseaAccountId: this.$route.params.EseaAccountId, SurveyId: data.id } })\r\n                } else {\r\n                    this.$router.push({ name: 'survey-results', params: { OrganisationId: this.$route.params.OrganisationId, EseaAccountId: this.$route.params.EseaAccountId, SurveyId: data.id } })\r\n                }\r\n                // this.$router.push({ name: 'esea-account-report', params: { OrganisationId: this.$route.params.OrganisationId, EseaAccountId: this.eseaAccount.id } })\r\n            },\r\n            async goToReport (event) {\r\n                this.$router.push({ name: 'esea-account-report', params: { OrganisationId: this.$route.params.OrganisationId, EseaAccountId: this.$route.params.EseaAccountId } })\r\n            },\r\n            async removeEseaAccount () {\r\n                this.deleteEseaAccountDialog = false\r\n                await this.deleteEseaAccount({ oId: this.$route.params.OrganisationId, id: this.eseaAccount?.id || 0 })\r\n                this.$toast.add({ severity: 'success', summary: 'Succesful', detail: 'Esea Account Deleted', life: 3000 })\r\n                this.$router.push({ name: 'organisationeseaaccounts' })\r\n            },\r\n            async goToMethod () {\r\n                this.$router.push({ name: 'newmethoddetails', params: { id: this.eseaAccount.method } })\r\n                /* this.$router.push({ name: 'methoddetails', params: { id: this.campaign.method } }) */\r\n            },\r\n            async startAudit (data) {\r\n                console.log(data)\r\n                this.selected_survey = data.id\r\n                await this.setSurvey(data)\r\n                if (!data.survey_audit) {\r\n                    this.startAuditDialog = true\r\n                } else {\r\n                    await this.fetchSurveyAudit({ oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId, id: data.survey_audit })\r\n                    if (data.type === 'single') {\r\n                        await this.fetchIndicators({ id: this.$route.params.EseaAccountId }) //  oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId\r\n                        this.$router.push({ name: 'questionselection', params: { EseaAccountId: this.$route.params.EseaAccountId, SurveyId: this.survey.id } })\r\n                    } else if (data.type === 'multiple') {\r\n                        this.$router.push({ name: 'multipleauditsampling', params: { EseaAccountId: this.$route.params.EseaAccountId, SurveyId: this.survey.id } })\r\n                    }\r\n                }\r\n            },\r\n            async finishAudit () {\r\n                this.accountAudit.status = 'finished'\r\n                await this.updateAccountAudit({ oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId, data: this.accountAudit })\r\n                this.finishAuditDialog = false\r\n                console.log('finish audit')\r\n            },\r\n            async confirmAssurance (choice) {\r\n                console.log(choice)\r\n                this.accountAudit.assurance = choice\r\n                this.accountAudit.assurance_declaration = this.assuranceDeclaration\r\n                await this.updateAccountAudit({ oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId, data: this.accountAudit })\r\n            },\r\n            async refreshRecommendations () {\r\n                await this.fetchIndicators({ id: this.$route.params.EseaAccountId })\r\n            },\r\n            async demoReset () {\r\n                this.accountAudit.status = 'in progress'\r\n                this.accountAudit.assurance = ''\r\n                this.accountAudit.assurance_declaration = ''\r\n                this.provideAssuranceCard = false\r\n                this.declineAssuranceCard = false\r\n                await this.updateAccountAudit({ oId: this.$route.params.OrganisationId, eaId: this.$route.params.EseaAccountId, data: this.accountAudit })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .p-splitbutton {\r\n        width: 200px;\r\n    }\r\n</style>\r\n"]}]}