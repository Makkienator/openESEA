{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\SurveyGeneral.vue?vue&type=template&id=0dd4a27a&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\SurveyGeneral.vue","mtime":1707572265512},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGZvcm0gcmVmPSJmb3JtIiBjbGFzcz0icC10ZXh0LWxlZnQgcC1mbHVpZCBwLW0tNSBwLXAtNSBwLWlucHV0dGV4dC1sZyIgc3R5bGU9IndpZHRoOiAxMDAwcHg7IGhlaWdodDogNzB2aCI+DQogICAgICAgIDwhLS0ge3t1bnNhdmVkQ2hhbmdlc0RpYWxvZ319e3tsYXp5U3VydmV5fX0gPGhyPiB7e3N1cnZleX19IC0tPg0KICAgICAgICA8ZGl2IGNsYXNzPSJwLWZpZWxkIHAtbS0zIj4NCiAgICAgICAgICAgIDxsYWJlbCBmb3I9InN1cnZleW5hbWUiPlN1cnZleSBOYW1lPC9sYWJlbD4NCiAgICAgICAgICAgIDxJbnB1dFRleHQgcmVmPSJzdXJ2ZXluYW1lIiBpZD0ic3VydmV5bmFtZSIgdHlwZT0idGV4dCIgdi1tb2RlbC5sYXp5PSJsYXp5U3VydmV5Lm5hbWUiIEBibHVyPSJ2JC5sYXp5U3VydmV5Lm5hbWUuJHRvdWNoKCkiIDpjbGFzcz0ieydib3JkZXJsZXNzJzogbmFtZUVycm9ycy5sZW5ndGh9IiBsYXp5IC8+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWVycm9yIHAtdGV4dC1pdGFsaWMgcC1wdC0xIiB2LWZvcj0iZXJyb3IgaW4gbmFtZUVycm9ycyIgOmtleT0iZXJyb3IiPnt7ZXJyb3J9fTwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCBwLW0tMyI+DQogICAgICAgICAgICA8bGFiZWwgZm9yPSJzdXJ2ZXlyZXNwb25zZXR5cGUiPlJlc3BvbnNlIFR5cGU8L2xhYmVsPg0KICAgICAgICAgICAgPERyb3Bkb3duIGlkPSJzdXJ2ZXlyZXNwb25zZXR5cGUiIHYtbW9kZWw9ImxhenlTdXJ2ZXkucmVzcG9uc2VfdHlwZSIgOm9wdGlvbnM9InJlc3BvbnNlVHlwZUxpc3QiICBvcHRpb25MYWJlbD0idmFsdWUiIG9wdGlvblZhbHVlPSJ2YWx1ZSIgcGxhY2Vob2xkZXI9IlNlbGVjdCByZXNwb25zZSB0eXBlIiAgQGJsdXI9InYkLmxhenlTdXJ2ZXkucmVzcG9uc2VfdHlwZS4kdG91Y2goKSIgOmNsYXNzPSJ7J3AtaW52YWxpZCc6IHYkLmxhenlTdXJ2ZXkucmVzcG9uc2VfdHlwZS4kaW52YWxpZH0iLz4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9InAtZmllbGQgcC1tLTMiPg0KICAgICAgICAgICAgPGxhYmVsIGZvcj0ic3VydmV5bWludGhyZXNob2xkIj5NaW5pbWFsIFJlc3BvbnNlIFRocmVzaG9sZDwvbGFiZWw+DQogICAgICAgICAgICA8SW5wdXROdW1iZXIgaWQ9InN1cnZleW1pbnRocmVzaG9sZCIgc3VmZml4PSIlIiA6bWluPSIwIiA6bWF4PSIxMDAiIHYtbW9kZWwubGF6eT0ibGF6eVN1cnZleS5taW5fdGhyZXNob2xkIiBsYXp5ICBAYmx1cj0idiQubGF6eVN1cnZleS5taW5fdGhyZXNob2xkLiR0b3VjaCgpIiA6Y2xhc3M9InsnYm9yZGVybGVzcyc6IHYkLmxhenlTdXJ2ZXkubWluX3RocmVzaG9sZC4kaW52YWxpZH0iIC8+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJwLWZpZWxkIHAtbS0zIj4NCiAgICAgICAgICAgIDxsYWJlbCBmb3I9IndlbGNvbWluZ3RleHQiPldlbGNvbWluZyBUZXh0PC9sYWJlbD4NCiAgICAgICAgICAgIDxUZXh0YXJlYSBpZD0id2VsY29taW5ndGV4dCIgdi1tb2RlbD0ibGF6eVN1cnZleS53ZWxjb21lX3RleHQiIDphdXRvUmVzaXplPSJ0cnVlIiAvPg0KICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJwLWVycm9yIHAtdGV4dC1pdGFsaWMiIHYtZm9yPSJlcnJvciBpbiBkZXNjcmlwdGlvbkVycm9ycyIgOmtleT0iZXJyb3IiPnt7IGVycm9yIH19PC9kaXY+IC0tPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1maWVsZCBwLW0tMyI+DQogICAgICAgICAgICA8bGFiZWwgZm9yPSJjbG9zaW5ndGV4dCI+Q2xvc2luZyBUZXh0PC9sYWJlbD4NCiAgICAgICAgICAgIDxUZXh0YXJlYSBpZD0iY2xvc2luZ3RleHQiIHYtbW9kZWw9ImxhenlTdXJ2ZXkuY2xvc2luZ190ZXh0IiA6YXV0b1Jlc2l6ZT0idHJ1ZSIgLz4NCiAgICAgICAgICAgIDwhLS0gPGRpdiBjbGFzcz0icC1lcnJvciBwLXRleHQtaXRhbGljIiB2LWZvcj0iZXJyb3IgaW4gZGVzY3JpcHRpb25FcnJvcnMiIDprZXk9ImVycm9yIj57eyBlcnJvciB9fTwvZGl2PiAtLT4NCiAgICAgICAgPC9kaXY+DQogICAgPC9mb3JtPg0KICAgIDxEaWFsb2cgdi1tb2RlbDp2aXNpYmxlPSJ1bnNhdmVkQ2hhbmdlc0RpYWxvZyIgaGVhZGVyPSJVbnNhdmVkIENoYW5nZXMiIDptb2RhbD0idHJ1ZSIgOmRpc21pc3NhYmxlTWFzaz0idHJ1ZSI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbmZpcm1hdGlvbi1jb250ZW50Ij4NCiAgICAgICAgICAgIFRoaXMgcGFnZSBjb250YWlucyB1bnNhdmVkIGNoYW5nZXMsIGxlYXZpbmcgdGhlIHBhZ2Ugbm93IHdpbGwgZGVzdHJveSB0aGVzZS4gRG8geW91IHN0aWxsIHdpc2ggdG8gbGVhdmUgdGhlIHBhZ2U/DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8dGVtcGxhdGUgI2Zvb3Rlcj4NCiAgICAgICAgICAgIDxCdXR0b24gbGFiZWw9IlllcyIgaWNvbj0icGkgcGktY2hlY2siIGNsYXNzPSJwLWJ1dHRvbi10ZXh0IiBAY2xpY2s9InVuc2F2ZWRDaGFuZ2VzQ2hvaWNlKHRydWUpIiAvPg0KICAgICAgICAgICAgPEJ1dHRvbiBsYWJlbD0iTm8iIGljb249InBpIHBpLXRpbWVzIiBjbGFzcz0icC1idXR0b24tdGV4dCIgQGNsaWNrPSJ1bnNhdmVkQ2hhbmdlc0Nob2ljZShmYWxzZSkiLz4NCiAgICAgIDwvdGVtcGxhdGU+DQogICAgPC9EaWFsb2c+DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\method\\SurveyGeneral.vue"],"names":[],"mappings":";IAGI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtrG,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACptB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjlO,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACnF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAChH,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtjF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAChzpH,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAClG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/method/SurveyGeneral.vue","sourceRoot":"","sourcesContent":["// http://localhost:8081/method-wizard/2/surveys/5/settings/\r\n\r\n<template>\r\n    <form ref=\"form\" class=\"p-text-left p-fluid p-m-5 p-p-5 p-inputtext-lg\" style=\"width: 1000px; height: 70vh\">\r\n        <!-- {{unsavedChangesDialog}}{{lazySurvey}} <hr> {{survey}} -->\r\n        <div class=\"p-field p-m-3\">\r\n            <label for=\"surveyname\">Survey Name</label>\r\n            <InputText ref=\"surveyname\" id=\"surveyname\" type=\"text\" v-model.lazy=\"lazySurvey.name\" @blur=\"v$.lazySurvey.name.$touch()\" :class=\"{'borderless': nameErrors.length}\" lazy />\r\n            <div class=\"p-error p-text-italic p-pt-1\" v-for=\"error in nameErrors\" :key=\"error\">{{error}}</div>\r\n        </div>\r\n        <div class=\"p-field p-m-3\">\r\n            <label for=\"surveyresponsetype\">Response Type</label>\r\n            <Dropdown id=\"surveyresponsetype\" v-model=\"lazySurvey.response_type\" :options=\"responseTypeList\"  optionLabel=\"value\" optionValue=\"value\" placeholder=\"Select response type\"  @blur=\"v$.lazySurvey.response_type.$touch()\" :class=\"{'p-invalid': v$.lazySurvey.response_type.$invalid}\"/>\r\n        </div>\r\n        <div class=\"p-field p-m-3\">\r\n            <label for=\"surveyminthreshold\">Minimal Response Threshold</label>\r\n            <InputNumber id=\"surveyminthreshold\" suffix=\"%\" :min=\"0\" :max=\"100\" v-model.lazy=\"lazySurvey.min_threshold\" lazy  @blur=\"v$.lazySurvey.min_threshold.$touch()\" :class=\"{'borderless': v$.lazySurvey.min_threshold.$invalid}\" />\r\n        </div>\r\n        <div class=\"p-field p-m-3\">\r\n            <label for=\"welcomingtext\">Welcoming Text</label>\r\n            <Textarea id=\"welcomingtext\" v-model=\"lazySurvey.welcome_text\" :autoResize=\"true\" />\r\n            <!-- <div class=\"p-error p-text-italic\" v-for=\"error in descriptionErrors\" :key=\"error\">{{ error }}</div> -->\r\n        </div>\r\n        <div class=\"p-field p-m-3\">\r\n            <label for=\"closingtext\">Closing Text</label>\r\n            <Textarea id=\"closingtext\" v-model=\"lazySurvey.closing_text\" :autoResize=\"true\" />\r\n            <!-- <div class=\"p-error p-text-italic\" v-for=\"error in descriptionErrors\" :key=\"error\">{{ error }}</div> -->\r\n        </div>\r\n    </form>\r\n    <Dialog v-model:visible=\"unsavedChangesDialog\" header=\"Unsaved Changes\" :modal=\"true\" :dismissableMask=\"true\">\r\n        <div class=\"confirmation-content\">\r\n            This page contains unsaved changes, leaving the page now will destroy these. Do you still wish to leave the page?\r\n        </div>\r\n        <template #footer>\r\n            <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"unsavedChangesChoice(true)\" />\r\n            <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"unsavedChangesChoice(false)\"/>\r\n      </template>\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex'\r\n    import Dropdown from 'primevue/dropdown'\r\n    import { RESPONSE_TYPE } from '../../utils/constants'\r\n    import { isEqual, cloneDeep } from 'lodash'\r\n    import { required, maxLength, between } from '../../utils/validators'\r\n    import HandleValidationErrors from '../../utils/HandleValidationErrors'\r\n    import useVuelidate from '@vuelidate/core'\r\n\r\n    export default {\r\n        components: {\r\n            Dropdown\r\n        },\r\n        setup: () => ({ v$: useVuelidate() }),\r\n        validations: {\r\n            lazySurvey: {\r\n                name: { required, maxLength: maxLength(120) },\r\n                min_threshold: { required, between: between(0, 100) },\r\n                response_type: { required }\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                lazySurvey: cloneDeep(this.survey) || {},\r\n                response_type: RESPONSE_TYPE,\r\n                unsavedChangesDialog: false,\r\n                discardUnsavedChanges: false,\r\n                to: null\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('survey', ['survey', 'errors', 'isSaved']),\r\n            // Only allow response types that are specified in the utils/constants file\r\n            responseTypeList () {\r\n                return Object.entries(this.response_type).map(([text, value]) => ({ text, value }))\r\n            },\r\n            nameErrors () {\r\n                return HandleValidationErrors(\r\n                    this.v$.lazySurvey.name,\r\n                    this.errors.name\r\n                )\r\n            }\r\n        },\r\n        watch: {\r\n            survey (val) {\r\n                if (isEqual(this.lazySurvey, val)) { return }\r\n                this.lazySurvey = cloneDeep(val)\r\n            },\r\n            lazySurvey: {\r\n                handler (val) {\r\n                    setTimeout(() => {\r\n                        if (this.v$.$invalid) { return }\r\n                        if (isEqual(this.survey, val)) { return }\r\n                            this.updateSurveyForm(val)\r\n                    }, 200)\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        beforeRouteLeave (to, from, next) {\r\n        if ((this.v$.$invalid || !this.isSaved) & !this.discardUnsavedChanges) {\r\n            this.unsavedChangesDialog = true\r\n            this.to = to\r\n        } else {\r\n            next(true)\r\n        }\r\n    },\r\n        mounted () {\r\n            this.lazySurvey = cloneDeep(this.survey)\r\n            if (!this.lazySurvey.name.length) {\r\n                this.$refs.surveyname.$el.focus()\r\n            }\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['updateSurvey']),\r\n            unsavedChangesChoice (choice) {\r\n                this.unsavedChangesDialog = false\r\n                this.discardUnsavedChanges = choice\r\n                if (choice) {\r\n                    this.$router.push(this.to)\r\n                }\r\n            },\r\n            // 'Asynchronous + Await' to avoid double POSTING a Survey\r\n            async updateSurveyForm (val) {\r\n                await this.updateSurvey({ mId: this.$route.params.id, survey: val })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .p-inputtext {\r\n        border: none;\r\n        border-bottom: 1px solid lightgrey;\r\n    }\r\n    .borderless {\r\n        border-bottom: 1px solid red;\r\n    }\r\n</style>\r\n"]}]}