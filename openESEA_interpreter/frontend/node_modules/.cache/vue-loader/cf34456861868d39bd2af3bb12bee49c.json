{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\network\\NetworkCampaign.vue?vue&type=style&index=0&id=1122dfb3&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\network\\NetworkCampaign.vue","mtime":1707572265515},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLnAtc3BsaXRidXR0b24gew0KICAgICAgICB3aWR0aDogMjAwcHg7DQogICAgfQ0KICAgIC5jdXN0b20tbWFya2VyIHsNCiAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgd2lkdGg6IDJyZW07DQogICAgICAgIGhlaWdodDogMnJlbTsNCiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgICAgIGNvbG9yOiAjZmZmZmZmOw0KICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7DQogICAgICAgIHotaW5kZXg6IDE7DQogICAgfQ0KICAgIC5wLXRhYnZpZXcgPj4+IC5wLXRhYnZpZXctcGFuZWxzIHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0Y4RjlGQTsNCiAgICAgICAgYm9yZGVyOiAxcHggZG90dGVkIGxpZ2h0Z3JleTsNCiAgICB9DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\network\\NetworkCampaign.vue"],"names":[],"mappings":";IA8UI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACd;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/network/NetworkCampaign.vue","sourceRoot":"","sourcesContent":["// http://localhost:8081/network/2/campaigns/1/\r\n\r\n<template>\r\n        <div class=\"card p-mx-5 p-mb-5\">\r\n            <div class=\"p-d-flex p-jc-between p-m-2\">\r\n                <div>\r\n                {{ dateFixer(campaign.open_survey_date, 'MMMM Do YYYY') }}\r\n                </div>\r\n                <div>\r\n                {{ dateFixer(campaign.close_survey_date, 'MMMM Do YYYY') }}\r\n                </div>\r\n            </div>\r\n            <ProgressBar :value=\"timeline\" :showValue=\"true\">\r\n                <div v-if=\"campaigntimeleft > 0\"> {{campaigntimeleft}} days left </div>\r\n                <div v-else>This campaign has finished</div>\r\n            </ProgressBar>\r\n        </div>\r\n    <TabView style=\"height: 1000px\">\r\n        <TabPanel header=\"Method\">\r\n            <h4>Method: <span class=\"p-text-light p-text-italic\">'{{method.name}}'</span></h4>\r\n            <h4>Description: <span class=\"p-text-light p-text-italic\">'{{method.description}}'</span></h4>\r\n            <Button label=\"Go to Method\" @click=\"goToMethod\" />\r\n\r\n        </TabPanel>\r\n        <TabPanel header=\"ESEA Accounts\" style=\"background-color: black;\">\r\n            <DataTable :value=\"eseaAccounts\" datakey=\"id\" :rows=\"10\" :paginator=\"true\" :rowHover=\"true\" v-model:filters=\"filters\" filterDisplay=\"menu\" selectionMode=\"single\" @row-select=\"goToEseaAccount\" class=\"p-datatable-gridlines p-datatable-striped p-datatable-sm\"\r\n            paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[10,25,50]\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n                <template #header>\r\n                    <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n                        <h5 class=\"p-m-0\">ESEA Accounts</h5>\r\n                        <span class=\"p-input-icon-left\">\r\n                            <i class=\"pi pi-search\" />\r\n                            <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\" />\r\n                        </span>\r\n                        <div>\r\n                            <Button label=\"Tool Menu\" @click=\"toggle\" :disabled=\"false\" />\r\n                            <Menu id=\"overlay_menu\" ref=\"menu\" :model=\"items\" :popup=\"true\" />\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <Column field=\"organisation_name\" header=\"Organisation\" sortable>\r\n                    <template #filter=\"{filterModel}\">\r\n                        <InputText type=\"text\" v-model=\"filterModel.value\" class=\"p-column-filter\" placeholder=\"Search by name\"/>\r\n                    </template>\r\n                </Column>\r\n                <Column field=\"sufficient_responses\" header=\"Sufficient Responses\" sortable />\r\n                <Column field=\"all_respondents\" header=\"Stakeholders\" sortable />\r\n                <Column field=\"all_responses.length\" header=\"Responses\" sortable />\r\n                <Column field=\"response_rate\" header=\"Response Rate\" sortable :showFilterMatchModes=\"false\" style=\"min-width: 10rem\">\r\n                        <template #body=\"{data}\">\r\n                            <ProgressBar :value=\"data.response_rate\" :showValue=\"true\" />\r\n                        </template>\r\n                        <template #filter=\"{filterModel}\">\r\n                            <Slider v-model=\"filterModel.value\" range class=\"p-m-3\"></Slider>\r\n                            <div class=\"p-d-flex p-ai-center p-jc-between p-px-2\">\r\n                                <span>{{filterModel.value ? filterModel.value[0] : 0}}</span>\r\n                                <span>{{filterModel.value ? filterModel.value[1] : 100}}</span>\r\n                            </div>\r\n                        </template>\r\n                </Column>\r\n                <Column header=\"Report\" headerStyle=\"width: 4rem; text-align: center\" bodyStyle=\"text-align: center; overflow: visible\">\r\n                    <template #body=\"data\">\r\n                        <Button @click=\"goToReport(data)\" icon=\"pi pi-file-pdf\" :class=\"data.sufficient_responses? 'p-button-success' : 'p-button-danger'\"></Button>\r\n                    </template>\r\n                </Column>\r\n            </DataTable>\r\n        </TabPanel>\r\n        <TabPanel header=\"Audit\">\r\n            <DataTable :value=\"campaignAudits\" dataKey=\"id\" selectionMode=\"single\" showGridlines autoLayout\r\n            :paginator=\"true\" :rows=\"10\" :filters=\"filters\" paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\"\r\n            :rowsPerPageOptions=\"[5,10,25]\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} products\" class=\"p-datatable-striped\">\r\n             <template #header>\r\n                    <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n                        <h3 class=\"p-m-0\">Audit Process</h3>\r\n                        <div>\r\n                            <Button label=\"New audit process\" @click=\"startAuditDialog = !startAuditDialog\" />\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            <Column field=\"name\" header=\"Name\" />\r\n            <Column field=\"status\" header=\"Status\" sortable />\r\n        </Datatable>\r\n            <!-- Validation Closing Date: {{ dateFixer(campaign.close_validation_date, 'MMMM Do YYYY') }} -->\r\n        </TabPanel>\r\n        <TabPanel header=\"Settings\" :disabled=\"!permission\">\r\n            <div class=\"p-grid\">\r\n                <div class=\"p-col-6\" style=\"min-width: 600px; border-right: 1px solid lightgrey;\">\r\n                <campaign-update-form />\r\n                </div>\r\n                <div class=\"p-col-6 p-p-5\" style=\"min-width: 600px;\">\r\n                    <DataTable :value=\"eseaAccounts\" datakey=\"id\" :rows=\"10\" :paginator=\"true\" :rowHover=\"true\" v-model:filters=\"filters\" filterDisplay=\"menu\" v-model:selection=\"selectedOrganisations\"  selectionMode=\"multiple\" class=\"p-datatable-gridlines p-datatable-striped p-datatable-sm\"\r\n                    paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink CurrentPageReport RowsPerPageDropdown\" :rowsPerPageOptions=\"[10,25,50]\"\r\n                    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\">\r\n                        <template #header>\r\n                            <div class=\"p-d-flex p-jc-between p-ai-center\">\r\n                                <h5 class=\"p-m-0\">ESEA Accounts</h5>\r\n                                <span class=\"p-input-icon-left\">\r\n                                    <i class=\"pi pi-search\" />\r\n                                    <InputText v-model=\"filters['global'].value\" placeholder=\"Keyword Search\" />\r\n                                </span>\r\n                                <div>\r\n                                    <Button @click=\"addableOrganisations()\" label=\"Add\" class=\"p-button-success p-mr-2\" />\r\n                                    <Button @click=\"removeOrganisationsDialog = true\" label=\"Remove\" class=\"p-button-danger\" />\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <Column field=\"organisation_name\"></Column>\r\n                    </DataTable>\r\n                </div>\r\n            </div>\r\n        </TabPanel>\r\n    </TabView>\r\n\r\n    <Dialog v-model:visible=\"removeOrganisationsDialog\" style=\"width: 500px\" header=\"Removal confirmation\" :modal=\"true\" dismissableMask=\"true\">\r\n        <div v-if=\"selectedOrganisations.length\">\r\n            <span>Are you sure you want to <b>remove</b> these from your campaign?</span>\r\n            <div v-for=\"item in selectedOrganisations\" :key=item.name class=\"p-shadow-2 p-mt-5 p-p-3\">{{item.organisation_name}}</div>\r\n        </div>\r\n        <div v-else>\r\n            You haven't selected any organisations.\r\n        </div>\r\n        <template #footer>\r\n            <div v-if=\"selectedOrganisations.length\">\r\n                <Button label=\"No\" icon=\"pi pi-times\" class=\"p-button-text\" @click=\"removeOrganisationsDialog = false\"/>\r\n                <Button label=\"Yes\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"removeOrganisations()\" />\r\n            </div>\r\n            <div v-else>\r\n                <Button label=\"Ok\" class=\"p-button-text\" @click=\"removeOrganisationsDialog = false\" />\r\n                </div>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"addOrganisationsDialog\" style=\"width: 800px\" contentStyle=\"height: 300px\" :modal=\"true\" dismissableMask=\"true\">\r\n        <div class=\"p-grid\">\r\n            <MultiSelect id=\"organisations\" v-model=\"chosenOrganisations\" :options=\"organisations\" optionLabel=\"name\" placeholder=\"Select Organisations\" :filter=\"true\" class=\"multiselect-custom p-col-12 p-mt-2\">\r\n                <template #value=\"slotProps\">\r\n                    <div v-for=\"option in slotProps.value\" :key=\"option.id\">\r\n                        <div>{{option.name}}</div>\r\n                    </div>\r\n                    <template v-if=\"!slotProps.value || slotProps.value.length === 0\"> <!-- v-if=\"!slotProps.value || slotProps.value.length === 0\" -->\r\n                        Select Organisations\r\n                    </template>\r\n                </template>\r\n                <template #option=\"slotProps\">\r\n                    <div class=\"country-item\">\r\n                        <div>{{slotProps.option.name}}</div>\r\n                    </div>\r\n                </template>\r\n            </MultiSelect>\r\n        </div>\r\n        <template #footer>\r\n                <Button label=\"Add Selected Organisations\" icon=\"pi pi-plus\" @click=\"addOrganisations()\"/>\r\n                <Button label=\"Cancel\" icon=\"pi pi-check\" class=\"p-button-text\" @click=\"addOrganisationsDialog = false\" />\r\n        </template>\r\n    </Dialog>\r\n\r\n    <Dialog v-model:visible=\"startAuditDialog\" style=\"width: 500px\" header=\"New Audit Process\" :modal=\"true\" :dismissableMask=\"true\">\r\n        <audit-form @closedialog=\"startAuditDialog=false\" type=\"batch\" />\r\n    </Dialog>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import { FilterMatchMode, FilterOperator } from 'primevue/api'\r\n    import ProgressBar from 'primevue/progressbar'\r\n    import Slider from 'primevue/slider'\r\n    import MultiSelect from 'primevue/multiselect'\r\n    import dateFixer from '../../utils/datefixer'\r\n    import moment from 'moment'\r\n    import CampaignUpdateForm from '../../components/forms/CampaignUpdateForm.vue'\r\n    import AuditForm from '../../components/forms/AuditForm'\r\n\r\n    export default {\r\n        components: {\r\n            ProgressBar,\r\n            Slider,\r\n            MultiSelect,\r\n            CampaignUpdateForm,\r\n            AuditForm\r\n        },\r\n        data () {\r\n            return {\r\n                filters: {\r\n                    global: { value: null, matchMode: FilterMatchMode.CONTAINS },\r\n                    organisation: { value: null, matchMode: FilterMatchMode.STARTS_WITH },\r\n                    /* organisation: { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] }, */\r\n                    'country.name': { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.STARTS_WITH }] },\r\n                    representative: { value: null, matchMode: FilterMatchMode.IN },\r\n                    date: { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.DATE_IS }] },\r\n                    balance: { operator: FilterOperator.AND, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\r\n                    status: { operator: FilterOperator.OR, constraints: [{ value: null, matchMode: FilterMatchMode.EQUALS }] },\r\n                    all_response_rate: { value: null, matchMode: FilterMatchMode.BETWEEN },\r\n                    verified: { value: null, matchMode: FilterMatchMode.EQUALS }\r\n                },\r\n                reminder: 1,\r\n                // Tool menu, for additional features\r\n                items: [\r\n                    {\r\n                        label: '- Send Message',\r\n                        command: () => {\r\n                            console.log('Send Message')\r\n                            this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 })\r\n                        }\r\n                    },\r\n                    {\r\n                        label: '- Send Reminder',\r\n                        command: () => { this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 }) }\r\n                    },\r\n                    {\r\n                        label: '- Sample Test',\r\n                        command: () => { this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 }) }\r\n                    },\r\n                    {\r\n                        label: '- Add Organisations',\r\n                        command: () => { this.$toast.add({ severity: 'success', summary: 'Updated', detail: 'Data Updated', life: 3000 }) }\r\n                    },\r\n                    {\r\n                        label: '- Delete Organisations',\r\n                        command: () => { this.$toast.add({ severity: 'warn', summary: 'Delete', detail: 'Data Deleted', life: 3000 }) }\r\n                    }\r\n                ],\r\n                campaignAudits: [\r\n                    { name: 'Network audit 2020', status: 'in progress' }\r\n\r\n                ],\r\n\r\n                selectedOrganisations: [],\r\n                removeOrganisationsDialog: false,\r\n                chosenOrganisations: [],\r\n                addOrganisationsDialog: false,\r\n                startAuditDialog: false\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('network', ['network']),\r\n            ...mapState('campaign', ['campaign']),\r\n            ...mapState('eseaAccount', ['eseaAccounts', 'eseaAccount']),\r\n            ...mapState('method', ['methods', 'method']),\r\n            ...mapState('organisation', ['organisations']),\r\n            timelinedates () {\r\n                var datearr = []\r\n                datearr.push({ date: this.campaign.open_survey_date, name: 'openingdate' })\r\n                datearr.push({ date: this.campaign.close_survey_date, name: 'closingdate' })\r\n                return datearr\r\n            },\r\n            timeline () {\r\n                const jsondate = new Date().toJSON()\r\n                var currentdate = moment(jsondate, 'YYYY-MM-DD')\r\n                var admission = moment(this.campaign.open_survey_date, 'YYYY-MM-DD')\r\n                var discharge = moment(this.campaign.close_survey_date, 'YYYY-MM-DD')\r\n                var progress = (admission.diff(currentdate, 'days') / admission.diff(discharge, 'days')) * 100\r\n                return progress\r\n            },\r\n            campaigntimeleft () {\r\n                const jsondate = new Date().toJSON()\r\n                var currentdate = moment(jsondate, 'YYYY-MM-DD')\r\n                var discharge = moment(this.campaign.close_survey_date, 'YYYY-MM-DD')\r\n                var daysleft = (discharge.diff(currentdate, 'days'))\r\n                return daysleft\r\n            },\r\n            permission () {\r\n                if (this.network.accesLevel) {\r\n                    const accesLevel = this.network.accesLevel\r\n                    if (accesLevel === 'admin' || accesLevel === 'network admin') {\r\n                        return true\r\n                    }\r\n                }\r\n                return false\r\n            }\r\n        },\r\n        created () {\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('eseaAccount', ['fetchEseaAccounts', 'setEseaAccount', 'createEseaAccount', 'deleteEseaAccount']),\r\n            ...mapActions('method', ['fetchMethod']),\r\n            ...mapActions('organisation', ['fetchOrganisations', 'setOrganisation']),\r\n            dateFixer,\r\n            async initialize () {\r\n                this.boolChoice = { name: 'Public', value: true }\r\n                await this.fetchEseaAccounts({ query: `?campaign=${this.$route.params.CampaignId}` })\r\n                await this.fetchMethod({ id: this.campaign.method })\r\n                await this.fetchOrganisations\r\n            },\r\n            toggle (event) {\r\n                this.$refs.menu.toggle(event)\r\n            },\r\n            async addableOrganisations () {\r\n                await this.fetchOrganisations({ query: `?network=${this.$route.params.NetworkId}&excludecampaign=${this.$route.params.CampaignId}` })\r\n                this.addOrganisationsDialog = true\r\n            },\r\n            // Add Organisation(s) to the campaign\r\n            async addOrganisations () {\r\n                if (this.chosenOrganisations.length) {\r\n                    for (var organisation of this.chosenOrganisations) {\r\n                        var newEseaAccount = { organisation: organisation.id, method: this.campaign.method, campaign: this.campaign.id }\r\n                        await this.createEseaAccount({ oId: organisation.id, data: newEseaAccount })\r\n                    }\r\n                }\r\n                this.addOrganisationsDialog = false\r\n                this.initialize()\r\n            },\r\n            // Remove Organisation(s) from the campaign\r\n            async removeOrganisations () {\r\n                for (var eseaAccount of this.selectedOrganisations) {\r\n                    console.log(eseaAccount)\r\n                    await this.deleteEseaAccount({ oId: eseaAccount.organisation, id: eseaAccount.id })\r\n                }\r\n                this.removeOrganisationsDialog = false\r\n                this.initialize()\r\n            },\r\n            async goToEseaAccount (event) {\r\n                await this.setEseaAccount(event.data)\r\n                this.$router.push({ name: 'networkeseaaccount', params: { cId: this.campaign.id, EseaAccountId: event.data.id } })\r\n            },\r\n            async goToReport (event) {\r\n                await this.setEseaAccount(event.data)\r\n                await this.setOrganisation({ id: event.data.organisation })\r\n                this.$router.push({ name: 'esea-account-report', params: { OrganisationId: `${event.data.organisation}`, EseaAccountId: event.data.id } })\r\n                console.log(event.data)\r\n            },\r\n            async goToMethod () {\r\n                this.$router.push({ name: 'newmethoddetails', params: { id: this.campaign.method } })\r\n                /* this.$router.push({ name: 'methoddetails', params: { id: this.campaign.method } }) */\r\n            },\r\n            createNewCampaignAudit () {\r\n                print()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .p-splitbutton {\r\n        width: 200px;\r\n    }\r\n    .custom-marker {\r\n        display: flex;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        align-items: center;\r\n        justify-content: center;\r\n        color: #ffffff;\r\n        border-radius: 50%;\r\n        z-index: 1;\r\n    }\r\n    .p-tabview >>> .p-tabview-panels {\r\n        background-color: #F8F9FA;\r\n        border: 1px dotted lightgrey;\r\n    }\r\n</style>\r\n\r\n/* ::v-deep(.p-timeline-event-content)\r\n::v-deep(.p-timeline-event-opposite) {\r\n    line-height: 1;\r\n}\r\n@media screen and (max-width: 960px) {\r\n    ::v-deep(.customized-timeline) {\r\n            .p-timeline-event:nth-child(even) {\r\n                flex-direction: row !important;\r\n\r\n                .p-timeline-event-content {\r\n                    text-align: left !important;\r\n                }\r\n            }\r\n\r\n            .p-timeline-event-opposite {\r\n                flex: 0;\r\n            }\r\n\r\n            .p-card {\r\n                margin-top: 1rem;\r\n            }\r\n        }\r\n} */\r\n"]}]}