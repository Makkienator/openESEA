{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue?vue&type=template&id=02804e48","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue","mtime":1707572265527},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBzdHlsZT0id2lkdGg6IDEwMCU7Ij4NCiAgICAgICAgPFByb2dyZXNzU3Bpbm5lciB2LWlmPSJsb2FkaW5nICYmICFmYWlsZWRMb2FkIiAvPg0KICAgICAgICA8ZGl2IHYtZWxzZS1pZj0ibG9hZGluZyAmJiBmYWlsZWRMb2FkIiBjbGFzcz0icC10ZXh0LWl0YWxpYyI+VEhlIFN1cnZleSBjb3VsZCBub3QgYmUgbG9hZGVkITwvZGl2PiA8IS0tIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZGRlZGM4OyIgLS0+DQogICAgICAgIDxkaXYgdi1lbHNlLWlmPSIhc3VydmV5UmVzcG9uc2UuZmluaXNoZWQiIGNsYXNzPSJwLWQtZmxleCBwLWdyaWQgcC1qYy1jZW50ZXIgcC1tLTAiID4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtY29sLTEyIHAtZ3JpZCBwLWpjLWNlbnRlciBwLXAtMyI+DQogICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJwLWNvbC0xMiBwLW0tMCI+e3tzdXJ2ZXkubmFtZX19PC9oMT4NCiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9InAtY29sLTEyIHAtbS0wIj57e3N1cnZleS5kZXNjcmlwdGlvbn19PC9oMz4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC00IHAtdGV4dC1sZWZ0Ij4NCiAgICAgICAgICAgICAgICAgICAgPHA+PHNwYW4gY2xhc3M9InAtdGV4dC1ib2xkIj5SZXNwb25kZW50Ojwvc3Bhbj4ge3tzdXJ2ZXlSZXNwb25zZS5yZXNwb25kZW50fX0gPGJyPiA8c3BhbiBjbGFzcz0icC10ZXh0LWJvbGQiPk9yZ2FuaXNhdGlvbjo8L3NwYW4+IHt7c3VydmV5UmVzcG9uc2Uub3JnYW5pc2F0aW9ufX0gPC9wPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8IS0tIHt7c3VydmV5UmVzcG9uc2V9fSAtLT4NCiAgICAgICAgICAgIDxkaXYgdi1pZj0idGhpcy5zdXJ2ZXkuc2VjdGlvbnMubGVuZ3RoIiBjbGFzcz0icC1ncmlkIHAtY29sLTYgcC1tLTUiIHN0eWxlPSJib3JkZXItcmFkaXVzOiAxMHB4Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9InNlY3Rpb25OdW1iZXIgPT09IDAiIGNsYXNzPSJwLWNvbC0xMiBwLXRleHQtbGVmdCBwLXAtNSIgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDEwcHg7IGJhY2tncm91bmQtY29sb3I6ICNGMUYxRjE7Ij48aDM+e3tzdXJ2ZXkud2VsY29tZV90ZXh0fX08L2gzPjwvZGl2Pg0KICAgICAgICAgICAgICAgIDxEaXZpZGVyIC8+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtNiBwLXRleHQtbGVmdCBwLXRleHQtYm9sZCI+U2VjdGlvbiB7eyBzZWN0aW9uTnVtYmVyICsgMSB9fSBvZiB7eyB0b3RhbFNlY3Rpb25zLmxlbmd0aCB9fTwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtY29sLTYgcC10ZXh0LXJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgPFByb2dyZXNzQmFyIDp2YWx1ZT0icHJvZ3Jlc3MgKyAwLjEiPnt7cHJvZ3Jlc3N9fSUgY29tcGxldGVkPC9Qcm9ncmVzc0Jhcj48L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC0xMiBwLXRleHQtbGVmdCI+PGgzPlNlY3Rpb246ICd7e2N1cnJlbnRTZWN0aW9uLnRpdGxlfX0nPC9oMz48L2Rpdj4NCiAgICAgICAgICAgICAgICA8IS0tIHt7YW5zd2Vyc319IC0tPg0KICAgICAgICAgICAgICAgIDxzZWN0aW9uLWNvbXBvbmVudCBjbGFzcz0icC1jb2wtMTIgcC1teS0yIg0KICAgICAgICAgICAgICAgICAgICB2LWZvcj0iaXRlbSwgaW5kZXggaW4gY3VycmVudFNlY3Rpb24ubWVyZ2VkUXVlc3Rpb25zQW5kVGV4dEZyYWdtZW50cyINCiAgICAgICAgICAgICAgICAgICAgdGFiaW5kZXg9IjAiDQogICAgICAgICAgICAgICAgICAgIDprZXk9Iml0ZW0uaWQiDQogICAgICAgICAgICAgICAgICAgIDppdGVtPSJpdGVtIg0KICAgICAgICAgICAgICAgICAgICA6YW5zd2VyPSJhbnN3ZXJzW2l0ZW0uaWRdIg0KICAgICAgICAgICAgICAgICAgICA6YWN0aXZlPSJhY3RpdmVRdWVzdGlvbiA9PT0gKGluZGV4KSINCiAgICAgICAgICAgICAgICAgICAgOnJlZnJlc2g9InJlZnJlc2giDQogICAgICAgICAgICAgICAgICAgIEBpbnB1dD0idXBkYXRlQW5zd2VyKGl0ZW0uZGlyZWN0X2luZGljYXRvclswXS5pZCwgaXRlbS5pZCwgJGV2ZW50KSINCiAgICAgICAgICAgICAgICAgICAgQGZvY3VzPSJ0b2dnbGVBY3RpdmUoaW5kZXgpIg0KICAgICAgICAgICAgICAgICAgICBAZm9jdXNjaGVja2luZz0idG9nZ2xlQWN0aXZlKGluZGV4KSINCiAgICAgICAgICAgICAgICAgICAgQGJsdXI9InRvZ2dsZUFjdGl2ZSINCiAgICAgICAgICAgICAgICAvPg0KICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iKHNlY3Rpb25OdW1iZXIgKyAxKSA9PT0gdG90YWxTZWN0aW9ucy5sZW5ndGgiIGNsYXNzPSJwLWNvbC0xMiBwLXRleHQtbGVmdCBwLXAtNSIgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDEwcHg7IGJhY2tncm91bmQtY29sb3I6ICNGMUYxRjE7Ij48aDM+e3tzdXJ2ZXkuY2xvc2luZ190ZXh0fX08L2gzPjwvZGl2Pg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtZ3JpZCBwLWNvbC0xMiBwLW0tMCBwLXB4LTAiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC02IHAtdGV4dC1sZWZ0IHAtcGwtMCI+DQogICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uIGxhYmVsPSJQcmV2aW91cyBTZWN0aW9uIiBjbGFzcz0icC1idXR0b24tcmFpc2VkIiA6ZGlzYWJsZWQ9InNlY3Rpb25OdW1iZXIgPT09IDAiIEBjbGljaz0icHJldmlvdXNTZWN0aW9uIiAvPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMyBwLXRleHQtcmlnaHQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiBsYWJlbD0iU2F2ZSBmb3IgTm93IiBjbGFzcz0icC1idXR0b24tcHJpbWFyeSBwLWJ1dHRvbi1yYWlzZWQiIEBjbGljaz0ic2F2ZVN1cnZleSIgOmRpc2FibGVkPSJ0cnVlIiAvPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMyBwLXRleHQtcmlnaHQgcC1wci0wIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdi1pZj0ic2VjdGlvbk51bWJlciArIDEgPCB0b3RhbFNlY3Rpb25zLmxlbmd0aCIgbGFiZWw9Ik5leHQgU2VjdGlvbiIgY2xhc3M9InAtYnV0dG9uLXJhaXNlZCIgc3R5bGU9IndpZHRoOiAxMDAlOyIgQGNsaWNrPSJuZXh0U2VjdGlvbiIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdi1lbHNlIGxhYmVsPSJGaW5pc2ggU3VydmV5IiBjbGFzcz0icC1jb2wgcC1idXR0b24tc3VjY2VzcyBwLWJ1dHRvbi1yYWlzZWQgcC1idXR0b24tc20iIHN0eWxlPSJ3aWR0aDogMTAwJTsiIEBjbGljaz0iZmluaXNoU3VydmV5IiAvPg0KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGgxIHYtZWxzZT5UaGlzIHN1cnZleSBoYXMgbm8gc2VjdGlvbnMgdG8gZGlzcGxheSE8L2gxPg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8RGlhbG9nIHYtbW9kZWw6dmlzaWJsZT0ibWlzc2VkUXVlc3Rpb25zRGlhbG9nIiA6c3R5bGU9Int3aWR0aDogJzQ1MHB4J30iIGhlYWRlcj0iTWlzc2luZyBBbnN3ZXJzIiA6bW9kYWw9InRydWUiPg0KICAgICAgICAgICAgPGkgY2xhc3M9InBpIHBpLXN0YXIgcC1tci0zIiBzdHlsZT0iZm9udC1zaXplOiAxLjVyZW0iIC8+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0icC10ZXh0LWxlZnQiPllvdSBuZWVkIHRvIGZpbGwgaW4gdGhlIGZvbGxvd2luZyBhbnN3ZXJzIHRvIGJlIGFibGUgdG8gc2VuZCB5b3VyIHN1cnZleSByZXNwb25zZTo8L3NwYW4+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJwLWdyaWQgcC1tLTIiPg0KICAgICAgICAgICAgICAgIDxkaXYgdi1mb3I9InF1ZXN0aW9uIGluIG1pc3NlZFF1ZXN0aW9ucyIgOmtleT0icXVlc3Rpb24iIGNsYXNzPSJwLWNvbC0xMiI+DQogICAgICAgICAgICAgICAgICAgIDxCdXR0b24gOmxhYmVsPSJgUXVlc3Rpb246ICcke3F1ZXN0aW9uLm5hbWV9J2AiIHN0eWxlPSJ3aWR0aDogMTAwJTsiIEBjbGljaz0iZ29Ub1F1ZXN0aW9uKHF1ZXN0aW9uKSI+IDwvQnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8dGVtcGxhdGUgI2Zvb3Rlcj4NCiAgICAgICAgICAgICAgICA8QnV0dG9uIGxhYmVsPSJPayIgY2xhc3M9InAtYnV0dG9uLXRleHQiIEBjbGljaz0ibWlzc2VkUXVlc3Rpb25zRGlhbG9nID0gZmFsc2UiLz4NCiAgICAgICAgICAgIDwvdGVtcGxhdGU+DQogICAgICAgIDwvRGlhbG9nPg0KICAgIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyFill.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChhF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;ogBACzggBAChK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;ggBAC/G,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvB,CAAC;ggBACzL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACnoBACvH,CAAC,CAAC,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;woBAChH,CAAC,CAAC,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpwBAChoBAChJ,CAAC,CAAC,CAAC,CAAC,CAAC;gBACT,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5G,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACxD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClH,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrgBAClH,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/survey/SurveyFill.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div style=\"width: 100%;\">\r\n        <ProgressSpinner v-if=\"loading && !failedLoad\" />\r\n        <div v-else-if=\"loading && failedLoad\" class=\"p-text-italic\">THe Survey could not be loaded!</div> <!-- style=\"background-color: #ddedc8;\" -->\r\n        <div v-else-if=\"!surveyResponse.finished\" class=\"p-d-flex p-grid p-jc-center p-m-0\" >\r\n            <div class=\"p-col-12 p-grid p-jc-center p-p-3\">\r\n                <h1 class=\"p-col-12 p-m-0\">{{survey.name}}</h1>\r\n                <h3 class=\"p-col-12 p-m-0\">{{survey.description}}</h3>\r\n                <div class=\"p-col-4 p-text-left\">\r\n                    <p><span class=\"p-text-bold\">Respondent:</span> {{surveyResponse.respondent}} <br> <span class=\"p-text-bold\">Organisation:</span> {{surveyResponse.organisation}} </p>\r\n                </div>\r\n            </div>\r\n            <!-- {{surveyResponse}} -->\r\n            <div v-if=\"this.survey.sections.length\" class=\"p-grid p-col-6 p-m-5\" style=\"border-radius: 10px\">\r\n                <div v-if=\"sectionNumber === 0\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.welcome_text}}</h3></div>\r\n                <Divider />\r\n                <div class=\"p-col-6 p-text-left p-text-bold\">Section {{ sectionNumber + 1 }} of {{ totalSections.length }}</div>\r\n                <div class=\"p-col-6 p-text-right\">\r\n                    <ProgressBar :value=\"progress + 0.1\">{{progress}}% completed</ProgressBar></div>\r\n                <div class=\"p-col-12 p-text-left\"><h3>Section: '{{currentSection.title}}'</h3></div>\r\n                <!-- {{answers}} -->\r\n                <section-component class=\"p-col-12 p-my-2\"\r\n                    v-for=\"item, index in currentSection.mergedQuestionsAndTextFragments\"\r\n                    tabindex=\"0\"\r\n                    :key=\"item.id\"\r\n                    :item=\"item\"\r\n                    :answer=\"answers[item.id]\"\r\n                    :active=\"activeQuestion === (index)\"\r\n                    :refresh=\"refresh\"\r\n                    @input=\"updateAnswer(item.direct_indicator[0].id, item.id, $event)\"\r\n                    @focus=\"toggleActive(index)\"\r\n                    @focuschecking=\"toggleActive(index)\"\r\n                    @blur=\"toggleActive\"\r\n                />\r\n                <div v-if=\"(sectionNumber + 1) === totalSections.length\" class=\"p-col-12 p-text-left p-p-5\" style=\"border-radius: 10px; background-color: #F1F1F1;\"><h3>{{survey.closing_text}}</h3></div>\r\n                <div class=\"p-grid p-col-12 p-m-0 p-px-0\">\r\n                    <div class=\"p-col-6 p-text-left p-pl-0\">\r\n                        <Button label=\"Previous Section\" class=\"p-button-raised\" :disabled=\"sectionNumber === 0\" @click=\"previousSection\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right\">\r\n                        <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised\" @click=\"saveSurvey\" :disabled=\"true\" />\r\n                    </div>\r\n                    <div class=\"p-col-3 p-text-right p-pr-0\">\r\n                        <Button v-if=\"sectionNumber + 1 < totalSections.length\" label=\"Next Section\" class=\"p-button-raised\" style=\"width: 100%;\" @click=\"nextSection\" />\r\n                        <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%;\" @click=\"finishSurvey\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <h1 v-else>This survey has no sections to display!</h1>\r\n        </div>\r\n\r\n        <Dialog v-model:visible=\"missedQuestionsDialog\" :style=\"{width: '450px'}\" header=\"Missing Answers\" :modal=\"true\">\r\n            <i class=\"pi pi-star p-mr-3\" style=\"font-size: 1.5rem\" />\r\n            <span class=\"p-text-left\">You need to fill in the following answers to be able to send your survey response:</span>\r\n            <div class=\"p-grid p-m-2\">\r\n                <div v-for=\"question in missedQuestions\" :key=\"question\" class=\"p-col-12\">\r\n                    <Button :label=\"`Question: '${question.name}'`\" style=\"width: 100%;\" @click=\"goToQuestion(question)\"> </Button>\r\n                </div>\r\n            </div>\r\n            <template #footer>\r\n                <Button label=\"Ok\" class=\"p-button-text\" @click=\"missedQuestionsDialog = false\"/>\r\n            </template>\r\n        </Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import SectionComponent from '../../components/survey/SectionComponent'\r\n    import ProgressBar from 'primevue/progressbar'\r\n    import ProgressSpinner from 'primevue/progressspinner'\r\n\r\n    export default {\r\n        components: {\r\n            SectionComponent,\r\n            ProgressBar,\r\n            ProgressSpinner\r\n        },\r\n        data () {\r\n            return {\r\n                questionresponses: null,\r\n                loading: true,\r\n                failedload: false,\r\n                sectionNumber: 0,\r\n                progressBarValue: 0,\r\n                activeQuestion: null,\r\n                missedQuestions: [],\r\n                missedQuestionsDialog: false,\r\n                refresh: false\r\n\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponse', 'surveyResponses']),\r\n            ...mapState('eseaAccount', ['eseaAccount']),\r\n            ...mapState('question', ['questions']),\r\n            answers () {\r\n                if (this.loading) { return null } else {\r\n                var answers = {}\r\n                // console.log(']]]]', this.surveyResponse)\r\n\t\t\t\tthis.surveyResponse.question_responses.forEach((response) => {\r\n\t\t\t\t\t// if (answer.question === 36) { console.log('vallueee', answer) }\r\n                     const relevantquestion = this.questions.find(q => q.id === response.question)\r\n                    if (relevantquestion.uiComponent === 'checkbox') {\r\n                        answers[response.question] = response.values\r\n                    } else {\r\n                        answers[response.question] = response.value\r\n                    }\r\n\t\t\t\t})\r\n                // console.log(')))', answers)\r\n                return answers\r\n                }\r\n            },\r\n            currentSection () {\r\n                const section = this.survey.sections[this.sectionNumber]\r\n                const mergedQuestionsAndTextFragments = section?.questions.concat(section.text_fragments)\r\n                const sortedComponents = mergedQuestionsAndTextFragments?.sort((a, b) => (a.order > b.order) ? 1 : -1)\r\n                section.mergedQuestionsAndTextFragments = sortedComponents\r\n                return section\r\n            },\r\n            totalSections () {\r\n                const sectionList = []\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    sectionList.push(this.survey.sections[i].id)\r\n                }\r\n                // for (const section in this.survey?.sections) { totalSections = totalSections + this.survey?.topics[topic].sub_topics.length }\r\n\r\n                return sectionList\r\n            },\r\n            progress () {\r\n                var progress\r\n                if (this.sectionNumber === 0) { return 0 }\r\n                progress = ((this.sectionNumber + 1) / this.totalSections.length) * 100\r\n                return progress\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            surveyResponse: {\r\n                handler: function (newValue) {\r\n                    this.refresh = !this.refresh\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        created () {\r\n            console.log('eee')\r\n            setTimeout(() => { this.failedLoad = true }, 10000)\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponse', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse', 'setSurveyResponse']),\r\n            ...mapActions('question', ['fetchQuestions']),\r\n            async initialize () {\r\n                // Unique Token can be a 'pk', 'survey=survey_pk' or 'survey response token' (more on this in the backend, survey_responseview..py in the retrieve function.\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                console.log('++++', this.eseaAccount, this.surveyResponse.question_responses)\r\n                await this.fetchSurvey({ mId: this.surveyResponse.method, id: this.surveyResponse.survey })\r\n                console.log(this.survey.name)\r\n                await this.fetchQuestions({ mId: this.surveyResponse.method, SuId: this.surveyResponse.survey, SeId: 0 })\r\n                this.loading = false\r\n                console.log('eee', this.surveyResponse.question_responses)\r\n                if (this.surveyResponse.finished) {\r\n                    console.log(this.surveyResponse.survey_audit)\r\n                    if (this.surveyResponse.survey_audit) {\r\n                        print()\r\n                        console.log('Go to read only version of survey-fill for multiple respondent auditing purposes.')\r\n                        // this.$router.push({ name: 'survey-audit' })\r\n                    }\r\n                    this.$router.push({ name: 'survey-thank-you' })\r\n                }\r\n                this.questionresponses = this.surveyResponse.question_responses\r\n            },\r\n            previousSection () {\r\n                if (this.sectionNumber > 0) {\r\n                    this.sectionNumber--\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            nextSection () {\r\n                if (this.sectionNumber + 1 < this.totalSections.length) {\r\n                    this.sectionNumber++\r\n                    this.activeQuestion = null\r\n                }\r\n            },\r\n            toggleActive (question) {\r\n                if (Number.isInteger(question)) {\r\n                    this.activeQuestion = question\r\n                } else {\r\n                    this.activeQuestion = null\r\n                    }\r\n            },\r\n            goToQuestion (question) {\r\n                this.sectionNumber = this.totalSections.indexOf(question.section)\r\n                console.log(this.sectionNumber)\r\n                this.missedQuestionsDialog = false\r\n            },\r\n            saveSurvey () {\r\n                // TODO // popup Dialog: Survey is automatically saved.\r\n            },\r\n            async finishSurvey () {\r\n                console.log('cc')\r\n                await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation || 0, eaId: this.eseaAccount?.id || 0, id: this.$route.params.uniquetoken })\r\n                this.checkRequiredQuestions = true\r\n                this.missedQuestions = []\r\n                await this.checkMandatoryFields()\r\n                console.log('reee')\r\n                if (!this.missedQuestions.length) {\r\n                this.surveyResponse.finished = true\r\n                await this.updateResponse()\r\n                this.$router.push({ name: 'survey-thank-you' })\r\n                } else {\r\n                    this.missedQuestionsDialog = true\r\n                }\r\n            },\r\n            updateAnswer (id, questionId, answer) {\r\n                if (answer.answer === null) { return }\r\n                console.log('====>', answer, id, questionId, this.questionresponses)\r\n                var responseIndex = this.questionresponses.findIndex(response => response.question === questionId)\r\n            //     console.log(responseIndex)\r\n                var questionResponse = null\r\n                if (responseIndex > -1) {\r\n                    questionResponse = this.questionresponses.splice(responseIndex, 1)[0]\r\n                } else {\r\n                    questionResponse = { question: questionId, direct_indicator_id: id, values: [], value: null }\r\n                }\r\n                if (answer.datatype === 'multiplechoice') {\r\n                    questionResponse.values = answer.answer\r\n                } else {\r\n                    questionResponse.value = answer.answer\r\n                }\r\n                this.questionresponses.push(questionResponse)\r\n                this.surveyResponse.question_responses = this.questionresponses\r\n\r\n                if (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey) {\r\n                    console.log('clearly not the same')\r\n                }\r\n                var SurveyId = parseInt(this.$route.params.uniquetoken.replace('survey=', ''))\r\n                console.log(SurveyId === this.surveyResponse.survey)\r\n                if ((this.$route.params.uniquetoken !== this.surveyResponse.token) && (SurveyId !== this.surveyResponse.survey) && (parseInt(this.$route.params.uniquetoken) !== this.surveyResponse.survey)) { // (this.$route.params.uniquetoken !== 'accountant')\r\n                    console.log('Not possible')\r\n                    return\r\n                }\r\n                this.updateResponse()\r\n            },\r\n            async updateResponse () {\r\n                console.log('dddd')\r\n                await this.updateSurveyResponse({\r\n                    oId: this.eseaAccount?.organisation,\r\n                    eaId: this.eseaAccount?.id,\r\n                    token: this.surveyResponse.id, // this.$route.params.uniquetoken,\r\n                    surveyResponse: {\r\n                        ...this.surveyResponse\r\n                    }\r\n                })\r\n            },\r\n            checkMandatoryFields () {\r\n                for (let i = 0; i < this.survey.sections.length; i++) {\r\n                    for (let j = 0; j < this.survey.sections[i].questions.length; j++) {\r\n                        if (this.survey.sections[i].questions[j].isMandatory) {\r\n                            const answer = this.surveyResponse.question_responses.find(response => response.question === this.survey.sections[i].questions[j].id)\r\n\r\n                            if (!answer || (!answer.values.length && !answer.value)) {\r\n                                this.survey.sections[i].questions[j].required = true\r\n                                this.missedQuestions.push(this.survey.sections[i].questions[j])\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}