{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\SurveyTreeSideBar.vue?vue&type=style&index=0&id=7f663c04&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\SurveyTreeSideBar.vue","mtime":1707572265286},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741014585012},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLnF1ZXN0aW9uczpob3ZlciB7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFRUVFRUU7DQogICAgfQ0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\components\\SurveyTreeSideBar.vue"],"names":[],"mappings":";IAkII,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/components/SurveyTreeSideBar.vue","sourceRoot":"","sourcesContent":["// Used by SurveyCreation.vue\r\n\r\n<template>\r\n    <div>\r\n        <div class=\"p-d-flex p-mt-2\">\r\n            <div v-for=\"item in libraryComponents\" :key=\"item\" class=\"p-col-4\" style=\"font-size: 20px;\" :style=\"(item === activeComponentType) ? 'border-bottom: 3px solid  #00695C; font-weight: bold;':'border-bottom: 3px solid lightgrey;'\" @click=\"activeComponentType = item\">\r\n                {{item}}\r\n            </div>\r\n        </div>\r\n        <div v-if=\"activeComponentType === 'Indicators'\" class=\"p-d-flex p-mt-2\" style=\"\">\r\n            <div v-for=\"item in ComponentOptions\" :key=\"item\" class=\"p-col-4\" style=\"font-size: 14px;\" :style=\"(item === activeComponentOption) ? 'border-bottom: 1px solid #00695C; font-size;':'border-bottom: 1px solid lightgrey;'\" @click=\"activeComponentOption = item\">\r\n                {{item}}\r\n            </div>\r\n        </div>\r\n        <div v-if=\"activeComponentType === 'Indicators'\" class=\"p-text-left\">\r\n            <div class=\"p-m-1\" style=\"height: 50px;\">\r\n                <!-- <div v-if=\"!searchbarIndicators\" class=\"p-px-3 p-d-flex p-jc-between p-ai-center\" @click=\"searchbarIndicators = !searchbarIndicators\" @blur=\"searchbarIndicators = false\">\r\n                    <h3>Direct Indicators</h3><i class=\"pi pi-search\" />\r\n                </div> -->\r\n                <span class=\"p-input-icon-left\" style=\"width: 100%\">\r\n                    <i class=\"pi pi-search\" /><InputText ref=\"searchbarQuestions\" v-model=\"searchIndicator\" @blur=\"checksSearchbarContentIndicator\" placeholder=\"Search Direct Indicators...\" style=\"width: 100%;\" />\r\n                </span>\r\n            </div>\r\n            <ProgressSpinner v-if=\"loaded\" class=\"p-d-flex p-jc-center\"/>\r\n            <div v-else style=\"height: calc(100vh - 390px); overflow-y: scroll;\">\r\n            <div v-for=\"indicator in filteredDirectIndicators\" :key=\"indicator.id\" class=\"directIndicators p-m-2\" style=\"font-size: 16px; padding: 10px; overflow: hidden; border: 1px solid lightgrey; cursor: grab;\"  @dragstart=\"startDrag($event, indicator)\" @dragover.prevent @dragenter.prevent :draggable=\"true\">\r\n                {{indicator.key}}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"activeComponentType === 'Questions'\" class=\"p-text-left\">\r\n            <div class=\"p-m-1\" style=\"height: 50px;\">\r\n                <!-- <div v-if=\"!searchbarQuestions\" class=\"p-px-3 p-d-flex p-jc-between p-ai-center\" @click=\"searchbarQuestions = !searchbarQuestions\">\r\n                    <h3>Questions</h3><i class=\"pi pi-search\" />\r\n                </div> -->\r\n                <span class=\"p-input-icon-left\" style=\"width: 100%\">\r\n                    <i class=\"pi pi-search\" /><InputText ref=\"searchbarQuestions\" v-model=\"searchQuestion\" @blur=\"checkSearchbarContentQuestion\" placeholder=\"Search Questions...\" style=\"width: 100%;\" />\r\n                </span>\r\n            </div>\r\n            <div style=\"height: calc(100vh - 350px); overflow-y: scroll;\">\r\n                <div v-for=\"question in filteredQuestions\" :key=\"question.id\" class=\"questions p-px-3 p-m-2\" style=\"font-size: 16px; padding: 10px; overflow: hidden; border: 1px solid lightgrey; cursor: grab;\" :style=\"(question.id === activeQuestion?.id) ? 'background-color: #EEEEEE;':''\" :draggable=\"true\">\r\n                    {{question.name}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"activeComponentType === 'Sections'\" class=\"p-text-left\">\r\n            <div class=\"p-m-1\" style=\"height: 50px;\">\r\n                <!-- <div v-if=\"!searchbarQuestions\" class=\"p-px-3 p-d-flex p-jc-between p-ai-center\" @click=\"searchbarQuestions = !searchbarQuestions\">\r\n                    <h3>Questions</h3><i class=\"pi pi-search\" />\r\n                </div> -->\r\n                <span class=\"p-input-icon-left\" style=\"width: 100%\">\r\n                    <i class=\"pi pi-search\" /><InputText ref=\"searchbarSections\" v-model=\"searchSection\" @blur=\"checkSearchbarContentQuestion\" placeholder=\"Search Sections...\" style=\"width: 100%;\" />\r\n                </span>\r\n            </div>\r\n            <div style=\"height: calc(100vh - 350px); overflow-y: scroll;\">\r\n                <div v-for=\"section in filteredSections\" :key=\"section.id\" class=\"questions p-px-3 p-m-2\" style=\"font-size: 16px; padding: 10px; overflow: hidden; border: 1px solid lightgrey; cursor: grab;\" :style=\"(section.id === activeSection?.id) ? 'background-color: #EEEEEE;':''\" :draggable=\"true\">\r\n                    {{section.title}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\nimport ProgressSpinner from 'primevue/progressspinner'\r\n\r\nexport default {\r\n    components: {\r\n        ProgressSpinner\r\n    },\r\n    data () {\r\n        return {\r\n            libraryComponents: ['Indicators', 'Questions', 'Sections'],\r\n            ComponentOptions: ['Unused', 'Used', 'All'],\r\n            activeComponentType: 'Indicators',\r\n            activeComponentOption: 'Unused',\r\n            searchbarQuestions: false,\r\n            searchQuestion: '',\r\n            searchbarIndicators: false,\r\n            searchIndicator: '',\r\n            searchSection: '',\r\n            loaded: true\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState('question', ['questions', 'updatedList']),\r\n        ...mapState('directIndicator', ['directIndicators']),\r\n        ...mapState('section', ['sections']),\r\n        filteredSections () {\r\n            return this.sections.filter((section) => { return (section.title.toLowerCase().includes(this.searchSection.toLowerCase())) })\r\n        },\r\n        filteredQuestions () {\r\n            return this.questions.filter((question) => {\r\n                return (question.name.toLowerCase().includes(this.searchQuestion.toLowerCase()))\r\n            })\r\n        },\r\n        filteredDirectIndicators () {\r\n            const directindicators = this.directIndicators.filter((indicator) => { return (indicator.key?.toLowerCase().includes(this.searchIndicator.toLowerCase())) })\r\n            if (this.activeComponentOption === 'Unused') {\r\n                return directindicators.filter(indicator => !(indicator.question > 0))\r\n            } else if (this.activeComponentOption === 'Used') {\r\n                return directindicators.filter(indicator => indicator.question > 0)\r\n            } else {\r\n                return directindicators\r\n            }\r\n        }\r\n    },\r\n    async mounted () {\r\n        await this.fetchDirectIndicators({ mId: this.$route.params.id })\r\n        console.log('is it being mounted again?')\r\n        this.loaded = false\r\n    },\r\n    methods: {\r\n        ...mapActions('directIndicator', ['fetchDirectIndicators']),\r\n        startDrag (evt, item) {\r\n            console.log(item)\r\n            evt.dataTransfer.dropEffect = 'move'\r\n            evt.dataTransfer.effectAllowed = 'move'\r\n            if (typeof item === 'object') {\r\n                item = JSON.stringify(item)\r\n            }\r\n            evt.dataTransfer.setData('draggedItem', item)\r\n            this.directIndicators = this.directIndicators.filter(indicator => indicator.id !== item.id)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .questions:hover {\r\n        background-color: #EEEEEE;\r\n    }\r\n</style>\r\n"]}]}