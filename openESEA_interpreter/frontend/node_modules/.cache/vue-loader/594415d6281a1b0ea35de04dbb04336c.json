{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\Login.vue?vue&type=style&index=0&id=1ecd471f&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\Login.vue","mtime":1707572265529},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741014587743},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1741014602245},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1741014592996},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741014585012},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLmJvcmRlcmxlc3Mgew0KICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmVkOw0KICAgIH0NCiAgICAubGluayB7DQogICAgICAgIHRleHQtZGVjb3JhdGlvbjogTm9uZTsNCiAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgfQ0KICAgIC5saW5rOmhvdmVyIHsNCiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7DQogICAgfQ0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\user\\Login.vue"],"names":[],"mappings":";IA2FI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC;IACA,CAAC,CAAC,CAAC,CAAC,EAAE;QACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/user/Login.vue","sourceRoot":"","sourcesContent":["http://localhost:8080/login/\r\n\r\n<template>\r\n    <unauthenticated-base>\r\n        <form v-on:submit.prevent=\"login\" class=\"p-grid p-fluid p-shadow-10 p-px-5 p-pb-5\" style=\"background-color: white; border-radius: 3px;\">\r\n            <h1 class=\"p-col-12\" style=\"border-bottom: 1px solid #00695C;\">Login</h1>\r\n            <Message v-if=\"incorrectAuth\" severity=\"error\" class=\"p-col-12\">Invalid credentials. Please try again!</Message>\r\n            <div class=\"p-col-12 p-field\">\r\n                <span class=\"p-float-label\">\r\n                    <InputText type=\"text\" id=\"username\" v-model=\"username\" :class=\"{'borderless': v$.username.$invalid && submitted}\"/>\r\n                    <label for=\"username\">Username</label>\r\n                </span>\r\n                <div v-if=\"v$.username.required.$invalid && submitted\" class=\"p-error p-text-italic\">Username is required</div>\r\n            </div>\r\n            <div class=\"p-col-12 p-field\">\r\n                <span class=\"p-float-label\">\r\n                    <Password id=\"password\" v-model=\"password\" :feedback=\"false\" :class=\"{'borderless': v$.password.$invalid && submitted}\" />\r\n                    <label for=\"password\">Password</label>\r\n                </span>\r\n                <div v-if=\"v$.password.required.$invalid && submitted\" class=\"p-error p-text-italic\">Password is required</div>\r\n            </div>\r\n            <Button type=\"submit\" value=\"submit\" class=\"p-jc-center p-button-success\" style=\"background-color: #00695C; border: 0px solid #00695C\">Login</Button>\r\n        </form>\r\n        <div class=\"p-grid p-mt-5\" style=\"color: white;\">\r\n            <router-link to=\"/account-recovery\" class=\"link p-col-12\">Can't Login?</router-link>\r\n            <router-link to=\"/register\" class=\"link p-col-12\">Sign up for an Account</router-link>\r\n        </div>\r\n    </unauthenticated-base>\r\n</template>\r\n\r\n<script>\r\n    import { mapState, mapActions } from 'vuex'\r\n    import { required } from 'vuelidate/lib/validators'\r\n    import useVuelidate from '@vuelidate/core'\r\n    import HandleValidationErrors from '../../utils/HandleValidationErrors'\r\n    import Message from 'primevue/message'\r\n    import UnauthenticatedBase from '@/components/UnauthenticatedBase'\r\n\r\n    export default {\r\n        name: 'login',\r\n        components: {\r\n            UnauthenticatedBase,\r\n            Message\r\n        },\r\n        data () {\r\n            return {\r\n                username: 'admin', // Filled in for easy login during development, should be removed before deployment!\r\n                password: 'admin',\r\n                submitted: false,\r\n                incorrectAuth: false\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('authentication', ['accessToken', 'currentuser']),\r\n            // Returns name & password errors that result both from Backend + Frontend validation\r\n            nameErrors () {\r\n                return HandleValidationErrors(this.v$.username)\r\n            },\r\n            passwordErrors () {\r\n                return HandleValidationErrors(this.v$.password)\r\n            }\r\n        },\r\n        setup: () => ({ v$: useVuelidate() }),\r\n        validations: {\r\n            username: { required },\r\n            password: { required }\r\n        },\r\n        created () {\r\n        },\r\n        methods: {\r\n            ...mapActions('authentication', ['userLogin']),\r\n            async login () {\r\n                this.submitted = true\r\n                if (this.v$.$invalid) { return }\r\n\r\n                await this.userLogin({\r\n                    username: this.username,\r\n                    password: this.password\r\n                })\r\n                .then(() => {\r\n                    this.$router.push({ name: 'home' })\r\n                })\r\n                .catch(() => {\r\n                    this.incorrectAuth = true\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .borderless {\r\n        border-bottom: 1px solid red;\r\n    }\r\n    .link {\r\n        text-decoration: None;\r\n        color: white;\r\n        font-size: 14px;\r\n    }\r\n    .link:hover {\r\n        text-decoration: underline;\r\n    }\r\n</style>\r\n"]}]}