{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyResponse.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyResponse.vue","mtime":1707572265527},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IHsgbWFwQWN0aW9ucywgbWFwU3RhdGUgfSBmcm9tICd2dWV4Jw0KICAgIGltcG9ydCBTdXJ2ZXlRdWVzdGlvbiBmcm9tICcuLi8uLi9jb21wb25lbnRzL3N1cnZleS9TdXJ2ZXlRdWVzdGlvbicNCiAgICBpbXBvcnQgUHJvZ3Jlc3NCYXIgZnJvbSAncHJpbWV2dWUvcHJvZ3Jlc3NiYXInDQoNCiAgICBleHBvcnQgZGVmYXVsdCB7DQogICAgICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgICAgIFN1cnZleVF1ZXN0aW9uLA0KICAgICAgICAgICAgUHJvZ3Jlc3NCYXINCiAgICAgICAgfSwNCiAgICAgICAgZGF0YSAoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgdG9waWNOdW1iZXI6IDAsDQogICAgICAgICAgICBwcm9ncmVzc0JhclZhbHVlOiAwLA0KICAgICAgICAgICAgY3VycmVudGFuc3dlcjogbnVsbCwNCiAgICAgICAgICAgIGNoZWNrQW5zd2VyUmVxdWlyZWQ6IGZhbHNlDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGNvbXB1dGVkOiB7DQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgnbWV0aG9kJywgWydtZXRob2QnXSksDQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgnc3VydmV5JywgWydzdXJ2ZXknXSksDQogICAgICAgICAgICAuLi5tYXBTdGF0ZSgnc3VydmV5UmVzcG9uc2UnLCBbJ3N1cnZleVJlc3BvbnNlcycsICdzdXJ2ZXlSZXNwb25zZSddKSwNCiAgICAgICAgICAgIGN1cnJlbnRUb3BpYyAoKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3VydmV5Py50b3BpY3NbMF0uc3ViX3RvcGljc1t0aGlzLnRvcGljTnVtYmVyXQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIHRvdGFsVG9waWNzICgpIHsNCiAgICAgICAgICAgICAgICBsZXQgdG90YWxUb3BpY3MgPSAwDQogICAgICAgICAgICAgICAgZm9yIChjb25zdCB0b3BpYyBpbiB0aGlzLnN1cnZleT8udG9waWNzKSB7DQogICAgICAgICAgICAgICAgICAgIHRvdGFsVG9waWNzID0gdG90YWxUb3BpY3MgKyB0aGlzLnN1cnZleT8udG9waWNzW3RvcGljXS5zdWJfdG9waWNzLmxlbmd0aA0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm4gdG90YWxUb3BpY3MNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBhbnN3ZXJzICgpIHsNCiAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXJzID0ge30NCiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdXJ2ZXlSZXNwb25zZT8uaWQgIT09IHRoaXMuc3VydmV5LmlkICYmIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25fcmVzcG9uc2VzKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25fcmVzcG9uc2VzLmZvckVhY2goKGFuc3dlcikgPT4gew0KICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2Vyc1thbnN3ZXIuZGlyZWN0X2luZGljYXRvcl9pZF0gPSBhbnN3ZXIudmFsdWUNCiAgICAgICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuIGFuc3dlcnMNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgY3JlYXRlZCAoKSB7DQogICAgICAgICAgICB0aGlzLmluaXRpYWxpemUoKQ0KICAgICAgICB9LA0KICAgICAgICBtZXRob2RzOiB7DQogICAgICAgICAgICAuLi5tYXBBY3Rpb25zKCdzdXJ2ZXknLCBbJ2ZldGNoU3VydmV5J10pLA0KICAgICAgICAgICAgLi4ubWFwQWN0aW9ucygnc3VydmV5UmVzcG9uc2UnLCBbJ2ZldGNoU3VydmV5UmVzcG9uc2VzJywgJ3NldFN1cnZleVJlc3BvbnNlJywgJ3VwZGF0ZVN1cnZleVJlc3BvbnNlJywgJ2NyZWF0ZVN1cnZleVJlc3BvbnNlJ10pLA0KICAgICAgICAgICAgYXN5bmMgaW5pdGlhbGl6ZSAoKSB7DQogICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaFN1cnZleSh7IG1JZDogdGhpcy5tZXRob2QuaWQsIGlkOiB0aGlzLnN1cnZleS5pZCB9KQ0KICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMuZmV0Y2hTdXJ2ZXlSZXNwb25zZXMoeyBtSWQ6IHRoaXMubWV0aG9kLmlkLCBzSWQ6IHRoaXMuc3VydmV5LmlkLCBPaUQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5PcmdhbmlzYXRpb25JZCwgcXVlcnk6IGA/b3JnYW5pc2F0aW9uPSR7dGhpcy4kcm91dGUucGFyYW1zLk9yZ2FuaXNhdGlvbklkfWAgfSkNCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN1cnZleVJlc3BvbnNlcykNCiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdXJ2ZXlSZXNwb25zZXMubGVuZ3RoKSB7DQogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjaGVjaycpDQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3VydmV5UmVzcG9uc2UodGhpcy5zdXJ2ZXlSZXNwb25zZXNbMF0pDQogICAgICAgICAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2hlY2snKQ0KICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlU3VydmV5UmVzcG9uc2UoeyBtSWQ6IHRoaXMubWV0aG9kLmlkLCBzSWQ6IHRoaXMuc3VydmV5LmlkLCBPcmdhbmlzYXRpb25JZDogdGhpcy4kcm91dGUucGFyYW1zLk9yZ2FuaXNhdGlvbklkIH0pDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgcHJvZ3Jlc3MgKHBhZ2V0dXJuKSB7DQogICAgICAgICAgICAgICAgdmFyIGludGVydmFsID0gMTAwIC8gdGhpcy50b3RhbFRvcGljcw0KICAgICAgICAgICAgICAgIGlmIChwYWdldHVybiA9PT0gJ2JhY2snKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3NCYXJWYWx1ZSAtPSBpbnRlcnZhbA0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZiAocGFnZXR1cm4gPT09ICduZXh0Jykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2dyZXNzQmFyVmFsdWUgKz0gaW50ZXJ2YWwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgcHJldmlvdXNUb3BpYyAoKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMudG9waWNOdW1iZXIgPiAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMudG9waWNOdW1iZXIgLT0gMQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnByb2dyZXNzKCdiYWNrJykNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgbmV4dFRvcGljICgpIHsNCiAgICAgICAgICAgICAgICBpZiAodGhpcy50b3BpY051bWJlciArIDEgPCB0aGlzLnRvdGFsVG9waWNzKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBbnN3ZXJSZXF1aXJlZCA9ICF0aGlzLmNoZWNrQW5zd2VyUmVxdWlyZWQNCiAgICAgICAgICAgICAgICAgICAgdGhpcy50b3BpY051bWJlciArPSAxDQogICAgICAgICAgICAgICAgICAgIHRoaXMucHJvZ3Jlc3MoJ25leHQnKQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBzYXZlU3VydmV5ICgpIHsNCiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZVN1cnZleVJlc3BvbnNlKHsgbUlkOiB0aGlzLm1ldGhvZC5pZCwgc0lkOiB0aGlzLnN1cnZleS5pZCwgc3VydmV5UmVzcG9uc2U6IHsgLi4udGhpcy5zdXJ2ZXlSZXNwb25zZSB9IH0pDQogICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAnb3JnYW5pc2F0aW9uc3VydmV5cycsIHBhcmFtczogeyBPcmdhbmlzYXRpb25JZDogdGhpcy4kcm91dGUucGFyYW1zLk9yZ2FuaXNhdGlvbklkIH0gfSkNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBmaW5pc2hTdXJ2ZXkgKCkgew0KICAgICAgICAgICAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UuZmluaXNoZWQgPSB0cnVlDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTdXJ2ZXlSZXNwb25zZSh7IG1JZDogdGhpcy5tZXRob2QuaWQsIHNJZDogdGhpcy5zdXJ2ZXkuaWQsIHN1cnZleVJlc3BvbnNlOiB7IC4uLnRoaXMuc3VydmV5UmVzcG9uc2UgfSB9KQ0KICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogJ21ldGhvZC1zdXJ2ZXktcmVzdWx0JywgcGFyYW1zOiB7IE9yZ2FuaXNhdGlvbklkOiB0aGlzLiRyb3V0ZS5wYXJhbXMuT3JnYW5pc2F0aW9uSWQsIGlkOiB0aGlzLm1ldGhvZC5pZCwgc3VydmV5SWQ6IHRoaXMuc3VydmV5LmlkIH0gfSkNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB1cGRhdGVBbnN3ZXIgKGlkLCBhbnN3ZXIpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRhbnN3ZXIgPSBhbnN3ZXINCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmN1cnJlbnRhbnN3ZXIpDQogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVTdXJ2ZXlSZXNwb25zZSh7DQogICAgICAgICAgICAgICAgICAgIG1JZDogdGhpcy5tZXRob2QuaWQsDQogICAgICAgICAgICAgICAgICAgIHNJZDogdGhpcy5zdXJ2ZXkuaWQsDQogICAgICAgICAgICAgICAgICAgIHN1cnZleVJlc3BvbnNlOiB7DQogICAgICAgICAgICAgICAgICAgICAgICAuLi50aGlzLnN1cnZleVJlc3BvbnNlLA0KICAgICAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb25fcmVzcG9uc2VzOiBbDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4udGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbl9yZXNwb25zZXMsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBkaXJlY3RfaW5kaWNhdG9yX2lkOiBpZCwgdmFsdWU6IGFuc3dlciB9DQogICAgICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNvbXBsZXRlZCAoY29tcGxldGVkKSB7DQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJz4+JywgY29tcGxldGVkKQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyResponse.vue"],"names":[],"mappings":"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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3E;gBACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC;YACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBACP,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;gBACjB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;oBACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/survey/SurveyResponse.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"p-d-flex p-grid p-jc-center p-m-0\">\r\n        <div class=\"p-col-12 p-p-3\" style=\"background-color: #dcedc8;\">\r\n            <h1>{{survey.name}}</h1>\r\n            <h3>{{survey.description}}</h3>\r\n        </div>\r\n        <div class=\"p-grid p-col-6 p-p-3\" style=\"background-color: white; border-radius: 10px;\">\r\n            <div class=\"p-col-6 p-text-left\">Topic {{ topicNumber + 1}} of {{totalTopics}}</div>\r\n            <div class=\"p-col-6 p-text-right\"><ProgressBar :value=\"progressBarValue\">{{progressBarValue}}% completed</ProgressBar></div>\r\n            <div class=\"p-col-12 p-text-left\"><h3>Topic: '{{currentTopic.name}}'</h3></div>\r\n            <survey-question class=\"p-col-12\"\r\n            v-for=\"question in currentTopic.questions\"\r\n            :key=\"question.id\"\r\n            :question=\"question\"\r\n            :answer=\"answers[question.id]\"\r\n            :checkanswerrequired=\"checkAnswerRequired\"\r\n            @input=\"updateAnswer(question.id, $event)\"\r\n            @completed=\"completed\"\r\n            />\r\n\r\n        <div class=\"p-col-6 p-text-left\">\r\n            <Button label=\"Previous Topic\" class=\"p-button-raised p-button-sm\" :disabled=\"topicNumber === 0\" @click=\"previousTopic\"/>\r\n        </div>\r\n        <div class=\"p-col-3 p-text-right\">\r\n            <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised p-button-sm\" @click=\"saveSurvey\" />\r\n        </div>\r\n        <div class=\"p-col-3 p-text-right\">\r\n            <Button v-if=\"topicNumber + 1 < totalTopics\" label=\"Next Topic\" class=\"p-button-raised p-button-sm\" style=\"width: 100%\" @click=\"nextTopic\" />\r\n            <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%\" @click=\"finishSurvey\" />\r\n        </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import SurveyQuestion from '../../components/survey/SurveyQuestion'\r\n    import ProgressBar from 'primevue/progressbar'\r\n\r\n    export default {\r\n        components: {\r\n            SurveyQuestion,\r\n            ProgressBar\r\n        },\r\n        data () {\r\n            return {\r\n            topicNumber: 0,\r\n            progressBarValue: 0,\r\n            currentanswer: null,\r\n            checkAnswerRequired: false\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('method', ['method']),\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponses', 'surveyResponse']),\r\n            currentTopic () {\r\n                return this.survey?.topics[0].sub_topics[this.topicNumber]\r\n            },\r\n            totalTopics () {\r\n                let totalTopics = 0\r\n                for (const topic in this.survey?.topics) {\r\n                    totalTopics = totalTopics + this.survey?.topics[topic].sub_topics.length\r\n                }\r\n                return totalTopics\r\n            },\r\n            answers () {\r\n                const answers = {}\r\n                if (this.surveyResponse?.id !== this.survey.id && this.surveyResponse.question_responses) {\r\n                    this.surveyResponse.question_responses.forEach((answer) => {\r\n                        answers[answer.direct_indicator_id] = answer.value\r\n                    })\r\n                }\r\n                return answers\r\n            }\r\n        },\r\n        created () {\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponses', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse']),\r\n            async initialize () {\r\n                await this.fetchSurvey({ mId: this.method.id, id: this.survey.id })\r\n                await this.fetchSurveyResponses({ mId: this.method.id, sId: this.survey.id, OiD: this.$route.params.OrganisationId, query: `?organisation=${this.$route.params.OrganisationId}` })\r\n                console.log(this.surveyResponses)\r\n                if (this.surveyResponses.length) {\r\n                    console.log('check')\r\n                    this.setSurveyResponse(this.surveyResponses[0])\r\n                    return\r\n                }\r\n                console.log('check')\r\n                this.createSurveyResponse({ mId: this.method.id, sId: this.survey.id, OrganisationId: this.$route.params.OrganisationId })\r\n            },\r\n            progress (pageturn) {\r\n                var interval = 100 / this.totalTopics\r\n                if (pageturn === 'back') {\r\n                    this.progressBarValue -= interval\r\n                }\r\n                if (pageturn === 'next') {\r\n                    this.progressBarValue += interval\r\n                }\r\n            },\r\n            previousTopic () {\r\n                if (this.topicNumber > 0) {\r\n                    this.topicNumber -= 1\r\n                    this.progress('back')\r\n                }\r\n            },\r\n            nextTopic () {\r\n                if (this.topicNumber + 1 < this.totalTopics) {\r\n                    this.checkAnswerRequired = !this.checkAnswerRequired\r\n                    this.topicNumber += 1\r\n                    this.progress('next')\r\n                }\r\n            },\r\n            saveSurvey () {\r\n                this.updateSurveyResponse({ mId: this.method.id, sId: this.survey.id, surveyResponse: { ...this.surveyResponse } })\r\n                this.$router.push({ name: 'organisationsurveys', params: { OrganisationId: this.$route.params.OrganisationId } })\r\n            },\r\n            finishSurvey () {\r\n                this.surveyResponse.finished = true\r\n                this.updateSurveyResponse({ mId: this.method.id, sId: this.survey.id, surveyResponse: { ...this.surveyResponse } })\r\n                this.$router.push({ name: 'method-survey-result', params: { OrganisationId: this.$route.params.OrganisationId, id: this.method.id, surveyId: this.survey.id } })\r\n            },\r\n            updateAnswer (id, answer) {\r\n                this.currentanswer = answer\r\n                console.log(this.currentanswer)\r\n                this.updateSurveyResponse({\r\n                    mId: this.method.id,\r\n                    sId: this.survey.id,\r\n                    surveyResponse: {\r\n                        ...this.surveyResponse,\r\n                        question_responses: [\r\n                            ...this.surveyResponse.question_responses,\r\n                            { direct_indicator_id: id, value: answer }\r\n                        ]\r\n                    }\r\n                })\r\n            },\r\n            completed (completed) {\r\n                console.log('>>', completed)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}