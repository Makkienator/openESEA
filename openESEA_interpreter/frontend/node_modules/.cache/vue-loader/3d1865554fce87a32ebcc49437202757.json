{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyResponse.vue?vue&type=template&id=61c780f4","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyResponse.vue","mtime":1707572265527},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0icC1kLWZsZXggcC1ncmlkIHAtamMtY2VudGVyIHAtbS0wIj4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMTIgcC1wLTMiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZGNlZGM4OyI+DQogICAgICAgICAgICA8aDE+e3tzdXJ2ZXkubmFtZX19PC9oMT4NCiAgICAgICAgICAgIDxoMz57e3N1cnZleS5kZXNjcmlwdGlvbn19PC9oMz4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9InAtZ3JpZCBwLWNvbC02IHAtcC0zIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IGJvcmRlci1yYWRpdXM6IDEwcHg7Ij4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InAtY29sLTYgcC10ZXh0LWxlZnQiPlRvcGljIHt7IHRvcGljTnVtYmVyICsgMX19IG9mIHt7dG90YWxUb3BpY3N9fTwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtNiBwLXRleHQtcmlnaHQiPjxQcm9ncmVzc0JhciA6dmFsdWU9InByb2dyZXNzQmFyVmFsdWUiPnt7cHJvZ3Jlc3NCYXJWYWx1ZX19JSBjb21wbGV0ZWQ8L1Byb2dyZXNzQmFyPjwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMTIgcC10ZXh0LWxlZnQiPjxoMz5Ub3BpYzogJ3t7Y3VycmVudFRvcGljLm5hbWV9fSc8L2gzPjwvZGl2Pg0KICAgICAgICAgICAgPHN1cnZleS1xdWVzdGlvbiBjbGFzcz0icC1jb2wtMTIiDQogICAgICAgICAgICB2LWZvcj0icXVlc3Rpb24gaW4gY3VycmVudFRvcGljLnF1ZXN0aW9ucyINCiAgICAgICAgICAgIDprZXk9InF1ZXN0aW9uLmlkIg0KICAgICAgICAgICAgOnF1ZXN0aW9uPSJxdWVzdGlvbiINCiAgICAgICAgICAgIDphbnN3ZXI9ImFuc3dlcnNbcXVlc3Rpb24uaWRdIg0KICAgICAgICAgICAgOmNoZWNrYW5zd2VycmVxdWlyZWQ9ImNoZWNrQW5zd2VyUmVxdWlyZWQiDQogICAgICAgICAgICBAaW5wdXQ9InVwZGF0ZUFuc3dlcihxdWVzdGlvbi5pZCwgJGV2ZW50KSINCiAgICAgICAgICAgIEBjb21wbGV0ZWQ9ImNvbXBsZXRlZCINCiAgICAgICAgICAgIC8+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtNiBwLXRleHQtbGVmdCI+DQogICAgICAgICAgICA8QnV0dG9uIGxhYmVsPSJQcmV2aW91cyBUb3BpYyIgY2xhc3M9InAtYnV0dG9uLXJhaXNlZCBwLWJ1dHRvbi1zbSIgOmRpc2FibGVkPSJ0b3BpY051bWJlciA9PT0gMCIgQGNsaWNrPSJwcmV2aW91c1RvcGljIi8+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJwLWNvbC0zIHAtdGV4dC1yaWdodCI+DQogICAgICAgICAgICA8QnV0dG9uIGxhYmVsPSJTYXZlIGZvciBOb3ciIGNsYXNzPSJwLWJ1dHRvbi1wcmltYXJ5IHAtYnV0dG9uLXJhaXNlZCBwLWJ1dHRvbi1zbSIgQGNsaWNrPSJzYXZlU3VydmV5IiAvPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMyBwLXRleHQtcmlnaHQiPg0KICAgICAgICAgICAgPEJ1dHRvbiB2LWlmPSJ0b3BpY051bWJlciArIDEgPCB0b3RhbFRvcGljcyIgbGFiZWw9Ik5leHQgVG9waWMiIGNsYXNzPSJwLWJ1dHRvbi1yYWlzZWQgcC1idXR0b24tc20iIHN0eWxlPSJ3aWR0aDogMTAwJSIgQGNsaWNrPSJuZXh0VG9waWMiIC8+DQogICAgICAgICAgICA8QnV0dG9uIHYtZWxzZSBsYWJlbD0iRmluaXNoIFN1cnZleSIgY2xhc3M9InAtY29sIHAtYnV0dG9uLXN1Y2Nlc3MgcC1idXR0b24tcmFpc2VkIHAtYnV0dG9uLXNtIiBzdHlsZT0id2lkdGg6IDEwMCUiIEBjbGljaz0iZmluaXNoU3VydmV5IiAvPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo="},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\survey\\SurveyResponse.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5H,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC3G,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC5I,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/I,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/survey/SurveyResponse.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"p-d-flex p-grid p-jc-center p-m-0\">\r\n        <div class=\"p-col-12 p-p-3\" style=\"background-color: #dcedc8;\">\r\n            <h1>{{survey.name}}</h1>\r\n            <h3>{{survey.description}}</h3>\r\n        </div>\r\n        <div class=\"p-grid p-col-6 p-p-3\" style=\"background-color: white; border-radius: 10px;\">\r\n            <div class=\"p-col-6 p-text-left\">Topic {{ topicNumber + 1}} of {{totalTopics}}</div>\r\n            <div class=\"p-col-6 p-text-right\"><ProgressBar :value=\"progressBarValue\">{{progressBarValue}}% completed</ProgressBar></div>\r\n            <div class=\"p-col-12 p-text-left\"><h3>Topic: '{{currentTopic.name}}'</h3></div>\r\n            <survey-question class=\"p-col-12\"\r\n            v-for=\"question in currentTopic.questions\"\r\n            :key=\"question.id\"\r\n            :question=\"question\"\r\n            :answer=\"answers[question.id]\"\r\n            :checkanswerrequired=\"checkAnswerRequired\"\r\n            @input=\"updateAnswer(question.id, $event)\"\r\n            @completed=\"completed\"\r\n            />\r\n\r\n        <div class=\"p-col-6 p-text-left\">\r\n            <Button label=\"Previous Topic\" class=\"p-button-raised p-button-sm\" :disabled=\"topicNumber === 0\" @click=\"previousTopic\"/>\r\n        </div>\r\n        <div class=\"p-col-3 p-text-right\">\r\n            <Button label=\"Save for Now\" class=\"p-button-primary p-button-raised p-button-sm\" @click=\"saveSurvey\" />\r\n        </div>\r\n        <div class=\"p-col-3 p-text-right\">\r\n            <Button v-if=\"topicNumber + 1 < totalTopics\" label=\"Next Topic\" class=\"p-button-raised p-button-sm\" style=\"width: 100%\" @click=\"nextTopic\" />\r\n            <Button v-else label=\"Finish Survey\" class=\"p-col p-button-success p-button-raised p-button-sm\" style=\"width: 100%\" @click=\"finishSurvey\" />\r\n        </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { mapActions, mapState } from 'vuex'\r\n    import SurveyQuestion from '../../components/survey/SurveyQuestion'\r\n    import ProgressBar from 'primevue/progressbar'\r\n\r\n    export default {\r\n        components: {\r\n            SurveyQuestion,\r\n            ProgressBar\r\n        },\r\n        data () {\r\n            return {\r\n            topicNumber: 0,\r\n            progressBarValue: 0,\r\n            currentanswer: null,\r\n            checkAnswerRequired: false\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapState('method', ['method']),\r\n            ...mapState('survey', ['survey']),\r\n            ...mapState('surveyResponse', ['surveyResponses', 'surveyResponse']),\r\n            currentTopic () {\r\n                return this.survey?.topics[0].sub_topics[this.topicNumber]\r\n            },\r\n            totalTopics () {\r\n                let totalTopics = 0\r\n                for (const topic in this.survey?.topics) {\r\n                    totalTopics = totalTopics + this.survey?.topics[topic].sub_topics.length\r\n                }\r\n                return totalTopics\r\n            },\r\n            answers () {\r\n                const answers = {}\r\n                if (this.surveyResponse?.id !== this.survey.id && this.surveyResponse.question_responses) {\r\n                    this.surveyResponse.question_responses.forEach((answer) => {\r\n                        answers[answer.direct_indicator_id] = answer.value\r\n                    })\r\n                }\r\n                return answers\r\n            }\r\n        },\r\n        created () {\r\n            this.initialize()\r\n        },\r\n        methods: {\r\n            ...mapActions('survey', ['fetchSurvey']),\r\n            ...mapActions('surveyResponse', ['fetchSurveyResponses', 'setSurveyResponse', 'updateSurveyResponse', 'createSurveyResponse']),\r\n            async initialize () {\r\n                await this.fetchSurvey({ mId: this.method.id, id: this.survey.id })\r\n                await this.fetchSurveyResponses({ mId: this.method.id, sId: this.survey.id, OiD: this.$route.params.OrganisationId, query: `?organisation=${this.$route.params.OrganisationId}` })\r\n                console.log(this.surveyResponses)\r\n                if (this.surveyResponses.length) {\r\n                    console.log('check')\r\n                    this.setSurveyResponse(this.surveyResponses[0])\r\n                    return\r\n                }\r\n                console.log('check')\r\n                this.createSurveyResponse({ mId: this.method.id, sId: this.survey.id, OrganisationId: this.$route.params.OrganisationId })\r\n            },\r\n            progress (pageturn) {\r\n                var interval = 100 / this.totalTopics\r\n                if (pageturn === 'back') {\r\n                    this.progressBarValue -= interval\r\n                }\r\n                if (pageturn === 'next') {\r\n                    this.progressBarValue += interval\r\n                }\r\n            },\r\n            previousTopic () {\r\n                if (this.topicNumber > 0) {\r\n                    this.topicNumber -= 1\r\n                    this.progress('back')\r\n                }\r\n            },\r\n            nextTopic () {\r\n                if (this.topicNumber + 1 < this.totalTopics) {\r\n                    this.checkAnswerRequired = !this.checkAnswerRequired\r\n                    this.topicNumber += 1\r\n                    this.progress('next')\r\n                }\r\n            },\r\n            saveSurvey () {\r\n                this.updateSurveyResponse({ mId: this.method.id, sId: this.survey.id, surveyResponse: { ...this.surveyResponse } })\r\n                this.$router.push({ name: 'organisationsurveys', params: { OrganisationId: this.$route.params.OrganisationId } })\r\n            },\r\n            finishSurvey () {\r\n                this.surveyResponse.finished = true\r\n                this.updateSurveyResponse({ mId: this.method.id, sId: this.survey.id, surveyResponse: { ...this.surveyResponse } })\r\n                this.$router.push({ name: 'method-survey-result', params: { OrganisationId: this.$route.params.OrganisationId, id: this.method.id, surveyId: this.survey.id } })\r\n            },\r\n            updateAnswer (id, answer) {\r\n                this.currentanswer = answer\r\n                console.log(this.currentanswer)\r\n                this.updateSurveyResponse({\r\n                    mId: this.method.id,\r\n                    sId: this.survey.id,\r\n                    surveyResponse: {\r\n                        ...this.surveyResponse,\r\n                        question_responses: [\r\n                            ...this.surveyResponse.question_responses,\r\n                            { direct_indicator_id: id, value: answer }\r\n                        ]\r\n                    }\r\n                })\r\n            },\r\n            completed (completed) {\r\n                console.log('>>', completed)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n"]}]}