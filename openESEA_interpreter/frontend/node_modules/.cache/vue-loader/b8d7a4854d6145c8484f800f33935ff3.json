{"remainingRequest":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\audit\\single\\AuditQuestionSelection.vue?vue&type=template&id=24fca9d8","dependencies":[{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\audit\\single\\AuditQuestionSelection.vue","mtime":1707572265492},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1741014593746},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1741014602863},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741014584802},{"path":"C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1741014595374}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgPGRpdiBjbGFzcz0icC1ncmlkIHAtbS01Ij4NCiAgICAgICAgPGRpdiBjbGFzcz0icC1jb2wtMTIgcC1kLWZsZXggcC1haS1jZW50ZXIgcC1qYy1iZXR3ZWVuIj4NCiAgICAgICAgICAgIDxoMiBjbGFzcz0icC10ZXh0LWxlZnQiPkF1ZGl0IFNlbGVjdGlvbjwvaDI+DQogICAgICAgICAgICA8IS0tIHt7c2VsZWN0ZWRRdWVzdGlvbnN9fSAtLT4NCiAgICAgICAgICAgIDwhLS0ge3tjaG9zZW5EaXJlY3RJbmRpY2F0b3JzfX0gLS0+DQogICAgICAgICAgICA8QnV0dG9uIEBjbGljaz0iKGhlbHBEaWFsb2cgPSAhaGVscERpYWxvZykiIGxhYmVsPSJIZWxwIiBjbGFzcz0icC1idXR0b24tc20gcC1idXR0b24td2FybmluZyIgaWNvbj0icGkgcGktZXh0ZXJuYWwtbGluayIgLz4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxEYXRhVGFibGUgY2xhc3M9InAtY29sLTEyIiA6dmFsdWU9ImluZGljYXRvcnMiIHJvd0dyb3VwTW9kZT0icm93c3BhbiIgZ3JvdXBSb3dzQnk9InNlY3Rpb24ubmFtZSIgc29ydE1vZGU9InNpbmdsZSIgc29ydEZpZWxkPSJzZWN0aW9uLm5hbWUiIDpzb3J0T3JkZXI9IjEiIHJlc3BvbnNpdmVMYXlvdXQ9InNjcm9sbCINCiAgICAgICAgdi1tb2RlbDpleHBhbmRlZFJvd0dyb3Vwcz0iZXhwYW5kZWRSb3dHcm91cHMiIEByb3dncm91cEV4cGFuZD0ib25Sb3dHcm91cEV4cGFuZCIgQHJvd2dyb3VwQ29sbGFwc2U9Im9uUm93R3JvdXBDb2xsYXBzZSIgdi1tb2RlbDpzZWxlY3Rpb249InNlbGVjdGVkUXVlc3Rpb25zIiBkYXRhS2V5PSJuYW1lIj4NCiAgICAgICAgICAgIDxDb2x1bW4gc2VsZWN0aW9uTW9kZT0ibXVsdGlwbGUiIGhlYWRlclN0eWxlPSJ3aWR0aDogM2VtIj48L0NvbHVtbj4NCiAgICAgICAgICAgIDxDb2x1bW4gZmllbGQ9InRvcGljIiBoZWFkZXI9IlRvcGljIiBzb3J0YWJsZT48L0NvbHVtbj4NCiAgICAgICAgICAgIDxDb2x1bW4gZmllbGQ9Im5hbWUiIGhlYWRlcj0iTmFtZSIgc29ydGFibGU+PC9Db2x1bW4+DQogICAgICAgICAgICA8Q29sdW1uIGZpZWxkPSJ2YWx1ZSIgaGVhZGVyPSJWYWx1ZSI+PC9Db2x1bW4+DQogICAgICAgICAgICA8Q29sdW1uIGZpZWxkPSJjcml0aWNhbF9pbXBhY3QiIGhlYWRlcj0iQ3JpdGljYWwgSW1wYWN0IiBzb3J0YWJsZT4NCiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2JvZHk9ImRhdGEiPiA8IS0tIChyb3cuZGF0YS5jcml0aWNhbF9pbXBhY3QgJiByb3cuZGF0YS5vdXRsaWVycykgLS0+DQogICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdi1pZj0iZGF0YS5kYXRhLmNyaXRpY2FsX2ltcGFjdCIgbGFiZWw9IkNyaXRpY2FsIiBjbGFzcz0icC1idXR0b24tc20gcC1idXR0b24tcm91bmRlZCBwLXB5LTEgcC1idXR0b24tZGFuZ2VyIiBAY2xpY2s9Im9wZW5Dcml0aWNhbERpYWxvZyhkYXRhLmRhdGEpIiAvPg0KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+DQogICAgICAgICAgICA8L0NvbHVtbj4NCiAgICAgICAgICAgIDxDb2x1bW4gaGVhZGVyPSJBbm9tYWx5IiBzb3J0YWJsZT4NCiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgI2JvZHk9InJvdyI+IDwhLS0gKHJvdy5kYXRhLmNyaXRpY2FsX2ltcGFjdCAmIHJvdy5kYXRhLm91dGxpZXJzKSAtLT4NCiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvbiB2LWlmPSJyb3cuZGF0YS5vdXRsaWVycyIgbGFiZWw9IkFub21hbHkiIGNsYXNzPSJwLWJ1dHRvbi1zbSBwLWJ1dHRvbi1yb3VuZGVkIHAtcHktMSBwLWJ1dHRvbi1kYW5nZXIiIC8+DQogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4NCiAgICAgICAgICAgIDwvQ29sdW1uPg0KICAgICAgICAgICAgPENvbHVtbiBoZWFkZXJTdHlsZT0id2lkdGg6IDRyZW07IHRleHQtYWxpZ246IGNlbnRlciIgYm9keVN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG92ZXJmbG93OiB2aXNpYmxlIj4NCiAgICAgICAgICAgICAgICA8IS0tIDx0ZW1wbGF0ZSAjYm9keT0iZGF0YSI+DQogICAgICAgICAgICAgICAgICAgIDxCdXR0b24gQGNsaWNrPSJTaG93T3V0bGllckRldGVjdGlvbk1ldGhvZHMoZGF0YSkiIGljb249InBpIHBpLWNoYXJ0LWJhciIgY2xhc3M9InAtYnV0dG9tLXNtIiBzdHlsZT0id2lkdGg6IDMwcHg7IGhlaWdodDogMzBweDsiPjwvQnV0dG9uPg0KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+IC0tPg0KICAgICAgICAgICAgPC9Db2x1bW4+DQogICAgICAgIDwvRGF0YVRhYmxlPg0KICAgICAgICA8ZGl2IGNsYXNzPSJwLXRleHQtcmlnaHQgcC1jb2wtMTIgcC1hcy1lbmQiPg0KICAgICAgICAgICAgPEJ1dHRvbiBjbGFzcz0icC1teS01IiBsYWJlbD0iU3RhcnQgYXVkaXQgZm9yIHNlbGVjdGVkIHF1ZXN0aW9ucyIgQGNsaWNrPSJzdGFydEF1ZGl0KHNlbGVjdGVkUXVlc3Rpb25zKSIgOmRpc2FibGVkPSIhc2VsZWN0ZWRRdWVzdGlvbnMubGVuZ3RoIiBpY29uPSJwaSBwaS1jaGVjayIgLz4NCiAgICAgICAgPC9kaXY+DQogICAgICAgIDxEaWFsb2cgdi1tb2RlbDp2aXNpYmxlPSJoZWxwRGlhbG9nIiBzdHlsZT0id2lkdGg6IDUwMHB4OyIgaGVhZGVyPSJIZWxwIiA6bW9kYWw9InRydWUiIGRpc21pc3NhYmxlTWFzaz0idHJ1ZSI+DQogICAgICAgICAgICA8cD5QbGVhc2Ugc2VsZWN0IHRoZSBxdWVzdGlvbnMgdGhhdCB5b3Ugd2FudCB0byBhdWRpdC48L3A+DQoNCiAgICAgICAgICAgIDxwPkluIHRoZSBuZXh0IHN0ZXAsIHlvdSB3aWxsIGJlIGFibGUgdG8gcmVxdWVzdCBkb2N1bWVudGF0aW9uIGZvciB5b3VyIHNlbGVjdGVkIHF1ZXN0aW9ucy48L3A+DQogICAgICAgICAgICA8dGVtcGxhdGUgI2Zvb3Rlcj4NCiAgICAgICAgICAgICAgICA8QnV0dG9uIGxhYmVsPSJPayIgaWNvbj0icGkgcGktY2hlY2siIEBjbGljaz0iKGhlbHBEaWFsb2cgPSAhaGVscERpYWxvZykiIC8+DQogICAgICAgICAgICA8L3RlbXBsYXRlPg0KICAgICAgICA8L0RpYWxvZz4NCg0KICAgICAgICA8RGlhbG9nIHYtbW9kZWw6dmlzaWJsZT0iY3JpdGljYWxEaWFsb2ciIHN0eWxlPSJ3aWR0aDogNTAwcHg7IiA6aGVhZGVyPSJgQ3JpdGljYWwgSW1wYWN0OiAke2luZGljYXRvcl9uYW1lfWAiIDptb2RhbD0idHJ1ZSIgZGlzbWlzc2FibGVNYXNrPSJ0cnVlIj4NCiAgICAgICAgPHAgY2xhc3M9InAtdGV4dC1qdXN0aWZ5Ij5UaGlzIEluZGljYXRvciB3YXMgZmxhZ2dlZCBhcyBjcml0aWNhbCBkdWUgdG8gaXQncyBpbmRpcmVjdCBpbmRpY2F0b3IgcGFyZW50OiA8Yj4ne3sgY3JpdGljYWxEaWFsb2dJbmRpY2F0b3IuY3JpdGljYWxfaW1wYWN0X2J5LmluZGljYXRvciB9fSc8L2I+IHdoaWNoIGhhcyBhbiA8Yj5pbXBhY3Qgb2YgJ3t7IGNyaXRpY2FsRGlhbG9nSW5kaWNhdG9yLmNyaXRpY2FsX2ltcGFjdF9ieS5pbXBhY3QgfX0nPC9iPg0KICAgICAgICB3aGljaCB3b3VsZCBsb3dlciB0aGUgPGI+dG90YWwgc2NvcmUgb2YgJ3t7IGNyaXRpY2FsRGlhbG9nSW5kaWNhdG9yLmNyaXRpY2FsX2ltcGFjdF9ieS50b3RhbF9zY29yZSB9fSc8L2I+IHRvIDxiPid7eyAoY3JpdGljYWxEaWFsb2dJbmRpY2F0b3IuY3JpdGljYWxfaW1wYWN0X2J5LnRvdGFsX3Njb3JlIC0gY3JpdGljYWxEaWFsb2dJbmRpY2F0b3IuY3JpdGljYWxfaW1wYWN0X2J5LmltcGFjdCkudG9GaXhlZCgyKSB9fSc8L2I+LCB3aGljaCBpcyBiZWxvdyB0aGUgPGI+dGhyZXNob2xkIG9mICd7e21ldGhvZC5jZXJ0aWZpY2F0aW9uX3RoZXNob2xkfX0nPC9iPi4NCiAgICAgICAgPC9wPg0KICAgICAgICA8L0RpYWxvZz4NCg0KICAgIDwvZGl2Pg0K"},{"version":3,"sources":["C:\\Users\\Marc\\source\\repos\\openESEA\\openESEA_interpreter\\frontend\\src\\views\\audit\\single\\AuditQuestionSelection.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAC7B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClpxK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpgBAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;ogBAClK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBACzgBAClH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACdgBACnG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvgBAC7I,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACvzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEzD,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACdllhU,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEZ,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/Marc/source/repos/openESEA/openESEA_interpreter/frontend/src/views/audit/single/AuditQuestionSelection.vue","sourceRoot":"","sourcesContent":["<template>\r\n    <div class=\"p-grid p-m-5\">\r\n        <div class=\"p-col-12 p-d-flex p-ai-center p-jc-between\">\r\n            <h2 class=\"p-text-left\">Audit Selection</h2>\r\n            <!-- {{selectedQuestions}} -->\r\n            <!-- {{chosenDirectIndicators}} -->\r\n            <Button @click=\"(helpDialog = !helpDialog)\" label=\"Help\" class=\"p-button-sm p-button-warning\" icon=\"pi pi-external-link\" />\r\n        </div>\r\n        <DataTable class=\"p-col-12\" :value=\"indicators\" rowGroupMode=\"rowspan\" groupRowsBy=\"section.name\" sortMode=\"single\" sortField=\"section.name\" :sortOrder=\"1\" responsiveLayout=\"scroll\"\r\n        v-model:expandedRowGroups=\"expandedRowGroups\" @rowgroupExpand=\"onRowGroupExpand\" @rowgroupCollapse=\"onRowGroupCollapse\" v-model:selection=\"selectedQuestions\" dataKey=\"name\">\r\n            <Column selectionMode=\"multiple\" headerStyle=\"width: 3em\"></Column>\r\n            <Column field=\"topic\" header=\"Topic\" sortable></Column>\r\n            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n            <Column field=\"value\" header=\"Value\"></Column>\r\n            <Column field=\"critical_impact\" header=\"Critical Impact\" sortable>\r\n                <template #body=\"data\"> <!-- (row.data.critical_impact & row.data.outliers) -->\r\n                    <Button v-if=\"data.data.critical_impact\" label=\"Critical\" class=\"p-button-sm p-button-rounded p-py-1 p-button-danger\" @click=\"openCriticalDialog(data.data)\" />\r\n                </template>\r\n            </Column>\r\n            <Column header=\"Anomaly\" sortable>\r\n                <template #body=\"row\"> <!-- (row.data.critical_impact & row.data.outliers) -->\r\n                    <Button v-if=\"row.data.outliers\" label=\"Anomaly\" class=\"p-button-sm p-button-rounded p-py-1 p-button-danger\" />\r\n                </template>\r\n            </Column>\r\n            <Column headerStyle=\"width: 4rem; text-align: center\" bodyStyle=\"text-align: center; overflow: visible\">\r\n                <!-- <template #body=\"data\">\r\n                    <Button @click=\"ShowOutlierDetectionMethods(data)\" icon=\"pi pi-chart-bar\" class=\"p-buttom-sm\" style=\"width: 30px; height: 30px;\"></Button>\r\n                </template> -->\r\n            </Column>\r\n        </DataTable>\r\n        <div class=\"p-text-right p-col-12 p-as-end\">\r\n            <Button class=\"p-my-5\" label=\"Start audit for selected questions\" @click=\"startAudit(selectedQuestions)\" :disabled=\"!selectedQuestions.length\" icon=\"pi pi-check\" />\r\n        </div>\r\n        <Dialog v-model:visible=\"helpDialog\" style=\"width: 500px;\" header=\"Help\" :modal=\"true\" dismissableMask=\"true\">\r\n            <p>Please select the questions that you want to audit.</p>\r\n\r\n            <p>In the next step, you will be able to request documentation for your selected questions.</p>\r\n            <template #footer>\r\n                <Button label=\"Ok\" icon=\"pi pi-check\" @click=\"(helpDialog = !helpDialog)\" />\r\n            </template>\r\n        </Dialog>\r\n\r\n        <Dialog v-model:visible=\"criticalDialog\" style=\"width: 500px;\" :header=\"`Critical Impact: ${indicator_name}`\" :modal=\"true\" dismissableMask=\"true\">\r\n        <p class=\"p-text-justify\">This Indicator was flagged as critical due to it's indirect indicator parent: <b>'{{ criticalDialogIndicator.critical_impact_by.indicator }}'</b> which has an <b>impact of '{{ criticalDialogIndicator.critical_impact_by.impact }}'</b>\r\n        which would lower the <b>total score of '{{ criticalDialogIndicator.critical_impact_by.total_score }}'</b> to <b>'{{ (criticalDialogIndicator.critical_impact_by.total_score - criticalDialogIndicator.critical_impact_by.impact).toFixed(2) }}'</b>, which is below the <b>threshold of '{{method.certification_theshold}}'</b>.\r\n        </p>\r\n        </Dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex'\r\n\r\nexport default {\r\n    data () {\r\n        return {\r\n            helpDialog: false,\r\n            criticalDialog: false,\r\n            expandedRowGroups: null,\r\n            selectedQuestions: [],\r\n            criticalDialogIndicator: {},\r\n            chosenDirectIndicators: []\r\n            // questions: [\r\n            //     {\r\n            //         name: 'What is the total number of men staff?',\r\n            //         response: 5,\r\n            //         recommendations: '',\r\n            //         section: { name: 'Gender' }\r\n            //     },\r\n            //     {\r\n            //         name: 'What is the total number of women staff?',\r\n            //         response: 7,\r\n            //         recommendations: '',\r\n            //         section: { name: 'Gender' }\r\n\r\n            //     },\r\n            //     {\r\n            //         name: 'What is the average monthly salary per employee?',\r\n            //         response: '$4000',\r\n            //         recommendations: '',\r\n            //         section: { name: 'Salary' }\r\n            //     }\r\n            // ]\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState('auditIndicators', ['indicators', 'selectedIndicators']),\r\n        ...mapState('method', ['method']),\r\n        ...mapState('surveyResponse', ['surveyResponse']),\r\n        ...mapState('surveyAudit', ['surveyAudit']),\r\n        ...mapState('eseaAccount', ['eseaAccount']),\r\n        indicator_name () {\r\n            if ('name' in this.criticalDialogIndicator) {\r\n                return this.criticalDialogIndicator.name\r\n            } else {\r\n                return 'indicator'\r\n            }\r\n        }\r\n        // directIndicators () {\r\n        //     return this.selectedQuestions.map((question) => {\r\n        //         if (question.absolute_weights.length) { return item }\r\n        //         return Object.assign(item, data)\r\n        // }\r\n    },\r\n    mounted () {\r\n        this.selectedQuestions = this.selectedIndicators\r\n    },\r\n    methods: {\r\n        ...mapActions('auditIndicators', ['selectIndicators']),\r\n        ...mapActions('surveyResponse', ['fetchSurveyResponse']),\r\n        ...mapActions('questionResponse', ['updateQuestionResponse']),\r\n        async startAudit (selectedQuestions) {\r\n            // Gets Direct Indicators belonging to an indirect indicator\r\n            await this.fetchSurveyResponse({ oId: this.eseaAccount?.organisation, eaId: this.eseaAccount?.id, id: `survey=${this.surveyAudit.survey}` })\r\n            var self = this\r\n            var chosenDirectIndicators = []\r\n            selectedQuestions.forEach(function (question) {\r\n                if (question?.formula) {\r\n                chosenDirectIndicators.push(self.getAllChildren(question.absolute_weights))\r\n                } else {\r\n                    chosenDirectIndicators.push(question.key)\r\n                }\r\n            })\r\n            this.chosenDirectIndicators = [...new Set(chosenDirectIndicators.flat())]\r\n\r\n            var selectedIndicators = []\r\n            for (const directIndicator of this.chosenDirectIndicators) {\r\n                // console.log(directIndicator)\r\n                console.log(directIndicator)\r\n                const indicator = this.indicators.find(indicator => indicator.key === directIndicator)\r\n                if (indicator) {\r\n                    // change surveyResponse.question_responses to questionResponses to be able to see the updated database on updated question response changes!\r\n                    indicator.question_response = this.surveyResponse.question_responses.find(questionResponse => questionResponse.direct_indicator_key === indicator.key)\r\n                    selectedIndicators.push(indicator)\r\n                }\r\n                // should use these direct indicator id's to update the question responses\r\n                // await this.updateQuestionResponse({})\r\n            }\r\n            console.log(selectedIndicators)\r\n            await this.selectIndicators({ indicators: selectedIndicators })\r\n            // ToDo: Change audit status of question responses (also in backend)!\r\n            for (var indicator of selectedIndicators) {\r\n                if (indicator.question_response.auditstatus === 'Not Under Audit') {\r\n                    indicator.question_response.auditstatus = 'Open'\r\n                }\r\n                this.updateQuestionResponse({ oId: 0, eaId: 0, id: indicator.question_response.id, data: indicator.question_response })\r\n            }\r\n            this.$router.push({ name: 'documentationrequest', params: { EseaAccountId: this.$route.params.EseaAccountId, SurveyId: this.$route.params.SurveyId } })\r\n        },\r\n        openCriticalDialog (indicator) {\r\n            this.criticalDialogIndicator = indicator\r\n            this.criticalDialog = true\r\n        },\r\n        ShowOutlierDetectionMethods () {\r\n            // Show outlier detection methods dialog\r\n            // console.log('...')\r\n        },\r\n        onRowGroupExpand () {\r\n        },\r\n        onRowGroupCollapse () {\r\n        },\r\n        getAllChildren (group, children) {\r\n            children = children || []\r\n            // console.log(typeof group, group, children)\r\n            if (group) {\r\n                for (const value of Object.values(group)) {\r\n                    if (Object.prototype.toString.call(value) === '[object Object]') {\r\n                        this.getAllChildren(value, children)\r\n                    } else {\r\n                        children.push(value)\r\n                    }\r\n                }\r\n                return children\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}